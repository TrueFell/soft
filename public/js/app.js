/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./lib/axios */ "./node_modules/axios/lib/axios.js");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var settle = __webpack_require__(/*! ./../core/settle */ "./node_modules/axios/lib/core/settle.js");
var cookies = __webpack_require__(/*! ./../helpers/cookies */ "./node_modules/axios/lib/helpers/cookies.js");
var buildURL = __webpack_require__(/*! ./../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ "./node_modules/axios/lib/core/buildFullPath.js");
var parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ "./node_modules/axios/lib/helpers/parseHeaders.js");
var isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ "./node_modules/axios/lib/helpers/isURLSameOrigin.js");
var createError = __webpack_require__(/*! ../core/createError */ "./node_modules/axios/lib/core/createError.js");

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");
var Axios = __webpack_require__(/*! ./core/Axios */ "./node_modules/axios/lib/core/Axios.js");
var mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");
var defaults = __webpack_require__(/*! ./defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");
axios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ "./node_modules/axios/lib/cancel/CancelToken.js");
axios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(/*! ./helpers/spread */ "./node_modules/axios/lib/helpers/spread.js");

// Expose isAxiosError
axios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ "./node_modules/axios/lib/helpers/isAxiosError.js");

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Cancel = __webpack_require__(/*! ./Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var buildURL = __webpack_require__(/*! ../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ "./node_modules/axios/lib/core/InterceptorManager.js");
var dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ "./node_modules/axios/lib/core/dispatchRequest.js");
var mergeConfig = __webpack_require__(/*! ./mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ "./node_modules/axios/lib/helpers/isAbsoluteURL.js");
var combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ "./node_modules/axios/lib/helpers/combineURLs.js");

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var enhanceError = __webpack_require__(/*! ./enhanceError */ "./node_modules/axios/lib/core/enhanceError.js");

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var transformData = __webpack_require__(/*! ./transformData */ "./node_modules/axios/lib/core/transformData.js");
var isCancel = __webpack_require__(/*! ../cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");
var defaults = __webpack_require__(/*! ../defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = [
    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'
  ];
  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys)
    .concat(directMergeKeys);

  var otherKeys = Object
    .keys(config1)
    .concat(Object.keys(config2))
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, mergeDeepProperties);

  return config;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var createError = __webpack_require__(/*! ./createError */ "./node_modules/axios/lib/core/createError.js");

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ "./node_modules/axios/lib/helpers/normalizeHeaderName.js");

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(/*! ./adapters/xhr */ "./node_modules/axios/lib/adapters/xhr.js");
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(/*! ./adapters/http */ "./node_modules/axios/lib/adapters/xhr.js");
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;


/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return (typeof payload === 'object') && (payload.isAxiosError === true);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};


/***/ }),

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./bootstrap */ "./resources/js/bootstrap.js");

__webpack_require__(/*! coffeescript */ "./node_modules/coffeescript/lib/coffeescript-browser-compiler-legacy/coffeescript.js");

/***/ }),

/***/ "./resources/js/bootstrap.js":
/*!***********************************!*\
  !*** ./resources/js/bootstrap.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

window._ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/**
 * We'll load the axios HTTP library which allows us to easily issue requests
 * to our Laravel back-end. This library automatically handles sending the
 * CSRF token as a header based on the value of the "XSRF" token cookie.
 */

window.axios = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
window.$ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
window.Swal = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';
/**
 * Echo exposes an expressive API for subscribing to channels and listening
 * for events that are broadcast by Laravel. Echo and event broadcasting
 * allows your team to easily build robust real-time web applications.
 */
// import Echo from 'laravel-echo';
// window.Pusher = require('pusher-js');
// window.Echo = new Echo({
//     broadcaster: 'pusher',
//     key: process.env.MIX_PUSHER_APP_KEY,
//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,
//     forceTLS: true
// });

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = __webpack_require__.g.TYPED_ARRAY_SUPPORT !== undefined
  ? __webpack_require__.g.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}


/***/ }),

/***/ "./node_modules/coffeescript/lib/coffeescript-browser-compiler-legacy/coffeescript.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/coffeescript/lib/coffeescript-browser-compiler-legacy/coffeescript.js ***!
  \********************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * CoffeeScript Compiler v2.5.1
 * https://coffeescript.org
 *
 * Copyright 2011-2020, Jeremy Ashkenas
 * Released under the MIT License
 */
function _get(target,property,receiver){return _get="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(target,property,receiver){var base=_superPropBase(target,property);if(base){var desc=Object.getOwnPropertyDescriptor(base,property);return desc.get?desc.get.call(receiver):desc.value}},_get(target,property,receiver||target)}function _superPropBase(object,property){for(;!Object.prototype.hasOwnProperty.call(object,property)&&(object=_getPrototypeOf(object),null!==object););return object}function _possibleConstructorReturn(self,call){return call&&("object"===_typeof(call)||"function"==typeof call)?call:_assertThisInitialized(self)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _toArray(arr){return _arrayWithHoles(arr)||_iterableToArray(arr)||_nonIterableRest()}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(arr,i){if(Symbol.iterator in Object(arr)||"[object Arguments]"===Object.prototype.toString.call(arr)){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i["return"]||_i["return"]()}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0,descriptor;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||"[object Arguments]"===Object.prototype.toString.call(iter))return Array.from(iter)}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}}(function(root){var CoffeeScript=function(){var _Mathabs=Math.abs,_StringfromCharCode=String.fromCharCode,_Mathfloor=Math.floor;function require(path){return require[path]}return require["../../package.json"]=function(){return{name:"coffeescript",description:"Unfancy JavaScript",keywords:["javascript","language","coffeescript","compiler"],author:"Jeremy Ashkenas",version:"2.5.1",license:"MIT",engines:{node:">=6"},directories:{lib:"./lib/coffeescript"},main:"./lib/coffeescript/index",module:"./lib/coffeescript-browser-compiler-modern/coffeescript.js",browser:"./lib/coffeescript-browser-compiler-legacy/coffeescript.js",bin:{coffee:"./bin/coffee",cake:"./bin/cake"},files:["bin","lib","register.js","repl.js"],scripts:{test:"node ./bin/cake test","test-harmony":"node --harmony ./bin/cake test"},homepage:"https://coffeescript.org",bugs:"https://github.com/jashkenas/coffeescript/issues",repository:{type:"git",url:"git://github.com/jashkenas/coffeescript.git"},devDependencies:{"@babel/core":"^7.7.7","@babel/preset-env":"^7.7.7","babel-preset-minify":"^0.5.1",codemirror:"^5.50.0",docco:"~0.8.0","highlight.js":"~9.17.1",jison:"^0.4.18","markdown-it":"~10.0.0",underscore:"~1.9.1",webpack:"~4.41.5"},dependencies:{}}}(),require["./helpers"]=function(){var exports={};return function(){var indexOf=[].indexOf,UNICODE_CODE_POINT_ESCAPE,attachCommentsToNode,buildLocationData,buildLocationHash,buildTokenDataDictionary,extend,_flatten,isBoolean,isNumber,isString,ref,repeat,syntaxErrorToString,unicodeCodePointToUnicodeEscapes;exports.starts=function(string,literal,start){return literal===string.substr(start,literal.length)},exports.ends=function(string,literal,back){var len;return len=literal.length,literal===string.substr(string.length-len-(back||0),len)},exports.repeat=repeat=function(str,n){var res;for(res="";0<n;)1&n&&(res+=str),n>>>=1,str+=str;return res},exports.compact=function(array){var i,item,len1,results;for(results=[],i=0,len1=array.length;i<len1;i++)item=array[i],item&&results.push(item);return results},exports.count=function(string,substr){var num,pos;if(num=pos=0,!substr.length)return 1/0;for(;pos=1+string.indexOf(substr,pos);)num++;return num},exports.merge=function(options,overrides){return extend(extend({},options),overrides)},extend=exports.extend=function(object,properties){var key,val;for(key in properties)val=properties[key],object[key]=val;return object},exports.flatten=_flatten=function flatten(array){var element,flattened,i,len1;for(flattened=[],i=0,len1=array.length;i<len1;i++)element=array[i],"[object Array]"===Object.prototype.toString.call(element)?flattened=flattened.concat(_flatten(element)):flattened.push(element);return flattened},exports.del=function(obj,key){var val;return val=obj[key],delete obj[key],val},exports.some=null==(ref=Array.prototype.some)?function(fn){var e,i,len1,ref1;for(ref1=this,i=0,len1=ref1.length;i<len1;i++)if(e=ref1[i],fn(e))return!0;return!1}:ref,exports.invertLiterate=function(code){var blankLine,i,indented,insideComment,len1,line,listItemStart,out,ref1;for(out=[],blankLine=/^\s*$/,indented=/^[\t ]/,listItemStart=/^(?:\t?| {0,3})(?:[\*\-\+]|[0-9]{1,9}\.)[ \t]/,insideComment=!1,ref1=code.split("\n"),(i=0,len1=ref1.length);i<len1;i++)line=ref1[i],blankLine.test(line)?(insideComment=!1,out.push(line)):insideComment||listItemStart.test(line)?(insideComment=!0,out.push("# ".concat(line))):!insideComment&&indented.test(line)?out.push(line):(insideComment=!0,out.push("# ".concat(line)));return out.join("\n")},buildLocationData=function(first,last){return last?{first_line:first.first_line,first_column:first.first_column,last_line:last.last_line,last_column:last.last_column,last_line_exclusive:last.last_line_exclusive,last_column_exclusive:last.last_column_exclusive,range:[first.range[0],last.range[1]]}:first},exports.extractAllCommentTokens=function(tokens){var allCommentsObj,comment,commentKey,i,j,k,key,len1,len2,len3,ref1,results,sortedKeys,token;for(allCommentsObj={},i=0,len1=tokens.length;i<len1;i++)if(token=tokens[i],token.comments)for(ref1=token.comments,j=0,len2=ref1.length;j<len2;j++)comment=ref1[j],commentKey=comment.locationData.range[0],allCommentsObj[commentKey]=comment;for(sortedKeys=Object.keys(allCommentsObj).sort(function(a,b){return a-b}),results=[],(k=0,len3=sortedKeys.length);k<len3;k++)key=sortedKeys[k],results.push(allCommentsObj[key]);return results},buildLocationHash=function(loc){return"".concat(loc.range[0],"-").concat(loc.range[1])},exports.buildTokenDataDictionary=buildTokenDataDictionary=function(tokens){var base1,i,len1,token,tokenData,tokenHash;for(tokenData={},i=0,len1=tokens.length;i<len1;i++)if((token=tokens[i],!!token.comments)&&(tokenHash=buildLocationHash(token[2]),null==tokenData[tokenHash]&&(tokenData[tokenHash]={}),token.comments)){var _ref;(_ref=null==(base1=tokenData[tokenHash]).comments?base1.comments=[]:base1.comments).push.apply(_ref,_toConsumableArray(token.comments))}return tokenData},exports.addDataToNode=function(parserState,firstLocationData,firstValue,lastLocationData,lastValue){var forceUpdateLocation=!(5<arguments.length&&void 0!==arguments[5])||arguments[5];return function(obj){var locationData,objHash,ref1,ref2,ref3;return locationData=buildLocationData(null==(ref1=null==firstValue?void 0:firstValue.locationData)?firstLocationData:ref1,null==(ref2=null==lastValue?void 0:lastValue.locationData)?lastLocationData:ref2),null!=(null==obj?void 0:obj.updateLocationDataIfMissing)&&null!=firstLocationData?obj.updateLocationDataIfMissing(locationData,forceUpdateLocation):obj.locationData=locationData,null==parserState.tokenData&&(parserState.tokenData=buildTokenDataDictionary(parserState.parser.tokens)),null!=obj.locationData&&(objHash=buildLocationHash(obj.locationData),null!=(null==(ref3=parserState.tokenData[objHash])?void 0:ref3.comments)&&attachCommentsToNode(parserState.tokenData[objHash].comments,obj)),obj}},exports.attachCommentsToNode=attachCommentsToNode=function(comments,node){var _node$comments;if(null!=comments&&0!==comments.length)return null==node.comments&&(node.comments=[]),(_node$comments=node.comments).push.apply(_node$comments,_toConsumableArray(comments))},exports.locationDataToString=function(obj){var locationData;return"2"in obj&&"first_line"in obj[2]?locationData=obj[2]:"first_line"in obj&&(locationData=obj),locationData?"".concat(locationData.first_line+1,":").concat(locationData.first_column+1,"-")+"".concat(locationData.last_line+1,":").concat(locationData.last_column+1):"No location data"},exports.baseFileName=function(file){var stripExt=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],useWinPathSep=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],parts,pathSep;return(pathSep=useWinPathSep?/\\|\//:/\//,parts=file.split(pathSep),file=parts[parts.length-1],!(stripExt&&0<=file.indexOf(".")))?file:(parts=file.split("."),parts.pop(),"coffee"===parts[parts.length-1]&&1<parts.length&&parts.pop(),parts.join("."))},exports.isCoffee=function(file){return /\.((lit)?coffee|coffee\.md)$/.test(file)},exports.isLiterate=function(file){return /\.(litcoffee|coffee\.md)$/.test(file)},exports.throwSyntaxError=function(message,location){var error;throw error=new SyntaxError(message),error.location=location,error.toString=syntaxErrorToString,error.stack=error.toString(),error},exports.updateSyntaxError=function(error,code,filename){return error.toString===syntaxErrorToString&&(error.code||(error.code=code),error.filename||(error.filename=filename),error.stack=error.toString()),error},syntaxErrorToString=function(){var codeLine,colorize,colorsEnabled,end,filename,first_column,first_line,last_column,last_line,marker,ref1,ref2,ref3,start;if(!(this.code&&this.location))return Error.prototype.toString.call(this);var _this$location=this.location;return first_line=_this$location.first_line,first_column=_this$location.first_column,last_line=_this$location.last_line,last_column=_this$location.last_column,null==last_line&&(last_line=first_line),null==last_column&&(last_column=first_column),filename=this.filename||"[stdin]",codeLine=this.code.split("\n")[first_line],start=first_column,end=first_line===last_line?last_column+1:codeLine.length,marker=codeLine.slice(0,start).replace(/[^\s]/g," ")+repeat("^",end-start),"undefined"!=typeof process&&null!==process&&(colorsEnabled=(null==(ref1=process.stdout)?void 0:ref1.isTTY)&&(null==(ref2=process.env)||!ref2.NODE_DISABLE_COLORS)),(null==(ref3=this.colorful)?colorsEnabled:ref3)&&(colorize=function(str){return"\x1B[1;31m".concat(str,"\x1B[0m")},codeLine=codeLine.slice(0,start)+colorize(codeLine.slice(start,end))+codeLine.slice(end),marker=colorize(marker)),"".concat(filename,":").concat(first_line+1,":").concat(first_column+1,": error: ").concat(this.message,"\n").concat(codeLine,"\n").concat(marker)},exports.nameWhitespaceCharacter=function(string){return" "===string?"space":"\n"===string?"newline":"\r"===string?"carriage return":"\t"===string?"tab":string},exports.parseNumber=function(string){var base;return null==string?0/0:(base=function(){switch(string.charAt(1)){case"b":return 2;case"o":return 8;case"x":return 16;default:return null;}}(),null==base?parseFloat(string.replace(/_/g,"")):parseInt(string.slice(2).replace(/_/g,""),base))},exports.isFunction=function(obj){return"[object Function]"===Object.prototype.toString.call(obj)},exports.isNumber=isNumber=function(obj){return"[object Number]"===Object.prototype.toString.call(obj)},exports.isString=isString=function(obj){return"[object String]"===Object.prototype.toString.call(obj)},exports.isBoolean=isBoolean=function(obj){return!0===obj||!1===obj||"[object Boolean]"===Object.prototype.toString.call(obj)},exports.isPlainObject=function(obj){return"object"===_typeof(obj)&&!!obj&&!Array.isArray(obj)&&!isNumber(obj)&&!isString(obj)&&!isBoolean(obj)},unicodeCodePointToUnicodeEscapes=function(codePoint){var high,low,toUnicodeEscape;return(toUnicodeEscape=function(val){var str;return str=val.toString(16),"\\u".concat(repeat("0",4-str.length)).concat(str)},65536>codePoint)?toUnicodeEscape(codePoint):(high=_Mathfloor((codePoint-65536)/1024)+55296,low=(codePoint-65536)%1024+56320,"".concat(toUnicodeEscape(high)).concat(toUnicodeEscape(low)))},exports.replaceUnicodeCodePointEscapes=function(str){var _ref2=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},flags=_ref2.flags,error=_ref2.error,_ref2$delimiter=_ref2.delimiter,delimiter=void 0===_ref2$delimiter?"":_ref2$delimiter,shouldReplace;return shouldReplace=null!=flags&&0>indexOf.call(flags,"u"),str.replace(UNICODE_CODE_POINT_ESCAPE,function(match,escapedBackslash,codePointHex,offset){var codePointDecimal;return escapedBackslash?escapedBackslash:(codePointDecimal=parseInt(codePointHex,16),1114111<codePointDecimal&&error("unicode code point escapes greater than \\u{10ffff} are not allowed",{offset:offset+delimiter.length,length:codePointHex.length+4}),shouldReplace?unicodeCodePointToUnicodeEscapes(codePointDecimal):match)})},UNICODE_CODE_POINT_ESCAPE=/(\\\\)|\\u\{([\da-fA-F]+)\}/g}.call(this),{exports:exports}.exports}(),require["./rewriter"]=function(){var exports={};return function(){var indexOf=[].indexOf,hasProp={}.hasOwnProperty,_require=require("./helpers"),BALANCED_PAIRS,CALL_CLOSERS,CONTROL_IN_IMPLICIT,DISCARDED,EXPRESSION_CLOSE,EXPRESSION_END,EXPRESSION_START,IMPLICIT_CALL,IMPLICIT_END,IMPLICIT_FUNC,IMPLICIT_UNSPACED_CALL,INVERSES,LINEBREAKS,Rewriter,SINGLE_CLOSERS,SINGLE_LINERS,UNFINISHED,extractAllCommentTokens,generate,k,left,len,moveComments,right,throwSyntaxError;for(throwSyntaxError=_require.throwSyntaxError,extractAllCommentTokens=_require.extractAllCommentTokens,moveComments=function(fromToken,toToken){var comment,k,len,ref,unshiftedComments;if(fromToken.comments){if(toToken.comments&&0!==toToken.comments.length){for(unshiftedComments=[],ref=fromToken.comments,(k=0,len=ref.length);k<len;k++)comment=ref[k],comment.unshift?unshiftedComments.push(comment):toToken.comments.push(comment);toToken.comments=unshiftedComments.concat(toToken.comments)}else toToken.comments=fromToken.comments;return delete fromToken.comments}},generate=function(tag,value,origin,commentsToken){var token;return token=[tag,value],token.generated=!0,origin&&(token.origin=origin),commentsToken&&moveComments(commentsToken,token),token},exports.Rewriter=Rewriter=function(){var Rewriter=function(){"use strict";function Rewriter(){_classCallCheck(this,Rewriter)}return _createClass(Rewriter,[{key:"rewrite",value:function rewrite(tokens1){var ref,ref1,t;return this.tokens=tokens1,("undefined"!=typeof process&&null!==process?null==(ref=process.env)?void 0:ref.DEBUG_TOKEN_STREAM:void 0)&&(process.env.DEBUG_REWRITTEN_TOKEN_STREAM&&console.log("Initial token stream:"),console.log(function(){var k,len,ref1,results;for(ref1=this.tokens,results=[],(k=0,len=ref1.length);k<len;k++)t=ref1[k],results.push(t[0]+"/"+t[1]+(t.comments?"*":""));return results}.call(this).join(" "))),this.removeLeadingNewlines(),this.closeOpenCalls(),this.closeOpenIndexes(),this.normalizeLines(),this.tagPostfixConditionals(),this.addImplicitBracesAndParens(),this.rescueStowawayComments(),this.addLocationDataToGeneratedTokens(),this.enforceValidJSXAttributes(),this.fixIndentationLocationData(),this.exposeTokenDataToGrammar(),("undefined"!=typeof process&&null!==process?null==(ref1=process.env)?void 0:ref1.DEBUG_REWRITTEN_TOKEN_STREAM:void 0)&&(process.env.DEBUG_TOKEN_STREAM&&console.log("Rewritten token stream:"),console.log(function(){var k,len,ref2,results;for(ref2=this.tokens,results=[],(k=0,len=ref2.length);k<len;k++)t=ref2[k],results.push(t[0]+"/"+t[1]+(t.comments?"*":""));return results}.call(this).join(" "))),this.tokens}},{key:"scanTokens",value:function scanTokens(block){var i,token,tokens;for(tokens=this.tokens,i=0;token=tokens[i];)i+=block.call(this,token,i,tokens);return!0}},{key:"detectEnd",value:function detectEnd(i,condition,action){var opts=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{},levels,ref,ref1,token,tokens;for(tokens=this.tokens,levels=0;token=tokens[i];){if(0===levels&&condition.call(this,token,i))return action.call(this,token,i);if((ref=token[0],0<=indexOf.call(EXPRESSION_START,ref))?levels+=1:(ref1=token[0],0<=indexOf.call(EXPRESSION_END,ref1))&&(levels-=1),0>levels)return opts.returnOnNegativeLevel?void 0:action.call(this,token,i);i+=1}return i-1}},{key:"removeLeadingNewlines",value:function removeLeadingNewlines(){var i,k,l,leadingNewlineToken,len,len1,ref,ref1,tag;for(ref=this.tokens,i=k=0,len=ref.length;k<len;i=++k){var _ref$i=_slicedToArray(ref[i],1);if(tag=_ref$i[0],"TERMINATOR"!==tag)break}if(0!==i){for(ref1=this.tokens.slice(0,i),l=0,len1=ref1.length;l<len1;l++)leadingNewlineToken=ref1[l],moveComments(leadingNewlineToken,this.tokens[i]);return this.tokens.splice(0,i)}}},{key:"closeOpenCalls",value:function closeOpenCalls(){var action,condition;return condition=function(token){var ref;return")"===(ref=token[0])||"CALL_END"===ref},action=function(token){return token[0]="CALL_END"},this.scanTokens(function(token,i){return"CALL_START"===token[0]&&this.detectEnd(i+1,condition,action),1})}},{key:"closeOpenIndexes",value:function closeOpenIndexes(){var action,condition,startToken;return startToken=null,condition=function(token){var ref;return"]"===(ref=token[0])||"INDEX_END"===ref},action=function(token,i){return this.tokens.length>=i&&":"===this.tokens[i+1][0]?(startToken[0]="[",token[0]="]"):token[0]="INDEX_END"},this.scanTokens(function(token,i){return"INDEX_START"===token[0]&&(startToken=token,this.detectEnd(i+1,condition,action)),1})}},{key:"indexOfTag",value:function indexOfTag(i){var fuzz,j,k,ref,ref1;fuzz=0;for(var _len=arguments.length,pattern=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)pattern[_key-1]=arguments[_key];for(j=k=0,ref=pattern.length;0<=ref?k<ref:k>ref;j=0<=ref?++k:--k)if(null!=pattern[j]&&("string"==typeof pattern[j]&&(pattern[j]=[pattern[j]]),ref1=this.tag(i+j+fuzz),0>indexOf.call(pattern[j],ref1)))return-1;return i+j+fuzz-1}},{key:"looksObjectish",value:function looksObjectish(j){var end,index;return-1!==this.indexOfTag(j,"@",null,":")||-1!==this.indexOfTag(j,null,":")||(index=this.indexOfTag(j,EXPRESSION_START),!!(-1!==index&&(end=null,this.detectEnd(index+1,function(token){var ref;return ref=token[0],0<=indexOf.call(EXPRESSION_END,ref)},function(token,i){return end=i}),":"===this.tag(end+1))))}},{key:"findTagsBackwards",value:function findTagsBackwards(i,tags){var backStack,ref,ref1,ref2,ref3,ref4,ref5;for(backStack=[];0<=i&&(backStack.length||(ref2=this.tag(i),0>indexOf.call(tags,ref2))&&((ref3=this.tag(i),0>indexOf.call(EXPRESSION_START,ref3))||this.tokens[i].generated)&&(ref4=this.tag(i),0>indexOf.call(LINEBREAKS,ref4)));)(ref=this.tag(i),0<=indexOf.call(EXPRESSION_END,ref))&&backStack.push(this.tag(i)),(ref1=this.tag(i),0<=indexOf.call(EXPRESSION_START,ref1))&&backStack.length&&backStack.pop(),i-=1;return ref5=this.tag(i),0<=indexOf.call(tags,ref5)}},{key:"addImplicitBracesAndParens",value:function addImplicitBracesAndParens(){var stack,start;return stack=[],start=null,this.scanTokens(function(token,i,tokens){var _this=this,_token=_slicedToArray(token,1),endImplicitCall,endImplicitObject,forward,implicitObjectContinues,implicitObjectIndent,inControlFlow,inImplicit,inImplicitCall,inImplicitControl,inImplicitObject,isImplicit,isImplicitCall,isImplicitObject,k,newLine,nextTag,nextToken,offset,preContinuationLineIndent,preObjectToken,prevTag,prevToken,ref,ref1,ref2,ref3,s,sameLine,stackIdx,stackItem,stackTag,stackTop,startIdx,startImplicitCall,startImplicitObject,startIndex,startTag,startsLine,tag;tag=_token[0];var _prevToken=prevToken=0<i?tokens[i-1]:[],_prevToken2=_slicedToArray(_prevToken,1);prevTag=_prevToken2[0];var _nextToken=nextToken=i<tokens.length-1?tokens[i+1]:[],_nextToken2=_slicedToArray(_nextToken,1);if(nextTag=_nextToken2[0],stackTop=function(){return stack[stack.length-1]},startIdx=i,forward=function(n){return i-startIdx+n},isImplicit=function(stackItem){var ref;return null==stackItem||null==(ref=stackItem[2])?void 0:ref.ours},isImplicitObject=function(stackItem){return isImplicit(stackItem)&&"{"===(null==stackItem?void 0:stackItem[0])},isImplicitCall=function(stackItem){return isImplicit(stackItem)&&"("===(null==stackItem?void 0:stackItem[0])},inImplicit=function(){return isImplicit(stackTop())},inImplicitCall=function(){return isImplicitCall(stackTop())},inImplicitObject=function(){return isImplicitObject(stackTop())},inImplicitControl=function(){var ref;return inImplicit()&&"CONTROL"===(null==(ref=stackTop())?void 0:ref[0])},startImplicitCall=function(idx){return stack.push(["(",idx,{ours:!0}]),tokens.splice(idx,0,generate("CALL_START","(",["","implicit function call",token[2]],prevToken))},endImplicitCall=function(){return stack.pop(),tokens.splice(i,0,generate("CALL_END",")",["","end of input",token[2]],prevToken)),i+=1},startImplicitObject=function(idx){var _ref3=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_ref3$startsLine=_ref3.startsLine,continuationLineIndent=_ref3.continuationLineIndent,val;return stack.push(["{",idx,{sameLine:!0,startsLine:void 0===_ref3$startsLine||_ref3$startsLine,ours:!0,continuationLineIndent:continuationLineIndent}]),val=new String("{"),val.generated=!0,tokens.splice(idx,0,generate("{",val,token,prevToken))},endImplicitObject=function(j){return j=null==j?i:j,stack.pop(),tokens.splice(j,0,generate("}","}",token,prevToken)),i+=1},implicitObjectContinues=function(j){var nextTerminatorIdx;return nextTerminatorIdx=null,_this.detectEnd(j,function(token){return"TERMINATOR"===token[0]},function(token,i){return nextTerminatorIdx=i},{returnOnNegativeLevel:!0}),null!=nextTerminatorIdx&&_this.looksObjectish(nextTerminatorIdx+1)},(inImplicitCall()||inImplicitObject())&&0<=indexOf.call(CONTROL_IN_IMPLICIT,tag)||inImplicitObject()&&":"===prevTag&&"FOR"===tag)return stack.push(["CONTROL",i,{ours:!0}]),forward(1);if("INDENT"===tag&&inImplicit()){if("=>"!==prevTag&&"->"!==prevTag&&"["!==prevTag&&"("!==prevTag&&","!==prevTag&&"{"!==prevTag&&"ELSE"!==prevTag&&"="!==prevTag)for(;inImplicitCall()||inImplicitObject()&&":"!==prevTag;)inImplicitCall()?endImplicitCall():endImplicitObject();return inImplicitControl()&&stack.pop(),stack.push([tag,i]),forward(1)}if(0<=indexOf.call(EXPRESSION_START,tag))return stack.push([tag,i]),forward(1);if(0<=indexOf.call(EXPRESSION_END,tag)){for(;inImplicit();)inImplicitCall()?endImplicitCall():inImplicitObject()?endImplicitObject():stack.pop();start=stack.pop()}if(inControlFlow=function(){var controlFlow,isFunc,seenFor,tagCurrentLine;return(seenFor=_this.findTagsBackwards(i,["FOR"])&&_this.findTagsBackwards(i,["FORIN","FOROF","FORFROM"]),controlFlow=seenFor||_this.findTagsBackwards(i,["WHILE","UNTIL","LOOP","LEADING_WHEN"]),!!controlFlow)&&(isFunc=!1,tagCurrentLine=token[2].first_line,_this.detectEnd(i,function(token){var ref;return ref=token[0],0<=indexOf.call(LINEBREAKS,ref)},function(token,i){var _ref4=tokens[i-1]||[],_ref5=_slicedToArray(_ref4,3),first_line;return prevTag=_ref5[0],first_line=_ref5[2].first_line,isFunc=tagCurrentLine===first_line&&("->"===prevTag||"=>"===prevTag)},{returnOnNegativeLevel:!0}),isFunc)},(0<=indexOf.call(IMPLICIT_FUNC,tag)&&token.spaced||"?"===tag&&0<i&&!tokens[i-1].spaced)&&(0<=indexOf.call(IMPLICIT_CALL,nextTag)||"..."===nextTag&&(ref=this.tag(i+2),0<=indexOf.call(IMPLICIT_CALL,ref))&&!this.findTagsBackwards(i,["INDEX_START","["])||0<=indexOf.call(IMPLICIT_UNSPACED_CALL,nextTag)&&!nextToken.spaced&&!nextToken.newLine)&&!inControlFlow())return"?"===tag&&(tag=token[0]="FUNC_EXIST"),startImplicitCall(i+1),forward(2);if(0<=indexOf.call(IMPLICIT_FUNC,tag)&&-1<this.indexOfTag(i+1,"INDENT")&&this.looksObjectish(i+2)&&!this.findTagsBackwards(i,["CLASS","EXTENDS","IF","CATCH","SWITCH","LEADING_WHEN","FOR","WHILE","UNTIL"]))return startImplicitCall(i+1),stack.push(["INDENT",i+2]),forward(3);if(":"===tag){if(s=function(){var ref1;switch(!1){case(ref1=this.tag(i-1),0>indexOf.call(EXPRESSION_END,ref1)):var _start=start,_start2=_slicedToArray(_start,2);return startTag=_start2[0],startIndex=_start2[1],"["===startTag&&0<startIndex&&"@"===this.tag(startIndex-1)&&!tokens[startIndex-1].spaced?startIndex-1:startIndex;break;case"@"!==this.tag(i-2):return i-2;default:return i-1;}}.call(this),startsLine=0>=s||(ref1=this.tag(s-1),0<=indexOf.call(LINEBREAKS,ref1))||tokens[s-1].newLine,stackTop()){var _stackTop=stackTop(),_stackTop2=_slicedToArray(_stackTop,2);if(stackTag=_stackTop2[0],stackIdx=_stackTop2[1],("{"===stackTag||"INDENT"===stackTag&&"{"===this.tag(stackIdx-1))&&(startsLine||","===this.tag(s-1)||"{"===this.tag(s-1))&&(ref2=this.tag(s-1),0>indexOf.call(UNFINISHED,ref2)))return forward(1)}return preObjectToken=1<i?tokens[i-2]:[],startImplicitObject(s,{startsLine:!!startsLine,continuationLineIndent:preObjectToken.continuationLineIndent}),forward(2)}if(0<=indexOf.call(LINEBREAKS,tag))for(k=stack.length-1;0<=k&&(stackItem=stack[k],!!isImplicit(stackItem));k+=-1)isImplicitObject(stackItem)&&(stackItem[2].sameLine=!1);if("TERMINATOR"===tag&&token.endsContinuationLineIndentation)for(preContinuationLineIndent=token.endsContinuationLineIndentation.preContinuationLineIndent;inImplicitObject()&&null!=(implicitObjectIndent=stackTop()[2].continuationLineIndent)&&implicitObjectIndent>preContinuationLineIndent;)endImplicitObject();if(newLine="OUTDENT"===prevTag||prevToken.newLine,0<=indexOf.call(IMPLICIT_END,tag)||0<=indexOf.call(CALL_CLOSERS,tag)&&newLine||(".."===tag||"..."===tag)&&this.findTagsBackwards(i,["INDEX_START"]))for(;inImplicit();){var _stackTop3=stackTop(),_stackTop4=_slicedToArray(_stackTop3,3);stackTag=_stackTop4[0],stackIdx=_stackTop4[1];var _stackTop4$=_stackTop4[2];if(sameLine=_stackTop4$.sameLine,startsLine=_stackTop4$.startsLine,inImplicitCall()&&","!==prevTag||","===prevTag&&"TERMINATOR"===tag&&null==nextTag)endImplicitCall();else if(inImplicitObject()&&sameLine&&"TERMINATOR"!==tag&&":"!==prevTag&&!(("POST_IF"===tag||"FOR"===tag||"WHILE"===tag||"UNTIL"===tag)&&startsLine&&implicitObjectContinues(i+1)))endImplicitObject();else if(inImplicitObject()&&"TERMINATOR"===tag&&","!==prevTag&&!(startsLine&&this.looksObjectish(i+1)))endImplicitObject();else if(inImplicitControl()&&"CLASS"===tokens[stackTop()[1]][0]&&"TERMINATOR"===tag)stack.pop();else break}if(","===tag&&!this.looksObjectish(i+1)&&inImplicitObject()&&"FOROF"!==(ref3=this.tag(i+2))&&"FORIN"!==ref3&&("TERMINATOR"!==nextTag||!this.looksObjectish(i+2)))for(offset="OUTDENT"===nextTag?1:0;inImplicitObject();)endImplicitObject(i+offset);return forward(1)})}},{key:"enforceValidJSXAttributes",value:function enforceValidJSXAttributes(){return this.scanTokens(function(token,i,tokens){var next,ref;return token.jsxColon&&(next=tokens[i+1],"STRING_START"!==(ref=next[0])&&"STRING"!==ref&&"("!==ref&&throwSyntaxError("expected wrapped or quoted JSX attribute",next[2])),1})}},{key:"rescueStowawayComments",value:function rescueStowawayComments(){var dontShiftForward,insertPlaceholder,shiftCommentsBackward,shiftCommentsForward;return insertPlaceholder=function(token,j,tokens,method){return"TERMINATOR"!==tokens[j][0]&&tokens[method](generate("TERMINATOR","\n",tokens[j])),tokens[method](generate("JS","",tokens[j],token))},dontShiftForward=function(i,tokens){var j,ref;for(j=i+1;j!==tokens.length&&(ref=tokens[j][0],0<=indexOf.call(DISCARDED,ref));){if("INTERPOLATION_END"===tokens[j][0])return!0;j++}return!1},shiftCommentsForward=function(token,i,tokens){var comment,j,k,len,ref,ref1,ref2;for(j=i;j!==tokens.length&&(ref=tokens[j][0],0<=indexOf.call(DISCARDED,ref));)j++;if(!(j===tokens.length||(ref1=tokens[j][0],0<=indexOf.call(DISCARDED,ref1)))){for(ref2=token.comments,k=0,len=ref2.length;k<len;k++)comment=ref2[k],comment.unshift=!0;return moveComments(token,tokens[j]),1}return j=tokens.length-1,insertPlaceholder(token,j,tokens,"push"),1},shiftCommentsBackward=function(token,i,tokens){var j,ref,ref1;for(j=i;-1!==j&&(ref=tokens[j][0],0<=indexOf.call(DISCARDED,ref));)j--;return-1===j||(ref1=tokens[j][0],0<=indexOf.call(DISCARDED,ref1))?(insertPlaceholder(token,0,tokens,"unshift"),3):(moveComments(token,tokens[j]),1)},this.scanTokens(function(token,i,tokens){var dummyToken,j,ref,ref1,ret;if(!token.comments)return 1;if(ret=1,ref=token[0],0<=indexOf.call(DISCARDED,ref)){for(dummyToken={comments:[]},j=token.comments.length-1;-1!==j;)!1===token.comments[j].newLine&&!1===token.comments[j].here&&(dummyToken.comments.unshift(token.comments[j]),token.comments.splice(j,1)),j--;0!==dummyToken.comments.length&&(ret=shiftCommentsBackward(dummyToken,i-1,tokens)),0!==token.comments.length&&shiftCommentsForward(token,i,tokens)}else if(!dontShiftForward(i,tokens)){for(dummyToken={comments:[]},j=token.comments.length-1;-1!==j;)!token.comments[j].newLine||token.comments[j].unshift||"JS"===token[0]&&token.generated||(dummyToken.comments.unshift(token.comments[j]),token.comments.splice(j,1)),j--;0!==dummyToken.comments.length&&(ret=shiftCommentsForward(dummyToken,i+1,tokens))}return 0===(null==(ref1=token.comments)?void 0:ref1.length)&&delete token.comments,ret})}},{key:"addLocationDataToGeneratedTokens",value:function addLocationDataToGeneratedTokens(){return this.scanTokens(function(token,i,tokens){var column,line,nextLocation,prevLocation,rangeIndex,ref,ref1;if(token[2])return 1;if(!(token.generated||token.explicit))return 1;if(token.fromThen&&"INDENT"===token[0])return token[2]=token.origin[2],1;if("{"===token[0]&&(nextLocation=null==(ref=tokens[i+1])?void 0:ref[2])){var _nextLocation=nextLocation;line=_nextLocation.first_line,column=_nextLocation.first_column;var _nextLocation$range=_slicedToArray(_nextLocation.range,1);rangeIndex=_nextLocation$range[0]}else if(prevLocation=null==(ref1=tokens[i-1])?void 0:ref1[2]){var _prevLocation=prevLocation;line=_prevLocation.last_line,column=_prevLocation.last_column;var _prevLocation$range=_slicedToArray(_prevLocation.range,2);rangeIndex=_prevLocation$range[1],column+=1}else line=column=0,rangeIndex=0;return token[2]={first_line:line,first_column:column,last_line:line,last_column:column,last_line_exclusive:line,last_column_exclusive:column,range:[rangeIndex,rangeIndex]},1})}},{key:"fixIndentationLocationData",value:function fixIndentationLocationData(){var _this2=this,findPrecedingComment;return null==this.allComments&&(this.allComments=extractAllCommentTokens(this.tokens)),findPrecedingComment=function(token,_ref6){var afterPosition=_ref6.afterPosition,indentSize=_ref6.indentSize,first=_ref6.first,indented=_ref6.indented,comment,k,l,lastMatching,matches,ref,ref1,tokenStart;if(tokenStart=token[2].range[0],matches=function(comment){return(!comment.outdented||null!=indentSize&&comment.indentSize>indentSize)&&(!indented||comment.indented)&&!!(comment.locationData.range[0]<tokenStart)&&!!(comment.locationData.range[0]>afterPosition)},first){for(lastMatching=null,ref=_this2.allComments,k=ref.length-1;0<=k;k+=-1)if(comment=ref[k],matches(comment))lastMatching=comment;else if(lastMatching)return lastMatching;return lastMatching}for(ref1=_this2.allComments,l=ref1.length-1;0<=l;l+=-1)if(comment=ref1[l],matches(comment))return comment;return null},this.scanTokens(function(token,i,tokens){var isIndent,nextToken,nextTokenIndex,precedingComment,prevLocationData,prevToken,ref,ref1,ref2,useNextToken;if("INDENT"!==(ref=token[0])&&"OUTDENT"!==ref&&(!token.generated||"CALL_END"!==token[0]||null!=(ref1=token.data)&&ref1.closingTagNameToken)&&(!token.generated||"}"!==token[0]))return 1;if(isIndent="INDENT"===token[0],prevToken=null==(ref2=token.prevToken)?tokens[i-1]:ref2,prevLocationData=prevToken[2],useNextToken=token.explicit||token.generated,useNextToken)for(nextToken=token,nextTokenIndex=i;(nextToken.explicit||nextToken.generated)&&nextTokenIndex!==tokens.length-1;)nextToken=tokens[nextTokenIndex++];return(precedingComment=findPrecedingComment(useNextToken?nextToken:token,{afterPosition:prevLocationData.range[0],indentSize:token.indentSize,first:isIndent,indented:useNextToken}),isIndent&&(null==precedingComment||!precedingComment.newLine))?1:token.generated&&"CALL_END"===token[0]&&(null==precedingComment?void 0:precedingComment.indented)?1:(null!=precedingComment&&(prevLocationData=precedingComment.locationData),token[2]={first_line:null==precedingComment?prevLocationData.last_line:prevLocationData.first_line,first_column:null==precedingComment?prevLocationData.last_column:isIndent?0:prevLocationData.first_column,last_line:prevLocationData.last_line,last_column:prevLocationData.last_column,last_line_exclusive:prevLocationData.last_line_exclusive,last_column_exclusive:prevLocationData.last_column_exclusive,range:isIndent&&null!=precedingComment?[prevLocationData.range[0]-precedingComment.indentSize,prevLocationData.range[1]]:prevLocationData.range},1)})}},{key:"normalizeLines",value:function normalizeLines(){var _this3=this,action,closeElseTag,condition,ifThens,indent,leading_if_then,leading_switch_when,outdent,starter;return starter=indent=outdent=null,leading_switch_when=null,leading_if_then=null,ifThens=[],condition=function(token,i){var ref,ref1,ref2,ref3;return";"!==token[1]&&(ref=token[0],0<=indexOf.call(SINGLE_CLOSERS,ref))&&!("TERMINATOR"===token[0]&&(ref1=this.tag(i+1),0<=indexOf.call(EXPRESSION_CLOSE,ref1)))&&!("ELSE"===token[0]&&("THEN"!==starter||leading_if_then||leading_switch_when))&&("CATCH"!==(ref2=token[0])&&"FINALLY"!==ref2||"->"!==starter&&"=>"!==starter)||(ref3=token[0],0<=indexOf.call(CALL_CLOSERS,ref3))&&(this.tokens[i-1].newLine||"OUTDENT"===this.tokens[i-1][0])},action=function(token,i){return"ELSE"===token[0]&&"THEN"===starter&&ifThens.pop(),this.tokens.splice(","===this.tag(i-1)?i-1:i,0,outdent)},closeElseTag=function(tokens,i){var lastThen,outdentElse,tlen;if(tlen=ifThens.length,!(0<tlen))return i;lastThen=ifThens.pop();var _this3$indentation=_this3.indentation(tokens[lastThen]),_this3$indentation2=_slicedToArray(_this3$indentation,2);return outdentElse=_this3$indentation2[1],outdentElse[1]=2*tlen,tokens.splice(i,0,outdentElse),outdentElse[1]=2,tokens.splice(i+1,0,outdentElse),_this3.detectEnd(i+2,function(token){var ref;return"OUTDENT"===(ref=token[0])||"TERMINATOR"===ref},function(token,i){if("OUTDENT"===this.tag(i)&&"OUTDENT"===this.tag(i+1))return tokens.splice(i,2)}),i+2},this.scanTokens(function(token,i,tokens){var _token2=_slicedToArray(token,1),conditionTag,j,k,ref,ref1,ref2,tag;if(tag=_token2[0],conditionTag=("->"===tag||"=>"===tag)&&this.findTagsBackwards(i,["IF","WHILE","FOR","UNTIL","SWITCH","WHEN","LEADING_WHEN","[","INDEX_START"])&&!this.findTagsBackwards(i,["THEN","..","..."]),"TERMINATOR"===tag){if("ELSE"===this.tag(i+1)&&"OUTDENT"!==this.tag(i-1))return tokens.splice.apply(tokens,[i,1].concat(_toConsumableArray(this.indentation()))),1;if(ref=this.tag(i+1),0<=indexOf.call(EXPRESSION_CLOSE,ref))return";"===token[1]&&"OUTDENT"===this.tag(i+1)&&(tokens[i+1].prevToken=token,moveComments(token,tokens[i+1])),tokens.splice(i,1),0}if("CATCH"===tag)for(j=k=1;2>=k;j=++k)if("OUTDENT"===(ref1=this.tag(i+j))||"TERMINATOR"===ref1||"FINALLY"===ref1)return tokens.splice.apply(tokens,[i+j,0].concat(_toConsumableArray(this.indentation()))),2+j;if(("->"===tag||"=>"===tag)&&(","===(ref2=this.tag(i+1))||"]"===ref2||"."===this.tag(i+1)&&token.newLine)){var _this$indentation=this.indentation(tokens[i]),_this$indentation2=_slicedToArray(_this$indentation,2);return indent=_this$indentation2[0],outdent=_this$indentation2[1],tokens.splice(i+1,0,indent,outdent),1}if(0<=indexOf.call(SINGLE_LINERS,tag)&&"INDENT"!==this.tag(i+1)&&("ELSE"!==tag||"IF"!==this.tag(i+1))&&!conditionTag){starter=tag;var _this$indentation3=this.indentation(tokens[i]),_this$indentation4=_slicedToArray(_this$indentation3,2);return indent=_this$indentation4[0],outdent=_this$indentation4[1],"THEN"===starter&&(indent.fromThen=!0),"THEN"===tag&&(leading_switch_when=this.findTagsBackwards(i,["LEADING_WHEN"])&&"IF"===this.tag(i+1),leading_if_then=this.findTagsBackwards(i,["IF"])&&"IF"===this.tag(i+1)),"THEN"===tag&&this.findTagsBackwards(i,["IF"])&&ifThens.push(i),"ELSE"===tag&&"OUTDENT"!==this.tag(i-1)&&(i=closeElseTag(tokens,i)),tokens.splice(i+1,0,indent),this.detectEnd(i+2,condition,action),"THEN"===tag&&tokens.splice(i,1),1}return 1})}},{key:"tagPostfixConditionals",value:function tagPostfixConditionals(){var action,condition,original;return original=null,condition=function(token,i){var _token3=_slicedToArray(token,1),prevTag,tag;tag=_token3[0];var _this$tokens=_slicedToArray(this.tokens[i-1],1);return prevTag=_this$tokens[0],"TERMINATOR"===tag||"INDENT"===tag&&0>indexOf.call(SINGLE_LINERS,prevTag)},action=function(token){if("INDENT"!==token[0]||token.generated&&!token.fromThen)return original[0]="POST_"+original[0]},this.scanTokens(function(token,i){return"IF"===token[0]?(original=token,this.detectEnd(i+1,condition,action),1):1})}},{key:"exposeTokenDataToGrammar",value:function exposeTokenDataToGrammar(){return this.scanTokens(function(token){var key,ref,ref1,val;if(token.generated||token.data&&0!==Object.keys(token.data).length){for(key in token[1]=new String(token[1]),ref1=null==(ref=token.data)?{}:ref,ref1)hasProp.call(ref1,key)&&(val=ref1[key],token[1][key]=val);token.generated&&(token[1].generated=!0)}return 1})}},{key:"indentation",value:function indentation(origin){var indent,outdent;return indent=["INDENT",2],outdent=["OUTDENT",2],origin?(indent.generated=outdent.generated=!0,indent.origin=outdent.origin=origin):indent.explicit=outdent.explicit=!0,[indent,outdent]}},{key:"tag",value:function tag(i){var ref;return null==(ref=this.tokens[i])?void 0:ref[0]}}]),Rewriter}();return Rewriter.prototype.generate=generate,Rewriter}.call(this),BALANCED_PAIRS=[["(",")"],["[","]"],["{","}"],["INDENT","OUTDENT"],["CALL_START","CALL_END"],["PARAM_START","PARAM_END"],["INDEX_START","INDEX_END"],["STRING_START","STRING_END"],["INTERPOLATION_START","INTERPOLATION_END"],["REGEX_START","REGEX_END"]],exports.INVERSES=INVERSES={},EXPRESSION_START=[],EXPRESSION_END=[],(k=0,len=BALANCED_PAIRS.length);k<len;k++){var _BALANCED_PAIRS$k=_slicedToArray(BALANCED_PAIRS[k],2);left=_BALANCED_PAIRS$k[0],right=_BALANCED_PAIRS$k[1],EXPRESSION_START.push(INVERSES[right]=left),EXPRESSION_END.push(INVERSES[left]=right)}EXPRESSION_CLOSE=["CATCH","THEN","ELSE","FINALLY"].concat(EXPRESSION_END),IMPLICIT_FUNC=["IDENTIFIER","PROPERTY","SUPER",")","CALL_END","]","INDEX_END","@","THIS"],IMPLICIT_CALL=["IDENTIFIER","JSX_TAG","PROPERTY","NUMBER","INFINITY","NAN","STRING","STRING_START","REGEX","REGEX_START","JS","NEW","PARAM_START","CLASS","IF","TRY","SWITCH","THIS","UNDEFINED","NULL","BOOL","UNARY","DO","DO_IIFE","YIELD","AWAIT","UNARY_MATH","SUPER","THROW","@","->","=>","[","(","{","--","++"],IMPLICIT_UNSPACED_CALL=["+","-"],IMPLICIT_END=["POST_IF","FOR","WHILE","UNTIL","WHEN","BY","LOOP","TERMINATOR"],SINGLE_LINERS=["ELSE","->","=>","TRY","FINALLY","THEN"],SINGLE_CLOSERS=["TERMINATOR","CATCH","FINALLY","ELSE","OUTDENT","LEADING_WHEN"],LINEBREAKS=["TERMINATOR","INDENT","OUTDENT"],CALL_CLOSERS=[".","?.","::","?::"],CONTROL_IN_IMPLICIT=["IF","TRY","FINALLY","CATCH","CLASS","SWITCH"],DISCARDED=["(",")","[","]","{","}",":",".","..","...",",","=","++","--","?","AS","AWAIT","CALL_START","CALL_END","DEFAULT","DO","DO_IIFE","ELSE","EXTENDS","EXPORT","FORIN","FOROF","FORFROM","IMPORT","INDENT","INDEX_SOAK","INTERPOLATION_START","INTERPOLATION_END","LEADING_WHEN","OUTDENT","PARAM_END","REGEX_START","REGEX_END","RETURN","STRING_END","THROW","UNARY","YIELD"].concat(IMPLICIT_UNSPACED_CALL.concat(IMPLICIT_END.concat(CALL_CLOSERS.concat(CONTROL_IN_IMPLICIT)))),exports.UNFINISHED=UNFINISHED=["\\",".","?.","?::","UNARY","DO","DO_IIFE","MATH","UNARY_MATH","+","-","**","SHIFT","RELATION","COMPARE","&","^","|","&&","||","BIN?","EXTENDS"]}.call(this),{exports:exports}.exports}(),require["./lexer"]=function(){var exports={};return function(){var indexOf=[].indexOf,slice=[].slice,_require2=require("./rewriter"),BOM,BOOL,CALLABLE,CODE,COFFEE_ALIASES,COFFEE_ALIAS_MAP,COFFEE_KEYWORDS,COMMENT,COMPARABLE_LEFT_SIDE,COMPARE,COMPOUND_ASSIGN,HERECOMMENT_ILLEGAL,HEREDOC_DOUBLE,HEREDOC_INDENT,HEREDOC_SINGLE,HEREGEX,HEREGEX_COMMENT,HERE_JSTOKEN,IDENTIFIER,INDENTABLE_CLOSERS,INDEXABLE,INSIDE_JSX,INVERSES,JSTOKEN,JSX_ATTRIBUTE,JSX_FRAGMENT_IDENTIFIER,JSX_IDENTIFIER,JSX_IDENTIFIER_PART,JSX_INTERPOLATION,JS_KEYWORDS,LINE_BREAK,LINE_CONTINUER,Lexer,MATH,MULTI_DENT,NOT_REGEX,NUMBER,OPERATOR,POSSIBLY_DIVISION,REGEX,REGEX_FLAGS,REGEX_ILLEGAL,REGEX_INVALID_ESCAPE,RELATION,RESERVED,Rewriter,SHIFT,STRICT_PROSCRIBED,STRING_DOUBLE,STRING_INVALID_ESCAPE,STRING_SINGLE,STRING_START,TRAILING_SPACES,UNARY,UNARY_MATH,UNFINISHED,VALID_FLAGS,WHITESPACE,addTokenData,attachCommentsToNode,compact,count,flatten,invertLiterate,isForFrom,isUnassignable,key,locationDataToString,merge,parseNumber,repeat,replaceUnicodeCodePointEscapes,starts,throwSyntaxError;Rewriter=_require2.Rewriter,INVERSES=_require2.INVERSES,UNFINISHED=_require2.UNFINISHED;var _require3=require("./helpers");count=_require3.count,starts=_require3.starts,compact=_require3.compact,repeat=_require3.repeat,invertLiterate=_require3.invertLiterate,merge=_require3.merge,attachCommentsToNode=_require3.attachCommentsToNode,locationDataToString=_require3.locationDataToString,throwSyntaxError=_require3.throwSyntaxError,replaceUnicodeCodePointEscapes=_require3.replaceUnicodeCodePointEscapes,flatten=_require3.flatten,parseNumber=_require3.parseNumber,exports.Lexer=Lexer=function(){"use strict";function Lexer(){_classCallCheck(this,Lexer),this.error=this.error.bind(this)}return _createClass(Lexer,[{key:"tokenize",value:function tokenize(code){var opts=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},consumed,end,i,ref;for(this.literate=opts.literate,this.indent=0,this.baseIndent=0,this.continuationLineAdditionalIndent=0,this.outdebt=0,this.indents=[],this.indentLiteral="",this.ends=[],this.tokens=[],this.seenFor=!1,this.seenImport=!1,this.seenExport=!1,this.importSpecifierList=!1,this.exportSpecifierList=!1,this.jsxDepth=0,this.jsxObjAttribute={},this.chunkLine=opts.line||0,this.chunkColumn=opts.column||0,this.chunkOffset=opts.offset||0,this.locationDataCompensations=opts.locationDataCompensations||{},code=this.clean(code),i=0;this.chunk=code.slice(i);){consumed=this.identifierToken()||this.commentToken()||this.whitespaceToken()||this.lineToken()||this.stringToken()||this.numberToken()||this.jsxToken()||this.regexToken()||this.jsToken()||this.literalToken();var _this$getLineAndColum=this.getLineAndColumnFromChunk(consumed),_this$getLineAndColum2=_slicedToArray(_this$getLineAndColum,3);if(this.chunkLine=_this$getLineAndColum2[0],this.chunkColumn=_this$getLineAndColum2[1],this.chunkOffset=_this$getLineAndColum2[2],i+=consumed,opts.untilBalanced&&0===this.ends.length)return{tokens:this.tokens,index:i}}return this.closeIndentation(),(end=this.ends.pop())&&this.error("missing ".concat(end.tag),(null==(ref=end.origin)?end:ref)[2]),!1===opts.rewrite?this.tokens:new Rewriter().rewrite(this.tokens)}},{key:"clean",value:function clean(code){var _this4=this,base,thusFar;return thusFar=0,code.charCodeAt(0)===BOM&&(code=code.slice(1),this.locationDataCompensations[0]=1,thusFar+=1),WHITESPACE.test(code)&&(code="\n".concat(code),this.chunkLine--,null==(base=this.locationDataCompensations)[0]&&(base[0]=0),this.locationDataCompensations[0]-=1),code=code.replace(/\r/g,function(match,offset){return _this4.locationDataCompensations[thusFar+offset]=1,""}).replace(TRAILING_SPACES,""),this.literate&&(code=invertLiterate(code)),code}},{key:"identifierToken",value:function identifierToken(){var alias,colon,colonOffset,colonToken,id,idLength,inJSXTag,input,match,poppedToken,prev,prevprev,ref,ref1,ref10,ref11,ref12,ref2,ref3,ref4,ref5,ref6,ref7,ref8,ref9,regExSuper,regex,sup,tag,tagToken,tokenData;if(inJSXTag=this.atJSXTag(),regex=inJSXTag?JSX_ATTRIBUTE:IDENTIFIER,!(match=regex.exec(this.chunk)))return 0;var _match=match,_match2=_slicedToArray(_match,3);if(input=_match2[0],id=_match2[1],colon=_match2[2],idLength=id.length,poppedToken=void 0,"own"===id&&"FOR"===this.tag())return this.token("OWN",id),id.length;if("from"===id&&"YIELD"===this.tag())return this.token("FROM",id),id.length;if("as"===id&&this.seenImport){if("*"===this.value())this.tokens[this.tokens.length-1][0]="IMPORT_ALL";else if(ref=this.value(!0),0<=indexOf.call(COFFEE_KEYWORDS,ref)){prev=this.prev();var _ref7=["IDENTIFIER",this.value(!0)];prev[0]=_ref7[0],prev[1]=_ref7[1]}if("DEFAULT"===(ref1=this.tag())||"IMPORT_ALL"===ref1||"IDENTIFIER"===ref1)return this.token("AS",id),id.length}if("as"===id&&this.seenExport){if("IDENTIFIER"===(ref2=this.tag())||"DEFAULT"===ref2)return this.token("AS",id),id.length;if(ref3=this.value(!0),0<=indexOf.call(COFFEE_KEYWORDS,ref3)){prev=this.prev();var _ref8=["IDENTIFIER",this.value(!0)];return prev[0]=_ref8[0],prev[1]=_ref8[1],this.token("AS",id),id.length}}if("default"===id&&this.seenExport&&("EXPORT"===(ref4=this.tag())||"AS"===ref4))return this.token("DEFAULT",id),id.length;if("do"===id&&(regExSuper=/^(\s*super)(?!\(\))/.exec(this.chunk.slice(3)))){this.token("SUPER","super"),this.token("CALL_START","("),this.token("CALL_END",")");var _regExSuper=regExSuper,_regExSuper2=_slicedToArray(_regExSuper,2);return input=_regExSuper2[0],sup=_regExSuper2[1],sup.length+3}if(prev=this.prev(),tag=colon||null!=prev&&("."===(ref5=prev[0])||"?."===ref5||"::"===ref5||"?::"===ref5||!prev.spaced&&"@"===prev[0])?"PROPERTY":"IDENTIFIER",tokenData={},"IDENTIFIER"===tag&&(0<=indexOf.call(JS_KEYWORDS,id)||0<=indexOf.call(COFFEE_KEYWORDS,id))&&!(this.exportSpecifierList&&0<=indexOf.call(COFFEE_KEYWORDS,id))?(tag=id.toUpperCase(),"WHEN"===tag&&(ref6=this.tag(),0<=indexOf.call(LINE_BREAK,ref6))?tag="LEADING_WHEN":"FOR"===tag?this.seenFor={endsLength:this.ends.length}:"UNLESS"===tag?tag="IF":"IMPORT"===tag?this.seenImport=!0:"EXPORT"===tag?this.seenExport=!0:0<=indexOf.call(UNARY,tag)?tag="UNARY":0<=indexOf.call(RELATION,tag)&&("INSTANCEOF"!==tag&&this.seenFor?(tag="FOR"+tag,this.seenFor=!1):(tag="RELATION","!"===this.value()&&(poppedToken=this.tokens.pop(),tokenData.invert=null==(ref7=null==(ref8=poppedToken.data)?void 0:ref8.original)?poppedToken[1]:ref7)))):"IDENTIFIER"===tag&&this.seenFor&&"from"===id&&isForFrom(prev)?(tag="FORFROM",this.seenFor=!1):"PROPERTY"===tag&&prev&&(prev.spaced&&(ref9=prev[0],0<=indexOf.call(CALLABLE,ref9))&&/^[gs]et$/.test(prev[1])&&1<this.tokens.length&&"."!==(ref10=this.tokens[this.tokens.length-2][0])&&"?."!==ref10&&"@"!==ref10?this.error("'".concat(prev[1],"' cannot be used as a keyword, or as a function call without parentheses"),prev[2]):"."===prev[0]&&1<this.tokens.length&&"UNARY"===(prevprev=this.tokens[this.tokens.length-2])[0]&&"new"===prevprev[1]?prevprev[0]="NEW_TARGET":2<this.tokens.length&&(prevprev=this.tokens[this.tokens.length-2],("@"===(ref11=prev[0])||"THIS"===ref11)&&prevprev&&prevprev.spaced&&/^[gs]et$/.test(prevprev[1])&&"."!==(ref12=this.tokens[this.tokens.length-3][0])&&"?."!==ref12&&"@"!==ref12&&this.error("'".concat(prevprev[1],"' cannot be used as a keyword, or as a function call without parentheses"),prevprev[2]))),"IDENTIFIER"===tag&&0<=indexOf.call(RESERVED,id)&&!inJSXTag&&this.error("reserved word '".concat(id,"'"),{length:id.length}),"PROPERTY"===tag||this.exportSpecifierList||this.importSpecifierList||(0<=indexOf.call(COFFEE_ALIASES,id)&&(alias=id,id=COFFEE_ALIAS_MAP[id],tokenData.original=alias),tag=function(){return"!"===id?"UNARY":"=="===id||"!="===id?"COMPARE":"true"===id||"false"===id?"BOOL":"break"===id||"continue"===id||"debugger"===id?"STATEMENT":"&&"===id||"||"===id?id:tag}()),tagToken=this.token(tag,id,{length:idLength,data:tokenData}),alias&&(tagToken.origin=[tag,alias,tagToken[2]]),poppedToken){var _ref9=[poppedToken[2].first_line,poppedToken[2].first_column,poppedToken[2].range[0]];tagToken[2].first_line=_ref9[0],tagToken[2].first_column=_ref9[1],tagToken[2].range[0]=_ref9[2]}return colon&&(colonOffset=input.lastIndexOf(inJSXTag?"=":":"),colonToken=this.token(":",":",{offset:colonOffset}),inJSXTag&&(colonToken.jsxColon=!0)),inJSXTag&&"IDENTIFIER"===tag&&":"!==prev[0]&&this.token(",",",",{length:0,origin:tagToken,generated:!0}),input.length}},{key:"numberToken",value:function numberToken(){var lexedLength,match,number,parsedValue,tag,tokenData;if(!(match=NUMBER.exec(this.chunk)))return 0;switch(number=match[0],lexedLength=number.length,!1){case!/^0[BOX]/.test(number):this.error("radix prefix in '".concat(number,"' must be lowercase"),{offset:1});break;case!/^(?!0x).*E/.test(number):this.error("exponential notation in '".concat(number,"' must be indicated with a lowercase 'e'"),{offset:number.indexOf("E")});break;case!/^0\d*[89]/.test(number):this.error("decimal literal '".concat(number,"' must not be prefixed with '0'"),{length:lexedLength});break;case!/^0\d+/.test(number):this.error("octal literal '".concat(number,"' must be prefixed with '0o'"),{length:lexedLength});}return parsedValue=parseNumber(number),tokenData={parsedValue:parsedValue},tag=2e308===parsedValue?"INFINITY":"NUMBER","INFINITY"===tag&&(tokenData.original=number),this.token(tag,number,{length:lexedLength,data:tokenData}),lexedLength}},{key:"stringToken",value:function stringToken(){var _this5=this,_ref10=STRING_START.exec(this.chunk)||[],_ref11=_slicedToArray(_ref10,1),attempt,delimiter,doc,end,heredoc,i,indent,match,prev,quote,ref,regex,token,tokens;if(quote=_ref11[0],!quote)return 0;prev=this.prev(),prev&&"from"===this.value()&&(this.seenImport||this.seenExport)&&(prev[0]="FROM"),regex=function(){return"'"===quote?STRING_SINGLE:"\""===quote?STRING_DOUBLE:"'''"===quote?HEREDOC_SINGLE:"\"\"\""===quote?HEREDOC_DOUBLE:void 0}();var _this$matchWithInterp=this.matchWithInterpolations(regex,quote);if(tokens=_this$matchWithInterp.tokens,end=_this$matchWithInterp.index,heredoc=3===quote.length,heredoc)for(indent=null,doc=function(){var j,len,results;for(results=[],i=j=0,len=tokens.length;j<len;i=++j)token=tokens[i],"NEOSTRING"===token[0]&&results.push(token[1]);return results}().join("#{}");match=HEREDOC_INDENT.exec(doc);)attempt=match[1],(null===indent||0<(ref=attempt.length)&&ref<indent.length)&&(indent=attempt);return delimiter=quote.charAt(0),this.mergeInterpolationTokens(tokens,{quote:quote,indent:indent,endOffset:end},function(value){return _this5.validateUnicodeCodePointEscapes(value,{delimiter:quote})}),this.atJSXTag()&&this.token(",",",",{length:0,origin:this.prev,generated:!0}),end}},{key:"commentToken",value:function commentToken(){var chunk=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.chunk,_ref12=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},heregex=_ref12.heregex,_ref12$returnCommentT=_ref12.returnCommentTokens,_ref12$offsetInChunk=_ref12.offsetInChunk,offsetInChunk=void 0===_ref12$offsetInChunk?0:_ref12$offsetInChunk,commentAttachment,commentAttachments,commentWithSurroundingWhitespace,content,contents,getIndentSize,hasSeenFirstCommentLine,hereComment,hereLeadingWhitespace,hereTrailingWhitespace,i,indentSize,leadingNewline,leadingNewlineOffset,leadingNewlines,leadingWhitespace,length,lineComment,match,matchIllegal,noIndent,nonInitial,placeholderToken,precededByBlankLine,precedingNonCommentLines,prev;if(!(match=chunk.match(COMMENT)))return 0;var _match3=match,_match4=_slicedToArray(_match3,5);return commentWithSurroundingWhitespace=_match4[0],hereLeadingWhitespace=_match4[1],hereComment=_match4[2],hereTrailingWhitespace=_match4[3],lineComment=_match4[4],contents=null,leadingNewline=/^\s*\n+\s*#/.test(commentWithSurroundingWhitespace),hereComment?(matchIllegal=HERECOMMENT_ILLEGAL.exec(hereComment),matchIllegal&&this.error("block comments cannot contain ".concat(matchIllegal[0]),{offset:"###".length+matchIllegal.index,length:matchIllegal[0].length}),chunk=chunk.replace("###".concat(hereComment,"###"),""),chunk=chunk.replace(/^\n+/,""),this.lineToken({chunk:chunk}),content=hereComment,contents=[{content:content,length:commentWithSurroundingWhitespace.length-hereLeadingWhitespace.length-hereTrailingWhitespace.length,leadingWhitespace:hereLeadingWhitespace}]):(leadingNewlines="",content=lineComment.replace(/^(\n*)/,function(leading){return leadingNewlines=leading,""}),precedingNonCommentLines="",hasSeenFirstCommentLine=!1,contents=content.split("\n").map(function(line){var comment,leadingWhitespace;return-1<line.indexOf("#")?(leadingWhitespace="",content=line.replace(/^([ |\t]*)#/,function(_,whitespace){return leadingWhitespace=whitespace,""}),comment={content:content,length:"#".length+content.length,leadingWhitespace:"".concat(hasSeenFirstCommentLine?"":leadingNewlines).concat(precedingNonCommentLines).concat(leadingWhitespace),precededByBlankLine:!!precedingNonCommentLines},hasSeenFirstCommentLine=!0,precedingNonCommentLines="",comment):void(precedingNonCommentLines+="\n".concat(line))}).filter(function(comment){return comment})),getIndentSize=function(_ref13){var leadingWhitespace=_ref13.leadingWhitespace,nonInitial=_ref13.nonInitial,lastNewlineIndex;if(lastNewlineIndex=leadingWhitespace.lastIndexOf("\n"),null==hereComment&&nonInitial)null==lastNewlineIndex&&(lastNewlineIndex=-1);else if(!(-1<lastNewlineIndex))return null;return leadingWhitespace.length-1-lastNewlineIndex},commentAttachments=function(){var j,len,results;for(results=[],i=j=0,len=contents.length;j<len;i=++j){var _contents$i=contents[i];content=_contents$i.content,length=_contents$i.length,leadingWhitespace=_contents$i.leadingWhitespace,precededByBlankLine=_contents$i.precededByBlankLine,nonInitial=0!==i,leadingNewlineOffset=nonInitial?1:0,offsetInChunk+=leadingNewlineOffset+leadingWhitespace.length,indentSize=getIndentSize({leadingWhitespace:leadingWhitespace,nonInitial:nonInitial}),noIndent=null==indentSize||-1===indentSize,commentAttachment={content:content,here:null!=hereComment,newLine:leadingNewline||nonInitial,locationData:this.makeLocationData({offsetInChunk:offsetInChunk,length:length}),precededByBlankLine:precededByBlankLine,indentSize:indentSize,indented:!noIndent&&indentSize>this.indent,outdented:!noIndent&&indentSize<this.indent},heregex&&(commentAttachment.heregex=!0),offsetInChunk+=length,results.push(commentAttachment)}return results}.call(this),prev=this.prev(),prev?attachCommentsToNode(commentAttachments,prev):(commentAttachments[0].newLine=!0,this.lineToken({chunk:this.chunk.slice(commentWithSurroundingWhitespace.length),offset:commentWithSurroundingWhitespace.length}),placeholderToken=this.makeToken("JS","",{offset:commentWithSurroundingWhitespace.length,generated:!0}),placeholderToken.comments=commentAttachments,this.tokens.push(placeholderToken),this.newlineToken(commentWithSurroundingWhitespace.length)),void 0!==_ref12$returnCommentT&&_ref12$returnCommentT?commentAttachments:commentWithSurroundingWhitespace.length}},{key:"jsToken",value:function jsToken(){var length,match,matchedHere,script;return"`"===this.chunk.charAt(0)&&(match=(matchedHere=HERE_JSTOKEN.exec(this.chunk))||JSTOKEN.exec(this.chunk))?(script=match[1],length=match[0].length,this.token("JS",script,{length:length,data:{here:!!matchedHere}}),length):0}},{key:"regexToken",value:function regexToken(){var _this6=this,body,closed,comment,commentIndex,commentOpts,commentTokens,comments,delimiter,end,flags,fullMatch,index,leadingWhitespace,match,matchedComment,origin,prev,ref,ref1,regex,tokens;switch(!1){case!(match=REGEX_ILLEGAL.exec(this.chunk)):this.error("regular expressions cannot begin with ".concat(match[2]),{offset:match.index+match[1].length});break;case!(match=this.matchWithInterpolations(HEREGEX,"///")):var _match5=match;for(tokens=_match5.tokens,index=_match5.index,comments=[];matchedComment=HEREGEX_COMMENT.exec(this.chunk.slice(0,index));){var _matchedComment=matchedComment;commentIndex=_matchedComment.index;var _matchedComment2=matchedComment,_matchedComment3=_slicedToArray(_matchedComment2,3);fullMatch=_matchedComment3[0],leadingWhitespace=_matchedComment3[1],comment=_matchedComment3[2],comments.push({comment:comment,offsetInChunk:commentIndex+leadingWhitespace.length})}commentTokens=flatten(function(){var j,len,results;for(results=[],j=0,len=comments.length;j<len;j++)commentOpts=comments[j],results.push(this.commentToken(commentOpts.comment,Object.assign(commentOpts,{heregex:!0,returnCommentTokens:!0})));return results}.call(this));break;case!(match=REGEX.exec(this.chunk)):var _match6=match,_match7=_slicedToArray(_match6,3);if(regex=_match7[0],body=_match7[1],closed=_match7[2],this.validateEscapes(body,{isRegex:!0,offsetInChunk:1}),index=regex.length,prev=this.prev(),prev)if(prev.spaced&&(ref=prev[0],0<=indexOf.call(CALLABLE,ref))){if(!closed||POSSIBLY_DIVISION.test(regex))return 0;}else if(ref1=prev[0],0<=indexOf.call(NOT_REGEX,ref1))return 0;closed||this.error("missing / (unclosed regex)");break;default:return 0;}var _REGEX_FLAGS$exec=REGEX_FLAGS.exec(this.chunk.slice(index)),_REGEX_FLAGS$exec2=_slicedToArray(_REGEX_FLAGS$exec,1);switch(flags=_REGEX_FLAGS$exec2[0],end=index+flags.length,origin=this.makeToken("REGEX",null,{length:end}),!1){case!!VALID_FLAGS.test(flags):this.error("invalid regular expression flags ".concat(flags),{offset:index,length:flags.length});break;case!(regex||1===tokens.length):delimiter=body?"/":"///",null==body&&(body=tokens[0][1]),this.validateUnicodeCodePointEscapes(body,{delimiter:delimiter}),this.token("REGEX","/".concat(body,"/").concat(flags),{length:end,origin:origin,data:{delimiter:delimiter}});break;default:this.token("REGEX_START","(",{length:0,origin:origin,generated:!0}),this.token("IDENTIFIER","RegExp",{length:0,generated:!0}),this.token("CALL_START","(",{length:0,generated:!0}),this.mergeInterpolationTokens(tokens,{double:!0,heregex:{flags:flags},endOffset:end-flags.length,quote:"///"},function(str){return _this6.validateUnicodeCodePointEscapes(str,{delimiter:delimiter})}),flags&&(this.token(",",",",{offset:index-1,length:0,generated:!0}),this.token("STRING","\""+flags+"\"",{offset:index,length:flags.length})),this.token(")",")",{offset:end,length:0,generated:!0}),this.token("REGEX_END",")",{offset:end,length:0,generated:!0});}return(null==commentTokens?void 0:commentTokens.length)&&addTokenData(this.tokens[this.tokens.length-1],{heregexCommentTokens:commentTokens}),end}},{key:"lineToken",value:function lineToken(){var _Mathmin=Math.min,_ref14=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},_ref14$chunk=_ref14.chunk,chunk=void 0===_ref14$chunk?this.chunk:_ref14$chunk,_ref14$offset=_ref14.offset,offset=void 0===_ref14$offset?0:_ref14$offset,backslash,diff,endsContinuationLineIndentation,indent,match,minLiteralLength,newIndentLiteral,noNewlines,prev,ref,size;if(!(match=MULTI_DENT.exec(chunk)))return 0;if(indent=match[0],prev=this.prev(),backslash="\\"===(null==prev?void 0:prev[0]),(backslash||(null==(ref=this.seenFor)?void 0:ref.endsLength)<this.ends.length)&&this.seenFor||(this.seenFor=!1),backslash&&this.seenImport||this.importSpecifierList||(this.seenImport=!1),backslash&&this.seenExport||this.exportSpecifierList||(this.seenExport=!1),size=indent.length-1-indent.lastIndexOf("\n"),noNewlines=this.unfinished(),newIndentLiteral=0<size?indent.slice(-size):"",!/^(.?)\1*$/.exec(newIndentLiteral))return this.error("mixed indentation",{offset:indent.length}),indent.length;if(minLiteralLength=_Mathmin(newIndentLiteral.length,this.indentLiteral.length),newIndentLiteral.slice(0,minLiteralLength)!==this.indentLiteral.slice(0,minLiteralLength))return this.error("indentation mismatch",{offset:indent.length}),indent.length;if(size-this.continuationLineAdditionalIndent===this.indent)return noNewlines?this.suppressNewlines():this.newlineToken(offset),indent.length;if(size>this.indent){if(noNewlines)return backslash||(this.continuationLineAdditionalIndent=size-this.indent),this.continuationLineAdditionalIndent&&(prev.continuationLineIndent=this.indent+this.continuationLineAdditionalIndent),this.suppressNewlines(),indent.length;if(!this.tokens.length)return this.baseIndent=this.indent=size,this.indentLiteral=newIndentLiteral,indent.length;diff=size-this.indent+this.outdebt,this.token("INDENT",diff,{offset:offset+indent.length-size,length:size}),this.indents.push(diff),this.ends.push({tag:"OUTDENT"}),this.outdebt=this.continuationLineAdditionalIndent=0,this.indent=size,this.indentLiteral=newIndentLiteral}else size<this.baseIndent?this.error("missing indentation",{offset:offset+indent.length}):(endsContinuationLineIndentation=0<this.continuationLineAdditionalIndent,this.continuationLineAdditionalIndent=0,this.outdentToken({moveOut:this.indent-size,noNewlines:noNewlines,outdentLength:indent.length,offset:offset,indentSize:size,endsContinuationLineIndentation:endsContinuationLineIndentation}));return indent.length}},{key:"outdentToken",value:function outdentToken(_ref15){var moveOut=_ref15.moveOut,noNewlines=_ref15.noNewlines,_ref15$outdentLength=_ref15.outdentLength,outdentLength=void 0===_ref15$outdentLength?0:_ref15$outdentLength,_ref15$offset=_ref15.offset,offset=void 0===_ref15$offset?0:_ref15$offset,indentSize=_ref15.indentSize,endsContinuationLineIndentation=_ref15.endsContinuationLineIndentation,decreasedIndent,dent,lastIndent,ref,terminatorToken;for(decreasedIndent=this.indent-moveOut;0<moveOut;)lastIndent=this.indents[this.indents.length-1],lastIndent?this.outdebt&&moveOut<=this.outdebt?(this.outdebt-=moveOut,moveOut=0):(dent=this.indents.pop()+this.outdebt,outdentLength&&(ref=this.chunk[outdentLength],0<=indexOf.call(INDENTABLE_CLOSERS,ref))&&(decreasedIndent-=dent-moveOut,moveOut=dent),this.outdebt=0,this.pair("OUTDENT"),this.token("OUTDENT",moveOut,{length:outdentLength,indentSize:indentSize+moveOut-dent}),moveOut-=dent):this.outdebt=moveOut=0;return dent&&(this.outdebt-=moveOut),this.suppressSemicolons(),"TERMINATOR"===this.tag()||noNewlines||(terminatorToken=this.token("TERMINATOR","\n",{offset:offset+outdentLength,length:0}),endsContinuationLineIndentation&&(terminatorToken.endsContinuationLineIndentation={preContinuationLineIndent:this.indent})),this.indent=decreasedIndent,this.indentLiteral=this.indentLiteral.slice(0,decreasedIndent),this}},{key:"whitespaceToken",value:function whitespaceToken(){var match,nline,prev;return(match=WHITESPACE.exec(this.chunk))||(nline="\n"===this.chunk.charAt(0))?(prev=this.prev(),prev&&(prev[match?"spaced":"newLine"]=!0),match?match[0].length:0):0}},{key:"newlineToken",value:function newlineToken(offset){return this.suppressSemicolons(),"TERMINATOR"!==this.tag()&&this.token("TERMINATOR","\n",{offset:offset,length:0}),this}},{key:"suppressNewlines",value:function suppressNewlines(){var prev;return prev=this.prev(),"\\"===prev[1]&&(prev.comments&&1<this.tokens.length&&attachCommentsToNode(prev.comments,this.tokens[this.tokens.length-2]),this.tokens.pop()),this}},{key:"jsxToken",value:function jsxToken(){var _this7=this,afterTag,end,endToken,firstChar,fullId,fullTagName,id,input,j,jsxTag,len,match,offset,openingTagToken,prev,prevChar,properties,property,ref,tagToken,token,tokens;if(firstChar=this.chunk[0],prevChar=0<this.tokens.length?this.tokens[this.tokens.length-1][0]:"","<"===firstChar){if(match=JSX_IDENTIFIER.exec(this.chunk.slice(1))||JSX_FRAGMENT_IDENTIFIER.exec(this.chunk.slice(1)),!(match&&(0<this.jsxDepth||!(prev=this.prev())||prev.spaced||(ref=prev[0],0>indexOf.call(COMPARABLE_LEFT_SIDE,ref)))))return 0;var _match8=match,_match9=_slicedToArray(_match8,2);if(input=_match9[0],id=_match9[1],fullId=id,0<=indexOf.call(id,".")){var _id$split=id.split("."),_id$split2=_toArray(_id$split);id=_id$split2[0],properties=_id$split2.slice(1)}else properties=[];for(tagToken=this.token("JSX_TAG",id,{length:id.length+1,data:{openingBracketToken:this.makeToken("<","<"),tagNameToken:this.makeToken("IDENTIFIER",id,{offset:1})}}),offset=id.length+1,(j=0,len=properties.length);j<len;j++)property=properties[j],this.token(".",".",{offset:offset}),offset+=1,this.token("PROPERTY",property,{offset:offset}),offset+=property.length;return this.token("CALL_START","(",{generated:!0}),this.token("[","[",{generated:!0}),this.ends.push({tag:"/>",origin:tagToken,name:id,properties:properties}),this.jsxDepth++,fullId.length+1}if(jsxTag=this.atJSXTag()){if("/>"===this.chunk.slice(0,2))return this.pair("/>"),this.token("]","]",{length:2,generated:!0}),this.token("CALL_END",")",{length:2,generated:!0,data:{selfClosingSlashToken:this.makeToken("/","/"),closingBracketToken:this.makeToken(">",">",{offset:1})}}),this.jsxDepth--,2;if("{"===firstChar)return":"===prevChar?(token=this.token("(","{"),this.jsxObjAttribute[this.jsxDepth]=!1,addTokenData(this.tokens[this.tokens.length-3],{jsx:!0})):(token=this.token("{","{"),this.jsxObjAttribute[this.jsxDepth]=!0),this.ends.push({tag:"}",origin:token}),1;if(">"===firstChar){var _this$pair=this.pair("/>");openingTagToken=_this$pair.origin,this.token("]","]",{generated:!0,data:{closingBracketToken:this.makeToken(">",">")}}),this.token(",","JSX_COMMA",{generated:!0});var _this$matchWithInterp2=this.matchWithInterpolations(INSIDE_JSX,">","</",JSX_INTERPOLATION);tokens=_this$matchWithInterp2.tokens,end=_this$matchWithInterp2.index,this.mergeInterpolationTokens(tokens,{endOffset:end,jsx:!0},function(value){return _this7.validateUnicodeCodePointEscapes(value,{delimiter:">"})}),match=JSX_IDENTIFIER.exec(this.chunk.slice(end))||JSX_FRAGMENT_IDENTIFIER.exec(this.chunk.slice(end)),match&&match[1]==="".concat(jsxTag.name).concat(function(){var k,len1,ref1,results;for(ref1=jsxTag.properties,results=[],(k=0,len1=ref1.length);k<len1;k++)property=ref1[k],results.push(".".concat(property));return results}().join(""))||this.error("expected corresponding JSX closing tag for ".concat(jsxTag.name),jsxTag.origin.data.tagNameToken[2]);var _match10=match,_match11=_slicedToArray(_match10,2);return fullTagName=_match11[1],afterTag=end+fullTagName.length,">"!==this.chunk[afterTag]&&this.error("missing closing > after tag name",{offset:afterTag,length:1}),endToken=this.token("CALL_END",")",{offset:end-2,length:fullTagName.length+3,generated:!0,data:{closingTagOpeningBracketToken:this.makeToken("<","<",{offset:end-2}),closingTagSlashToken:this.makeToken("/","/",{offset:end-1}),closingTagNameToken:this.makeToken("IDENTIFIER",fullTagName,{offset:end}),closingTagClosingBracketToken:this.makeToken(">",">",{offset:end+fullTagName.length})}}),addTokenData(openingTagToken,endToken.data),this.jsxDepth--,afterTag+1}return 0}return this.atJSXTag(1)?"}"===firstChar?(this.pair(firstChar),this.jsxObjAttribute[this.jsxDepth]?(this.token("}","}"),this.jsxObjAttribute[this.jsxDepth]=!1):this.token(")","}"),this.token(",",",",{generated:!0}),1):0:0}},{key:"atJSXTag",value:function atJSXTag(){var depth=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,i,last,ref;if(0===this.jsxDepth)return!1;for(i=this.ends.length-1;"OUTDENT"===(null==(ref=this.ends[i])?void 0:ref.tag)||0<depth--;)i--;return last=this.ends[i],"/>"===(null==last?void 0:last.tag)&&last}},{key:"literalToken",value:function literalToken(){var match,message,origin,prev,ref,ref1,ref2,ref3,ref4,ref5,skipToken,tag,token,value;if(match=OPERATOR.exec(this.chunk)){var _match12=match,_match13=_slicedToArray(_match12,1);value=_match13[0],CODE.test(value)&&this.tagParameters()}else value=this.chunk.charAt(0);if(tag=value,prev=this.prev(),prev&&0<=indexOf.call(["="].concat(_toConsumableArray(COMPOUND_ASSIGN)),value)&&(skipToken=!1,"="!==value||"||"!==(ref=prev[1])&&"&&"!==ref||prev.spaced||(prev[0]="COMPOUND_ASSIGN",prev[1]+="=",(null==(ref1=prev.data)?void 0:ref1.original)&&(prev.data.original+="="),prev[2].range=[prev[2].range[0],prev[2].range[1]+1],prev[2].last_column+=1,prev[2].last_column_exclusive+=1,prev=this.tokens[this.tokens.length-2],skipToken=!0),prev&&"PROPERTY"!==prev[0]&&(origin=null==(ref2=prev.origin)?prev:ref2,message=isUnassignable(prev[1],origin[1]),message&&this.error(message,origin[2])),skipToken))return value.length;if("("===value&&"IMPORT"===(null==prev?void 0:prev[0])&&(prev[0]="DYNAMIC_IMPORT"),"{"===value&&this.seenImport?this.importSpecifierList=!0:this.importSpecifierList&&"}"===value?this.importSpecifierList=!1:"{"===value&&"EXPORT"===(null==prev?void 0:prev[0])?this.exportSpecifierList=!0:this.exportSpecifierList&&"}"===value&&(this.exportSpecifierList=!1),";"===value)(ref3=null==prev?void 0:prev[0],0<=indexOf.call(["="].concat(_toConsumableArray(UNFINISHED)),ref3))&&this.error("unexpected ;"),this.seenFor=this.seenImport=this.seenExport=!1,tag="TERMINATOR";else if("*"===value&&"EXPORT"===(null==prev?void 0:prev[0]))tag="EXPORT_ALL";else if(0<=indexOf.call(MATH,value))tag="MATH";else if(0<=indexOf.call(COMPARE,value))tag="COMPARE";else if(0<=indexOf.call(COMPOUND_ASSIGN,value))tag="COMPOUND_ASSIGN";else if(0<=indexOf.call(UNARY,value))tag="UNARY";else if(0<=indexOf.call(UNARY_MATH,value))tag="UNARY_MATH";else if(0<=indexOf.call(SHIFT,value))tag="SHIFT";else if("?"===value&&(null==prev?void 0:prev.spaced))tag="BIN?";else if(prev)if("("===value&&!prev.spaced&&(ref4=prev[0],0<=indexOf.call(CALLABLE,ref4)))"?"===prev[0]&&(prev[0]="FUNC_EXIST"),tag="CALL_START";else if("["===value&&((ref5=prev[0],0<=indexOf.call(INDEXABLE,ref5))&&!prev.spaced||"::"===prev[0]))switch(tag="INDEX_START",prev[0]){case"?":prev[0]="INDEX_SOAK";}return token=this.makeToken(tag,value),"("===value||"{"===value||"["===value?this.ends.push({tag:INVERSES[value],origin:token}):")"===value||"}"===value||"]"===value?this.pair(value):void 0,(this.tokens.push(this.makeToken(tag,value)),value.length)}},{key:"tagParameters",value:function tagParameters(){var i,paramEndToken,stack,tok,tokens;if(")"!==this.tag())return this.tagDoIife();for(stack=[],tokens=this.tokens,i=tokens.length,paramEndToken=tokens[--i],paramEndToken[0]="PARAM_END";tok=tokens[--i];)switch(tok[0]){case")":stack.push(tok);break;case"(":case"CALL_START":if(stack.length)stack.pop();else return"("===tok[0]?(tok[0]="PARAM_START",this.tagDoIife(i-1)):(paramEndToken[0]="CALL_END",this);}return this}},{key:"tagDoIife",value:function tagDoIife(tokenIndex){var tok;return(tok=this.tokens[null==tokenIndex?this.tokens.length-1:tokenIndex],"DO"!==(null==tok?void 0:tok[0]))?this:(tok[0]="DO_IIFE",this)}},{key:"closeIndentation",value:function closeIndentation(){return this.outdentToken({moveOut:this.indent,indentSize:0})}},{key:"matchWithInterpolations",value:function matchWithInterpolations(regex,delimiter){var closingDelimiter=2<arguments.length&&void 0!==arguments[2]?arguments[2]:delimiter,interpolators=3<arguments.length&&void 0!==arguments[3]?arguments[3]:/^#\{/,braceInterpolator,close,column,index,interpolationOffset,interpolator,line,match,nested,offset,offsetInChunk,open,ref,ref1,rest,str,strPart,tokens;if(tokens=[],offsetInChunk=delimiter.length,this.chunk.slice(0,offsetInChunk)!==delimiter)return null;for(str=this.chunk.slice(offsetInChunk);;){var _regex$exec=regex.exec(str),_regex$exec2=_slicedToArray(_regex$exec,1);if(strPart=_regex$exec2[0],this.validateEscapes(strPart,{isRegex:"/"===delimiter.charAt(0),offsetInChunk:offsetInChunk}),tokens.push(this.makeToken("NEOSTRING",strPart,{offset:offsetInChunk})),str=str.slice(strPart.length),offsetInChunk+=strPart.length,!(match=interpolators.exec(str)))break;var _match14=match,_match15=_slicedToArray(_match14,1);interpolator=_match15[0],interpolationOffset=interpolator.length-1;var _this$getLineAndColum3=this.getLineAndColumnFromChunk(offsetInChunk+interpolationOffset),_this$getLineAndColum4=_slicedToArray(_this$getLineAndColum3,3);line=_this$getLineAndColum4[0],column=_this$getLineAndColum4[1],offset=_this$getLineAndColum4[2],rest=str.slice(interpolationOffset);var _tokenize=new Lexer().tokenize(rest,{line:line,column:column,offset:offset,untilBalanced:!0,locationDataCompensations:this.locationDataCompensations});if(nested=_tokenize.tokens,index=_tokenize.index,index+=interpolationOffset,braceInterpolator="}"===str[index-1],braceInterpolator){var _nested,_nested2,_slice$call,_slice$call2;_nested=nested,_nested2=_slicedToArray(_nested,1),open=_nested2[0],_nested,_slice$call=slice.call(nested,-1),_slice$call2=_slicedToArray(_slice$call,1),close=_slice$call2[0],_slice$call,open[0]="INTERPOLATION_START",open[1]="(",open[2].first_column-=interpolationOffset,open[2].range=[open[2].range[0]-interpolationOffset,open[2].range[1]],close[0]="INTERPOLATION_END",close[1]=")",close.origin=["","end of interpolation",close[2]]}"TERMINATOR"===(null==(ref=nested[1])?void 0:ref[0])&&nested.splice(1,1),"INDENT"===(null==(ref1=nested[nested.length-3])?void 0:ref1[0])&&"OUTDENT"===nested[nested.length-2][0]&&nested.splice(-3,2),braceInterpolator||(open=this.makeToken("INTERPOLATION_START","(",{offset:offsetInChunk,length:0,generated:!0}),close=this.makeToken("INTERPOLATION_END",")",{offset:offsetInChunk+index,length:0,generated:!0}),nested=[open].concat(_toConsumableArray(nested),[close])),tokens.push(["TOKENS",nested]),str=str.slice(index),offsetInChunk+=index}return str.slice(0,closingDelimiter.length)!==closingDelimiter&&this.error("missing ".concat(closingDelimiter),{length:delimiter.length}),{tokens:tokens,index:offsetInChunk+closingDelimiter.length}}},{key:"mergeInterpolationTokens",value:function mergeInterpolationTokens(tokens,options,fn){var $,converted,_double,endOffset,firstIndex,heregex,i,indent,j,jsx,k,lastToken,len,len1,locationToken,lparen,placeholderToken,quote,ref,ref1,rparen,tag,token,tokensToPush,val,value;for(quote=options.quote,indent=options.indent,_double=options.double,heregex=options.heregex,endOffset=options.endOffset,jsx=options.jsx,1<tokens.length&&(lparen=this.token("STRING_START","(",{length:null==(ref=null==quote?void 0:quote.length)?0:ref,data:{quote:quote},generated:null==quote||!quote.length})),firstIndex=this.tokens.length,$=tokens.length-1,(i=j=0,len=tokens.length);j<len;i=++j){var _this$tokens2;token=tokens[i];var _token4=token,_token5=_slicedToArray(_token4,2);switch(tag=_token5[0],value=_token5[1],tag){case"TOKENS":if(2===value.length&&(value[0].comments||value[1].comments)){for(placeholderToken=this.makeToken("JS","",{generated:!0}),placeholderToken[2]=value[0][2],(k=0,len1=value.length);k<len1;k++){var _placeholderToken$com;(val=value[k],!!val.comments)&&(null==placeholderToken.comments&&(placeholderToken.comments=[]),(_placeholderToken$com=placeholderToken.comments).push.apply(_placeholderToken$com,_toConsumableArray(val.comments)))}value.splice(1,0,placeholderToken)}locationToken=value[0],tokensToPush=value;break;case"NEOSTRING":converted=fn.call(this,token[1],i),0===i&&addTokenData(token,{initialChunk:!0}),i===$&&addTokenData(token,{finalChunk:!0}),addTokenData(token,{indent:indent,quote:quote,double:_double}),heregex&&addTokenData(token,{heregex:heregex}),jsx&&addTokenData(token,{jsx:jsx}),token[0]="STRING",token[1]="\""+converted+"\"",1===tokens.length&&null!=quote&&(token[2].first_column-=quote.length,"\n"===token[1].substr(-2,1)?(token[2].last_line+=1,token[2].last_column=quote.length-1):(token[2].last_column+=quote.length,2===token[1].length&&(token[2].last_column-=1)),token[2].last_column_exclusive+=quote.length,token[2].range=[token[2].range[0]-quote.length,token[2].range[1]+quote.length]),locationToken=token,tokensToPush=[token];}(_this$tokens2=this.tokens).push.apply(_this$tokens2,_toConsumableArray(tokensToPush))}if(lparen){var _slice$call3=slice.call(tokens,-1),_slice$call4=_slicedToArray(_slice$call3,1);return lastToken=_slice$call4[0],lparen.origin=["STRING",null,{first_line:lparen[2].first_line,first_column:lparen[2].first_column,last_line:lastToken[2].last_line,last_column:lastToken[2].last_column,last_line_exclusive:lastToken[2].last_line_exclusive,last_column_exclusive:lastToken[2].last_column_exclusive,range:[lparen[2].range[0],lastToken[2].range[1]]}],(null==quote?void 0:quote.length)||(lparen[2]=lparen.origin[2]),rparen=this.token("STRING_END",")",{offset:endOffset-(null==quote?"":quote).length,length:null==(ref1=null==quote?void 0:quote.length)?0:ref1,generated:null==quote||!quote.length})}}},{key:"pair",value:function pair(tag){var _slice$call5,_slice$call6,lastIndent,prev,ref,ref1,wanted;if(ref=this.ends,_slice$call5=slice.call(ref,-1),_slice$call6=_slicedToArray(_slice$call5,1),prev=_slice$call6[0],_slice$call5,tag!==(wanted=null==prev?void 0:prev.tag)){var _slice$call7,_slice$call8;return"OUTDENT"!==wanted&&this.error("unmatched ".concat(tag)),ref1=this.indents,_slice$call7=slice.call(ref1,-1),_slice$call8=_slicedToArray(_slice$call7,1),lastIndent=_slice$call8[0],_slice$call7,this.outdentToken({moveOut:lastIndent,noNewlines:!0}),this.pair(tag)}return this.ends.pop()}},{key:"getLocationDataCompensation",value:function getLocationDataCompensation(start,end){var compensation,current,initialEnd,totalCompensation;for(totalCompensation=0,initialEnd=end,current=start;current<=end&&(current!==end||start===initialEnd);)compensation=this.locationDataCompensations[current],null!=compensation&&(totalCompensation+=compensation,end+=compensation),current++;return totalCompensation}},{key:"getLineAndColumnFromChunk",value:function getLineAndColumnFromChunk(offset){var column,columnCompensation,compensation,lastLine,lineCount,previousLinesCompensation,ref,string;if(compensation=this.getLocationDataCompensation(this.chunkOffset,this.chunkOffset+offset),0===offset)return[this.chunkLine,this.chunkColumn+compensation,this.chunkOffset+compensation];if(string=offset>=this.chunk.length?this.chunk:this.chunk.slice(0,+(offset-1)+1||9e9),lineCount=count(string,"\n"),column=this.chunkColumn,0<lineCount){var _slice$call9,_slice$call10;ref=string.split("\n"),_slice$call9=slice.call(ref,-1),_slice$call10=_slicedToArray(_slice$call9,1),lastLine=_slice$call10[0],_slice$call9,column=lastLine.length,previousLinesCompensation=this.getLocationDataCompensation(this.chunkOffset,this.chunkOffset+offset-column),0>previousLinesCompensation&&(previousLinesCompensation=0),columnCompensation=this.getLocationDataCompensation(this.chunkOffset+offset+previousLinesCompensation-column,this.chunkOffset+offset+previousLinesCompensation)}else column+=string.length,columnCompensation=compensation;return[this.chunkLine+lineCount,column+columnCompensation,this.chunkOffset+offset+compensation]}},{key:"makeLocationData",value:function makeLocationData(_ref16){var offsetInChunk=_ref16.offsetInChunk,length=_ref16.length,endOffset,lastCharacter,locationData;locationData={range:[]};var _this$getLineAndColum5=this.getLineAndColumnFromChunk(offsetInChunk),_this$getLineAndColum6=_slicedToArray(_this$getLineAndColum5,3);locationData.first_line=_this$getLineAndColum6[0],locationData.first_column=_this$getLineAndColum6[1],locationData.range[0]=_this$getLineAndColum6[2],lastCharacter=0<length?length-1:0;var _this$getLineAndColum7=this.getLineAndColumnFromChunk(offsetInChunk+lastCharacter),_this$getLineAndColum8=_slicedToArray(_this$getLineAndColum7,3);locationData.last_line=_this$getLineAndColum8[0],locationData.last_column=_this$getLineAndColum8[1],endOffset=_this$getLineAndColum8[2];var _this$getLineAndColum9=this.getLineAndColumnFromChunk(offsetInChunk+lastCharacter+(0<length?1:0)),_this$getLineAndColum10=_slicedToArray(_this$getLineAndColum9,2);return locationData.last_line_exclusive=_this$getLineAndColum10[0],locationData.last_column_exclusive=_this$getLineAndColum10[1],locationData.range[1]=0<length?endOffset+1:endOffset,locationData}},{key:"makeToken",value:function makeToken(tag,value){var _ref17=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},_ref17$offset=_ref17.offset,offsetInChunk=void 0===_ref17$offset?0:_ref17$offset,_ref17$length=_ref17.length,length=void 0===_ref17$length?value.length:_ref17$length,origin=_ref17.origin,generated=_ref17.generated,indentSize=_ref17.indentSize,token;return token=[tag,value,this.makeLocationData({offsetInChunk:offsetInChunk,length:length})],origin&&(token.origin=origin),generated&&(token.generated=!0),null!=indentSize&&(token.indentSize=indentSize),token}},{key:"token",value:function(tag,value){var _ref18=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},offset=_ref18.offset,length=_ref18.length,origin=_ref18.origin,data=_ref18.data,generated=_ref18.generated,indentSize=_ref18.indentSize,token;return token=this.makeToken(tag,value,{offset:offset,length:length,origin:origin,generated:generated,indentSize:indentSize}),data&&addTokenData(token,data),this.tokens.push(token),token}},{key:"tag",value:function tag(){var _slice$call11,_slice$call12,ref,token;return ref=this.tokens,_slice$call11=slice.call(ref,-1),_slice$call12=_slicedToArray(_slice$call11,1),token=_slice$call12[0],_slice$call11,null==token?void 0:token[0]}},{key:"value",value:function value(){var useOrigin=!!(0<arguments.length&&void 0!==arguments[0])&&arguments[0],_slice$call13,_slice$call14,ref,token;return ref=this.tokens,_slice$call13=slice.call(ref,-1),_slice$call14=_slicedToArray(_slice$call13,1),token=_slice$call14[0],_slice$call13,useOrigin&&null!=(null==token?void 0:token.origin)?token.origin[1]:null==token?void 0:token[1]}},{key:"prev",value:function prev(){return this.tokens[this.tokens.length-1]}},{key:"unfinished",value:function unfinished(){var ref;return LINE_CONTINUER.test(this.chunk)||(ref=this.tag(),0<=indexOf.call(UNFINISHED,ref))}},{key:"validateUnicodeCodePointEscapes",value:function validateUnicodeCodePointEscapes(str,options){return replaceUnicodeCodePointEscapes(str,merge(options,{error:this.error}))}},{key:"validateEscapes",value:function validateEscapes(str){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},before,hex,invalidEscape,invalidEscapeRegex,match,message,octal,ref,unicode,unicodeCodePoint;if(invalidEscapeRegex=options.isRegex?REGEX_INVALID_ESCAPE:STRING_INVALID_ESCAPE,match=invalidEscapeRegex.exec(str),!!match)return match[0],before=match[1],octal=match[2],hex=match[3],unicodeCodePoint=match[4],unicode=match[5],message=octal?"octal escape sequences are not allowed":"invalid escape sequence",invalidEscape="\\".concat(octal||hex||unicodeCodePoint||unicode),this.error("".concat(message," ").concat(invalidEscape),{offset:(null==(ref=options.offsetInChunk)?0:ref)+match.index+before.length,length:invalidEscape.length})}},{key:"suppressSemicolons",value:function suppressSemicolons(){var ref,ref1,results;for(results=[];";"===this.value();)this.tokens.pop(),(ref=null==(ref1=this.prev())?void 0:ref1[0],0<=indexOf.call(["="].concat(_toConsumableArray(UNFINISHED)),ref))?results.push(this.error("unexpected ;")):results.push(void 0);return results}},{key:"error",value:function error(message){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_this$getLineAndColum11,_this$getLineAndColum12,first_column,first_line,location,ref,ref1;return location="first_line"in options?options:(_this$getLineAndColum11=this.getLineAndColumnFromChunk(null==(ref=options.offset)?0:ref),_this$getLineAndColum12=_slicedToArray(_this$getLineAndColum11,2),first_line=_this$getLineAndColum12[0],first_column=_this$getLineAndColum12[1],_this$getLineAndColum11,{first_line:first_line,first_column:first_column,last_column:first_column+(null==(ref1=options.length)?1:ref1)-1}),throwSyntaxError(message,location)}}]),Lexer}(),isUnassignable=function(name){var displayName=1<arguments.length&&void 0!==arguments[1]?arguments[1]:name;switch(!1){case 0>indexOf.call([].concat(_toConsumableArray(JS_KEYWORDS),_toConsumableArray(COFFEE_KEYWORDS)),name):return"keyword '".concat(displayName,"' can't be assigned");case 0>indexOf.call(STRICT_PROSCRIBED,name):return"'".concat(displayName,"' can't be assigned");case 0>indexOf.call(RESERVED,name):return"reserved word '".concat(displayName,"' can't be assigned");default:return!1;}},exports.isUnassignable=isUnassignable,isForFrom=function(prev){var ref;return"IDENTIFIER"===prev[0]||"FOR"!==prev[0]&&"{"!==(ref=prev[1])&&"["!==ref&&","!==ref&&":"!==ref},addTokenData=function(token,data){return Object.assign(null==token.data?token.data={}:token.data,data)},JS_KEYWORDS=["true","false","null","this","new","delete","typeof","in","instanceof","return","throw","break","continue","debugger","yield","await","if","else","switch","for","while","do","try","catch","finally","class","extends","super","import","export","default"],COFFEE_KEYWORDS=["undefined","Infinity","NaN","then","unless","until","loop","of","by","when"],COFFEE_ALIAS_MAP={and:"&&",or:"||",is:"==",isnt:"!=",not:"!",yes:"true",no:"false",on:"true",off:"false"},COFFEE_ALIASES=function(){var results;for(key in results=[],COFFEE_ALIAS_MAP)results.push(key);return results}(),COFFEE_KEYWORDS=COFFEE_KEYWORDS.concat(COFFEE_ALIASES),RESERVED=["case","function","var","void","with","const","let","enum","native","implements","interface","package","private","protected","public","static"],STRICT_PROSCRIBED=["arguments","eval"],exports.JS_FORBIDDEN=JS_KEYWORDS.concat(RESERVED).concat(STRICT_PROSCRIBED),BOM=65279,IDENTIFIER=/^(?!\d)((?:(?!\s)[$\w\x7f-\uffff])+)([^\n\S]*:(?!:))?/,JSX_IDENTIFIER_PART=/(?:(?!\s)[\-$\w\x7f-\uffff])+/.source,JSX_IDENTIFIER=RegExp("^(?![\\d<])(".concat(JSX_IDENTIFIER_PART,"(?:\\s*:\\s*").concat(JSX_IDENTIFIER_PART,"|(?:\\s*\\.\\s*").concat(JSX_IDENTIFIER_PART,")+)?)")),JSX_FRAGMENT_IDENTIFIER=/^()>/,JSX_ATTRIBUTE=RegExp("^(?!\\d)(".concat(JSX_IDENTIFIER_PART,"(?:\\s*:\\s*").concat(JSX_IDENTIFIER_PART,")?)([^\\S]*=(?!=))?")),NUMBER=/^0b[01](?:_?[01])*n?|^0o[0-7](?:_?[0-7])*n?|^0x[\da-f](?:_?[\da-f])*n?|^\d+n|^(?:\d(?:_?\d)*)?\.?(?:\d(?:_?\d)*)+(?:e[+-]?(?:\d(?:_?\d)*)+)?/i,OPERATOR=/^(?:[-=]>|[-+*\/%<>&|^!?=]=|>>>=?|([-+:])\1|([&|<>*\/%])\2=?|\?(\.|::)|\.{2,3})/,WHITESPACE=/^[^\n\S]+/,COMMENT=/^(\s*)###([^#][\s\S]*?)(?:###([^\n\S]*)|###$)|^((?:\s*#(?!##[^#]).*)+)/,CODE=/^[-=]>/,MULTI_DENT=/^(?:\n[^\n\S]*)+/,JSTOKEN=/^`(?!``)((?:[^`\\]|\\[\s\S])*)`/,HERE_JSTOKEN=/^```((?:[^`\\]|\\[\s\S]|`(?!``))*)```/,STRING_START=/^(?:'''|"""|'|")/,STRING_SINGLE=/^(?:[^\\']|\\[\s\S])*/,STRING_DOUBLE=/^(?:[^\\"#]|\\[\s\S]|\#(?!\{))*/,HEREDOC_SINGLE=/^(?:[^\\']|\\[\s\S]|'(?!''))*/,HEREDOC_DOUBLE=/^(?:[^\\"#]|\\[\s\S]|"(?!"")|\#(?!\{))*/,INSIDE_JSX=/^(?:[^\{<])*/,JSX_INTERPOLATION=/^(?:\{|<(?!\/))/,HEREDOC_INDENT=/\n+([^\n\S]*)(?=\S)/g,REGEX=/^\/(?!\/)((?:[^[\/\n\\]|\\[^\n]|\[(?:\\[^\n]|[^\]\n\\])*\])*)(\/)?/,REGEX_FLAGS=/^\w*/,VALID_FLAGS=/^(?!.*(.).*\1)[gimsuy]*$/,HEREGEX=/^(?:[^\\\/#\s]|\\[\s\S]|\/(?!\/\/)|\#(?!\{)|\s+(?:#(?!\{).*)?)*/,HEREGEX_COMMENT=/(\s+)(#(?!{).*)/gm,REGEX_ILLEGAL=/^(\/|\/{3}\s*)(\*)/,POSSIBLY_DIVISION=/^\/=?\s/,HERECOMMENT_ILLEGAL=/\*\//,LINE_CONTINUER=/^\s*(?:,|\??\.(?![.\d])|\??::)/,STRING_INVALID_ESCAPE=/((?:^|[^\\])(?:\\\\)*)\\(?:(0\d|[1-7])|(x(?![\da-fA-F]{2}).{0,2})|(u\{(?![\da-fA-F]{1,}\})[^}]*\}?)|(u(?!\{|[\da-fA-F]{4}).{0,4}))/,REGEX_INVALID_ESCAPE=/((?:^|[^\\])(?:\\\\)*)\\(?:(0\d)|(x(?![\da-fA-F]{2}).{0,2})|(u\{(?![\da-fA-F]{1,}\})[^}]*\}?)|(u(?!\{|[\da-fA-F]{4}).{0,4}))/,TRAILING_SPACES=/\s+$/,COMPOUND_ASSIGN=["-=","+=","/=","*=","%=","||=","&&=","?=","<<=",">>=",">>>=","&=","^=","|=","**=","//=","%%="],UNARY=["NEW","TYPEOF","DELETE"],UNARY_MATH=["!","~"],SHIFT=["<<",">>",">>>"],COMPARE=["==","!=","<",">","<=",">="],MATH=["*","/","%","//","%%"],RELATION=["IN","OF","INSTANCEOF"],BOOL=["TRUE","FALSE"],CALLABLE=["IDENTIFIER","PROPERTY",")","]","?","@","THIS","SUPER","DYNAMIC_IMPORT"],INDEXABLE=CALLABLE.concat(["NUMBER","INFINITY","NAN","STRING","STRING_END","REGEX","REGEX_END","BOOL","NULL","UNDEFINED","}","::"]),COMPARABLE_LEFT_SIDE=["IDENTIFIER",")","]","NUMBER"],NOT_REGEX=INDEXABLE.concat(["++","--"]),LINE_BREAK=["INDENT","OUTDENT","TERMINATOR"],INDENTABLE_CLOSERS=[")","}","]"]}.call(this),{exports:exports}.exports}(),require["./parser"]=function(){var exports={},module={exports:exports},parser=function(){function Parser(){this.yy={}}var o=function(k,v,_o,l){for(_o=_o||{},l=k.length;l--;_o[k[l]]=v);return _o},$V0=[1,24],$V1=[1,59],$V2=[1,97],$V3=[1,98],$V4=[1,93],$V5=[1,99],$V6=[1,100],$V7=[1,95],$V8=[1,96],$V9=[1,68],$Va=[1,70],$Vb=[1,71],$Vc=[1,72],$Vd=[1,73],$Ve=[1,74],$Vf=[1,76],$Vg=[1,80],$Vh=[1,77],$Vi=[1,78],$Vj=[1,62],$Vk=[1,45],$Vl=[1,38],$Vm=[1,82],$Vn=[1,83],$Vo=[1,81],$Vp=[1,92],$Vq=[1,57],$Vr=[1,63],$Vs=[1,64],$Vt=[1,79],$Vu=[1,50],$Vv=[1,58],$Vw=[1,75],$Vx=[1,87],$Vy=[1,88],$Vz=[1,89],$VA=[1,90],$VB=[1,56],$VC=[1,86],$VD=[1,40],$VE=[1,41],$VF=[1,61],$VG=[1,42],$VH=[1,43],$VI=[1,44],$VJ=[1,46],$VK=[1,47],$VL=[1,101],$VM=[1,6,35,52,153],$VN=[1,6,33,35,52,74,76,96,135,142,153,156,164],$VO=[1,119],$VP=[1,120],$VQ=[1,121],$VR=[1,116],$VS=[1,104],$VT=[1,103],$VU=[1,102],$VV=[1,105],$VW=[1,106],$VX=[1,107],$VY=[1,108],$VZ=[1,109],$V_=[1,110],$V$=[1,111],$V01=[1,112],$V11=[1,113],$V21=[1,114],$V31=[1,115],$V41=[1,123],$V51=[1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,187,188,191,192,193,194,195,196,197,198,199,200,201,202],$V61=[2,211],$V71=[1,129],$V81=[1,134],$V91=[1,130],$Va1=[1,131],$Vb1=[1,132],$Vc1=[1,135],$Vd1=[1,128],$Ve1=[1,6,33,35,52,74,76,96,135,142,153,155,156,157,163,164,181],$Vf1=[1,6,33,35,46,47,52,74,76,91,96,105,106,107,109,110,111,114,118,133,134,135,142,153,155,156,157,163,164,181,187,188,191,192,193,194,195,196,197,198,199,200,201,202],$Vg1=[2,129],$Vh1=[2,133],$Vi1=[6,33,91,96],$Vj1=[2,106],$Vk1=[1,147],$Vl1=[1,146],$Vm1=[1,141],$Vn1=[1,150],$Vo1=[1,155],$Vp1=[1,153],$Vq1=[1,159],$Vr1=[1,165],$Vs1=[1,161],$Vt1=[1,162],$Vu1=[1,164],$Vv1=[1,169],$Vw1=[1,6,33,35,46,47,52,66,74,76,91,96,105,106,107,109,110,111,114,118,133,134,135,142,153,155,156,157,163,164,181,187,188,191,192,193,194,195,196,197,198,199,200,201,202],$Vx1=[2,126],$Vy1=[1,6,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,187,188,191,192,193,194,195,196,197,198,199,200,201,202],$Vz1=[2,31],$VA1=[1,194],$VB1=[1,195],$VC1=[2,93],$VD1=[1,201],$VE1=[1,207],$VF1=[1,222],$VG1=[1,217],$VH1=[1,226],$VI1=[1,223],$VJ1=[1,228],$VK1=[1,229],$VL1=[1,231],$VM1=[2,216],$VN1=[1,233],$VO1=[14,32,33,39,40,44,46,47,54,55,59,60,61,62,63,64,73,75,82,85,87,88,89,93,94,108,116,119,121,129,137,147,151,152,155,157,160,163,174,180,183,184,185,186,187,188,189,190],$VP1=[1,6,33,35,46,47,52,66,74,76,91,96,105,106,107,109,110,111,114,118,120,133,134,135,142,153,155,156,157,163,164,181,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],$VQ1=[1,245],$VR1=[1,246],$VS1=[2,155],$VT1=[1,262],$VU1=[1,263],$VV1=[1,265],$VW1=[1,275],$VX1=[1,276],$VY1=[1,6,33,35,46,47,52,70,74,76,91,96,105,106,107,109,110,111,114,118,133,134,135,142,153,155,156,157,163,164,181,187,188,191,192,193,194,195,196,197,198,199,200,201,202],$VZ1=[1,6,33,35,36,46,47,52,66,70,74,76,91,96,105,106,107,109,110,111,114,118,120,126,133,134,135,142,153,155,156,157,163,164,171,172,173,181,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],$V_1=[1,6,33,35,46,47,49,51,52,57,70,74,76,91,96,105,106,107,109,110,111,114,118,133,134,135,142,153,155,156,157,163,164,181,187,188,191,192,193,194,195,196,197,198,199,200,201,202],$V$1=[1,281],$V02=[46,47,134],$V12=[1,320],$V22=[1,319],$V32=[6,33],$V42=[2,104],$V52=[1,326],$V62=[6,33,35,91,96],$V72=[6,33,35,66,76,91,96],$V82=[1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,187,188,192,193,194,195,196,197,198,199,200,201,202],$V92=[2,366],$Va2=[2,367],$Vb2=[1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,187,188,192,194,195,196,197,198,199,200,201,202],$Vc2=[46,47,105,106,109,110,111,114,133,134],$Vd2=[1,355],$Ve2=[1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181],$Vf2=[2,91],$Vg2=[1,372],$Vh2=[1,374],$Vi2=[1,379],$Vj2=[1,381],$Vk2=[6,33,74,96],$Vl2=[2,236],$Vm2=[2,237],$Vn2=[1,6,33,35,46,47,52,66,74,76,91,96,105,106,107,109,110,111,114,118,133,134,135,142,153,155,156,157,163,164,171,172,173,181,187,188,191,192,193,194,195,196,197,198,199,200,201,202],$Vo2=[1,395],$Vp2=[14,32,33,35,39,40,44,46,47,54,55,59,60,61,62,63,64,73,74,75,76,82,85,87,88,89,93,94,96,108,116,119,121,129,137,147,151,152,155,157,160,163,174,180,183,184,185,186,187,188,189,190],$Vq2=[1,397],$Vr2=[6,33,35,74,96],$Vs2=[6,14,32,33,35,39,40,44,46,47,54,55,59,60,61,62,63,64,73,74,75,76,82,85,87,88,89,93,94,96,108,116,119,121,129,137,147,151,152,155,157,160,163,174,180,183,184,185,186,187,188,189,190],$Vt2=[6,33,35,74,96,135],$Vu2=[1,6,33,35,46,47,52,57,74,76,91,96,105,106,107,109,110,111,114,118,133,134,135,142,153,155,156,157,163,164,181,187,188,191,192,193,194,195,196,197,198,199,200,201,202],$Vv2=[1,408],$Vw2=[1,6,33,35,46,47,52,66,70,74,76,91,96,105,106,107,109,110,111,114,118,120,133,134,135,142,153,155,156,157,163,164,171,172,173,181,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],$Vx2=[1,6,33,35,52,74,76,91,96,107,118,135,142,153,164,181],$Vy2=[1,6,33,35,52,74,76,91,96,107,118,135,142,153,156,164,181],$Vz2=[2,289],$VA2=[171,172,173],$VB2=[96,171,172,173],$VC2=[6,33,118],$VD2=[1,427],$VE2=[6,33,35,96,118],$VF2=[6,33,35,70,96,118],$VG2=[6,33,35,66,70,76,96,105,106,109,110,111,114,118,133,134],$VH2=[6,33,35,76,96,105,106,109,110,111,114,118,133,134],$VI2=[46,47,49,51],$VJ2=[1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,187,188,194,195,196,197,198,199,200,201,202],$VK2=[2,356],$VL2=[2,355],$VM2=[35,107],$VN2=[14,32,35,39,40,44,46,47,54,55,59,60,61,62,63,64,73,75,82,85,87,88,89,93,94,107,108,116,119,121,129,137,147,151,152,155,157,160,163,174,180,183,184,185,186,187,188,189,190],$VO2=[2,222],$VP2=[6,33,35],$VQ2=[2,105],$VR2=[1,466],$VS2=[1,467],$VT2=[1,6,33,35,46,47,52,74,76,91,96,105,106,107,109,110,111,114,118,133,134,135,142,149,150,153,155,156,157,163,164,176,178,181,187,188,191,192,193,194,195,196,197,198,199,200,201,202],$VU2=[1,335],$VV2=[35,176,178],$VW2=[1,6,35,52,74,76,91,96,107,118,135,142,153,156,164,181],$VX2=[1,504],$VY2=[1,511],$VZ2=[1,6,33,35,52,74,76,96,135,142,153,156,164,181],$V_2=[2,120],$V$2=[1,524],$V03=[33,35,74],$V13=[1,532],$V23=[6,33,35,96,135],$V33=[1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,176,181,187,188,191,192,193,194,195,196,197,198,199,200,201,202],$V43=[1,6,33,35,52,74,76,96,135,142,153,156,164,176],$V53=[2,303],$V63=[2,304],$V73=[2,319],$V83=[1,552],$V93=[1,553],$Va3=[6,33,35,118],$Vb3=[1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,157,163,164,181],$Vc3=[6,33,35,96],$Vd3=[1,6,33,35,52,74,76,91,96,107,118,135,142,149,153,155,156,157,163,164,181,187,188,191,192,193,194,195,196,197,198,199,200,201,202],$Ve3=[33,96],$Vf3=[1,604],$Vg3=[1,605],$Vh3=[1,612],$Vi3=[1,613],$Vj3=[1,630],$Vk3=[1,631],$Vl3=[2,274],$Vm3=[2,277],$Vn3=[2,290],$Vo3=[2,305],$Vp3=[2,309],$Vq3=[2,306],$Vr3=[2,310],$Vs3=[2,307],$Vt3=[2,308],$Vu3=[2,320],$Vv3=[2,321],$Vw3=[1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,181],$Vx3=[2,311],$Vy3=[2,313],$Vz3=[2,315],$VA3=[2,317],$VB3=[2,312],$VC3=[2,314],$VD3=[2,316],$VE3=[2,318],parser={trace:function(){},yy:{},symbols_:{error:2,Root:3,Body:4,Line:5,TERMINATOR:6,Expression:7,ExpressionLine:8,Statement:9,FuncDirective:10,YieldReturn:11,AwaitReturn:12,Return:13,STATEMENT:14,Import:15,Export:16,Value:17,Code:18,Operation:19,Assign:20,If:21,Try:22,While:23,For:24,Switch:25,Class:26,Throw:27,Yield:28,CodeLine:29,IfLine:30,OperationLine:31,YIELD:32,INDENT:33,Object:34,OUTDENT:35,FROM:36,Block:37,Identifier:38,IDENTIFIER:39,JSX_TAG:40,Property:41,PROPERTY:42,AlphaNumeric:43,NUMBER:44,String:45,STRING:46,STRING_START:47,Interpolations:48,STRING_END:49,InterpolationChunk:50,INTERPOLATION_START:51,INTERPOLATION_END:52,Regex:53,REGEX:54,REGEX_START:55,Invocation:56,REGEX_END:57,Literal:58,JS:59,UNDEFINED:60,NULL:61,BOOL:62,INFINITY:63,NAN:64,Assignable:65,"=":66,AssignObj:67,ObjAssignable:68,ObjRestValue:69,":":70,SimpleObjAssignable:71,ThisProperty:72,"[":73,"]":74,"@":75,"...":76,ObjSpreadExpr:77,ObjSpreadIdentifier:78,Parenthetical:79,Super:80,This:81,SUPER:82,OptFuncExist:83,Arguments:84,DYNAMIC_IMPORT:85,Accessor:86,RETURN:87,AWAIT:88,PARAM_START:89,ParamList:90,PARAM_END:91,FuncGlyph:92,"->":93,"=>":94,OptComma:95,",":96,Param:97,ParamVar:98,Array:99,Splat:100,SimpleAssignable:101,Range:102,DoIife:103,MetaProperty:104,".":105,INDEX_START:106,INDEX_END:107,NEW_TARGET:108,"?.":109,"::":110,"?::":111,Index:112,IndexValue:113,INDEX_SOAK:114,Slice:115,"{":116,AssignList:117,"}":118,CLASS:119,EXTENDS:120,IMPORT:121,ImportDefaultSpecifier:122,ImportNamespaceSpecifier:123,ImportSpecifierList:124,ImportSpecifier:125,AS:126,DEFAULT:127,IMPORT_ALL:128,EXPORT:129,ExportSpecifierList:130,EXPORT_ALL:131,ExportSpecifier:132,FUNC_EXIST:133,CALL_START:134,CALL_END:135,ArgList:136,THIS:137,Elisions:138,ArgElisionList:139,OptElisions:140,RangeDots:141,"..":142,Arg:143,ArgElision:144,Elision:145,SimpleArgs:146,TRY:147,Catch:148,FINALLY:149,CATCH:150,THROW:151,"(":152,")":153,WhileLineSource:154,WHILE:155,WHEN:156,UNTIL:157,WhileSource:158,Loop:159,LOOP:160,ForBody:161,ForLineBody:162,FOR:163,BY:164,ForStart:165,ForSource:166,ForLineSource:167,ForVariables:168,OWN:169,ForValue:170,FORIN:171,FOROF:172,FORFROM:173,SWITCH:174,Whens:175,ELSE:176,When:177,LEADING_WHEN:178,IfBlock:179,IF:180,POST_IF:181,IfBlockLine:182,UNARY:183,DO:184,DO_IIFE:185,UNARY_MATH:186,"-":187,"+":188,"--":189,"++":190,"?":191,MATH:192,"**":193,SHIFT:194,COMPARE:195,"&":196,"^":197,"|":198,"&&":199,"||":200,"BIN?":201,RELATION:202,COMPOUND_ASSIGN:203,$accept:0,$end:1},terminals_:{2:"error",6:"TERMINATOR",14:"STATEMENT",32:"YIELD",33:"INDENT",35:"OUTDENT",36:"FROM",39:"IDENTIFIER",40:"JSX_TAG",42:"PROPERTY",44:"NUMBER",46:"STRING",47:"STRING_START",49:"STRING_END",51:"INTERPOLATION_START",52:"INTERPOLATION_END",54:"REGEX",55:"REGEX_START",57:"REGEX_END",59:"JS",60:"UNDEFINED",61:"NULL",62:"BOOL",63:"INFINITY",64:"NAN",66:"=",70:":",73:"[",74:"]",75:"@",76:"...",82:"SUPER",85:"DYNAMIC_IMPORT",87:"RETURN",88:"AWAIT",89:"PARAM_START",91:"PARAM_END",93:"->",94:"=>",96:",",105:".",106:"INDEX_START",107:"INDEX_END",108:"NEW_TARGET",109:"?.",110:"::",111:"?::",114:"INDEX_SOAK",116:"{",118:"}",119:"CLASS",120:"EXTENDS",121:"IMPORT",126:"AS",127:"DEFAULT",128:"IMPORT_ALL",129:"EXPORT",131:"EXPORT_ALL",133:"FUNC_EXIST",134:"CALL_START",135:"CALL_END",137:"THIS",142:"..",147:"TRY",149:"FINALLY",150:"CATCH",151:"THROW",152:"(",153:")",155:"WHILE",156:"WHEN",157:"UNTIL",160:"LOOP",163:"FOR",164:"BY",169:"OWN",171:"FORIN",172:"FOROF",173:"FORFROM",174:"SWITCH",176:"ELSE",178:"LEADING_WHEN",180:"IF",181:"POST_IF",183:"UNARY",184:"DO",185:"DO_IIFE",186:"UNARY_MATH",187:"-",188:"+",189:"--",190:"++",191:"?",192:"MATH",193:"**",194:"SHIFT",195:"COMPARE",196:"&",197:"^",198:"|",199:"&&",200:"||",201:"BIN?",202:"RELATION",203:"COMPOUND_ASSIGN"},productions_:[0,[3,0],[3,1],[4,1],[4,3],[4,2],[5,1],[5,1],[5,1],[5,1],[10,1],[10,1],[9,1],[9,1],[9,1],[9,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[8,1],[8,1],[8,1],[28,1],[28,2],[28,4],[28,3],[37,2],[37,3],[38,1],[38,1],[41,1],[43,1],[43,1],[45,1],[45,3],[48,1],[48,2],[50,3],[50,5],[50,2],[50,1],[53,1],[53,3],[58,1],[58,1],[58,1],[58,1],[58,1],[58,1],[58,1],[58,1],[20,3],[20,4],[20,5],[67,1],[67,1],[67,3],[67,5],[67,3],[67,5],[71,1],[71,1],[71,1],[68,1],[68,3],[68,4],[68,1],[69,2],[69,2],[69,2],[69,2],[77,1],[77,1],[77,1],[77,1],[77,1],[77,3],[77,2],[77,3],[77,3],[78,2],[78,2],[13,2],[13,4],[13,1],[11,3],[11,2],[12,3],[12,2],[18,5],[18,2],[29,5],[29,2],[92,1],[92,1],[95,0],[95,1],[90,0],[90,1],[90,3],[90,4],[90,6],[97,1],[97,2],[97,2],[97,3],[97,1],[98,1],[98,1],[98,1],[98,1],[100,2],[100,2],[101,1],[101,2],[101,2],[101,1],[65,1],[65,1],[65,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[17,1],[80,3],[80,4],[80,6],[104,3],[86,2],[86,2],[86,2],[86,2],[86,1],[86,1],[86,1],[112,3],[112,5],[112,2],[113,1],[113,1],[34,4],[117,0],[117,1],[117,3],[117,4],[117,6],[26,1],[26,2],[26,3],[26,4],[26,2],[26,3],[26,4],[26,5],[15,2],[15,4],[15,4],[15,5],[15,7],[15,6],[15,9],[124,1],[124,3],[124,4],[124,4],[124,6],[125,1],[125,3],[125,1],[125,3],[122,1],[123,3],[16,3],[16,5],[16,2],[16,4],[16,5],[16,6],[16,3],[16,5],[16,4],[16,5],[16,7],[130,1],[130,3],[130,4],[130,4],[130,6],[132,1],[132,3],[132,3],[132,1],[132,3],[56,3],[56,3],[56,3],[56,2],[83,0],[83,1],[84,2],[84,4],[81,1],[81,1],[72,2],[99,2],[99,3],[99,4],[141,1],[141,1],[102,5],[102,5],[115,3],[115,2],[115,3],[115,2],[115,2],[115,1],[136,1],[136,3],[136,4],[136,4],[136,6],[143,1],[143,1],[143,1],[143,1],[139,1],[139,3],[139,4],[139,4],[139,6],[144,1],[144,2],[140,1],[140,2],[138,1],[138,2],[145,1],[145,2],[146,1],[146,1],[146,3],[146,3],[22,2],[22,3],[22,4],[22,5],[148,3],[148,3],[148,2],[27,2],[27,4],[79,3],[79,5],[154,2],[154,4],[154,2],[154,4],[158,2],[158,4],[158,4],[158,2],[158,4],[158,4],[23,2],[23,2],[23,2],[23,2],[23,1],[159,2],[159,2],[24,2],[24,2],[24,2],[24,2],[161,2],[161,4],[161,2],[162,4],[162,2],[165,2],[165,3],[165,3],[170,1],[170,1],[170,1],[170,1],[168,1],[168,3],[166,2],[166,2],[166,4],[166,4],[166,4],[166,4],[166,4],[166,4],[166,6],[166,6],[166,6],[166,6],[166,6],[166,6],[166,6],[166,6],[166,2],[166,4],[166,4],[167,2],[167,2],[167,4],[167,4],[167,4],[167,4],[167,4],[167,4],[167,6],[167,6],[167,6],[167,6],[167,6],[167,6],[167,6],[167,6],[167,2],[167,4],[167,4],[25,5],[25,5],[25,7],[25,7],[25,4],[25,6],[175,1],[175,2],[177,3],[177,4],[179,3],[179,5],[21,1],[21,3],[21,3],[21,3],[182,3],[182,5],[30,1],[30,3],[30,3],[30,3],[31,2],[31,2],[31,2],[19,2],[19,2],[19,2],[19,2],[19,2],[19,2],[19,4],[19,2],[19,2],[19,2],[19,2],[19,2],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,5],[19,4],[103,2]],performAction:function(yytext,yyleng,yylineno,yy,yystate,$$,_$){var $0=$$.length-1;switch(yystate){case 1:return this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Root(new yy.Block()));break;case 2:return this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Root($$[$0]));break;case 3:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(yy.Block.wrap([$$[$0]]));break;case 4:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)($$[$0-2].push($$[$0]));break;case 5:this.$=$$[$0-1];break;case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 41:case 52:case 54:case 64:case 69:case 70:case 71:case 72:case 75:case 80:case 81:case 82:case 83:case 84:case 104:case 105:case 116:case 117:case 118:case 119:case 125:case 126:case 129:case 135:case 148:case 236:case 237:case 238:case 240:case 253:case 254:case 297:case 298:case 353:case 359:this.$=$$[$0];break;case 13:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.StatementLiteral($$[$0]));break;case 31:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Op($$[$0],new yy.Value(new yy.Literal(""))));break;case 32:case 363:case 364:case 365:case 367:case 368:case 371:case 394:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Op($$[$0-1],$$[$0]));break;case 33:case 372:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Op($$[$0-3],$$[$0-1]));break;case 34:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Op($$[$0-2].concat($$[$0-1]),$$[$0]));break;case 35:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Block);break;case 36:case 149:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)($$[$0-1]);break;case 37:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.IdentifierLiteral($$[$0]));break;case 38:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(function(){var ref,ref1,ref2,ref3;return new yy.JSXTag($$[$0].toString(),{tagNameLocationData:$$[$0].tagNameToken[2],closingTagOpeningBracketLocationData:null==(ref=$$[$0].closingTagOpeningBracketToken)?void 0:ref[2],closingTagSlashLocationData:null==(ref1=$$[$0].closingTagSlashToken)?void 0:ref1[2],closingTagNameLocationData:null==(ref2=$$[$0].closingTagNameToken)?void 0:ref2[2],closingTagClosingBracketLocationData:null==(ref3=$$[$0].closingTagClosingBracketToken)?void 0:ref3[2]})}());break;case 39:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.PropertyName($$[$0].toString()));break;case 40:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.NumberLiteral($$[$0].toString(),{parsedValue:$$[$0].parsedValue}));break;case 42:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.StringLiteral($$[$0].slice(1,-1),{quote:$$[$0].quote,initialChunk:$$[$0].initialChunk,finalChunk:$$[$0].finalChunk,indent:$$[$0].indent,double:$$[$0].double,heregex:$$[$0].heregex}));break;case 43:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.StringWithInterpolations(yy.Block.wrap($$[$0-1]),{quote:$$[$0-2].quote,startQuote:yy.addDataToNode(yy,_$[$0-2],$$[$0-2],null,null,!0)(new yy.Literal($$[$0-2].toString()))}));break;case 44:case 107:case 156:case 175:case 197:case 231:case 245:case 249:case 301:case 347:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)([$$[$0]]);break;case 45:case 246:case 250:case 348:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)($$[$0-1].concat($$[$0]));break;case 46:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Interpolation($$[$0-1]));break;case 47:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Interpolation($$[$0-2]));break;case 48:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Interpolation);break;case 49:case 282:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)($$[$0]);break;case 50:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.RegexLiteral($$[$0].toString(),{delimiter:$$[$0].delimiter,heregexCommentTokens:$$[$0].heregexCommentTokens}));break;case 51:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.RegexWithInterpolations($$[$0-1],{heregexCommentTokens:$$[$0].heregexCommentTokens}));break;case 53:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.PassthroughLiteral($$[$0].toString(),{here:$$[$0].here,generated:$$[$0].generated}));break;case 55:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.UndefinedLiteral($$[$0]));break;case 56:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.NullLiteral($$[$0]));break;case 57:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.BooleanLiteral($$[$0].toString(),{originalValue:$$[$0].original}));break;case 58:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.InfinityLiteral($$[$0].toString(),{originalValue:$$[$0].original}));break;case 59:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.NaNLiteral($$[$0]));break;case 60:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Assign($$[$0-2],$$[$0]));break;case 61:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Assign($$[$0-3],$$[$0]));break;case 62:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Assign($$[$0-4],$$[$0-1]));break;case 63:case 122:case 127:case 128:case 130:case 131:case 132:case 133:case 134:case 136:case 137:case 299:case 300:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Value($$[$0]));break;case 65:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Assign(yy.addDataToNode(yy,_$[$0-2],$$[$0-2],null,null,!0)(new yy.Value($$[$0-2])),$$[$0],"object",{operatorToken:yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.Literal($$[$0-1]))}));break;case 66:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Assign(yy.addDataToNode(yy,_$[$0-4],$$[$0-4],null,null,!0)(new yy.Value($$[$0-4])),$$[$0-1],"object",{operatorToken:yy.addDataToNode(yy,_$[$0-3],$$[$0-3],null,null,!0)(new yy.Literal($$[$0-3]))}));break;case 67:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Assign(yy.addDataToNode(yy,_$[$0-2],$$[$0-2],null,null,!0)(new yy.Value($$[$0-2])),$$[$0],null,{operatorToken:yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.Literal($$[$0-1]))}));break;case 68:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Assign(yy.addDataToNode(yy,_$[$0-4],$$[$0-4],null,null,!0)(new yy.Value($$[$0-4])),$$[$0-1],null,{operatorToken:yy.addDataToNode(yy,_$[$0-3],$$[$0-3],null,null,!0)(new yy.Literal($$[$0-3]))}));break;case 73:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Value(new yy.ComputedPropertyName($$[$0-1])));break;case 74:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Value(yy.addDataToNode(yy,_$[$0-3],$$[$0-3],null,null,!0)(new yy.ThisLiteral($$[$0-3])),[yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.ComputedPropertyName($$[$0-1]))],"this"));break;case 76:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Splat(new yy.Value($$[$0-1])));break;case 77:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Splat(new yy.Value($$[$0]),{postfix:!1}));break;case 78:case 120:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Splat($$[$0-1]));break;case 79:case 121:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Splat($$[$0],{postfix:!1}));break;case 85:case 209:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.SuperCall(yy.addDataToNode(yy,_$[$0-2],$$[$0-2],null,null,!0)(new yy.Super),$$[$0],$$[$0-1].soak,$$[$0-2]));break;case 86:case 210:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.DynamicImportCall(yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.DynamicImport),$$[$0]));break;case 87:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Call(new yy.Value($$[$0-2]),$$[$0],$$[$0-1].soak));break;case 88:case 208:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Call($$[$0-2],$$[$0],$$[$0-1].soak));break;case 89:case 90:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Value($$[$0-1]).add($$[$0]));break;case 91:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Return($$[$0]));break;case 92:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Return(new yy.Value($$[$0-1])));break;case 93:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Return);break;case 94:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.YieldReturn($$[$0],{returnKeyword:yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.Literal($$[$0-1]))}));break;case 95:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.YieldReturn(null,{returnKeyword:yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(new yy.Literal($$[$0]))}));break;case 96:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.AwaitReturn($$[$0],{returnKeyword:yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.Literal($$[$0-1]))}));break;case 97:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.AwaitReturn(null,{returnKeyword:yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(new yy.Literal($$[$0]))}));break;case 98:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Code($$[$0-3],$$[$0],$$[$0-1],yy.addDataToNode(yy,_$[$0-4],$$[$0-4],null,null,!0)(new yy.Literal($$[$0-4]))));break;case 99:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Code([],$$[$0],$$[$0-1]));break;case 100:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Code($$[$0-3],yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(yy.Block.wrap([$$[$0]])),$$[$0-1],yy.addDataToNode(yy,_$[$0-4],$$[$0-4],null,null,!0)(new yy.Literal($$[$0-4]))));break;case 101:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Code([],yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(yy.Block.wrap([$$[$0]])),$$[$0-1]));break;case 102:case 103:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.FuncGlyph($$[$0]));break;case 106:case 155:case 247:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)([]);break;case 108:case 157:case 176:case 198:case 232:case 241:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)($$[$0-2].concat($$[$0]));break;case 109:case 158:case 177:case 199:case 233:case 242:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)($$[$0-3].concat($$[$0]));break;case 110:case 159:case 179:case 201:case 235:this.$=yy.addDataToNode(yy,_$[$0-5],$$[$0-5],_$[$0],$$[$0],!0)($$[$0-5].concat($$[$0-2]));break;case 111:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Param($$[$0]));break;case 112:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Param($$[$0-1],null,!0));break;case 113:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Param($$[$0],null,{postfix:!1}));break;case 114:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Param($$[$0-2],$$[$0]));break;case 115:case 239:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Expansion);break;case 123:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)($$[$0-1].add($$[$0]));break;case 124:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Value($$[$0-1]).add($$[$0]));break;case 138:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Super(yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(new yy.Access($$[$0])),yy.addDataToNode(yy,_$[$0-2],$$[$0-2],null,null,!0)(new yy.Literal($$[$0-2]))));break;case 139:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Super(yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.Index($$[$0-1])),yy.addDataToNode(yy,_$[$0-3],$$[$0-3],null,null,!0)(new yy.Literal($$[$0-3]))));break;case 140:this.$=yy.addDataToNode(yy,_$[$0-5],$$[$0-5],_$[$0],$$[$0],!0)(new yy.Super(yy.addDataToNode(yy,_$[$0-2],$$[$0-2],null,null,!0)(new yy.Index($$[$0-2])),yy.addDataToNode(yy,_$[$0-5],$$[$0-5],null,null,!0)(new yy.Literal($$[$0-5]))));break;case 141:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.MetaProperty(yy.addDataToNode(yy,_$[$0-2],$$[$0-2],null,null,!0)(new yy.IdentifierLiteral($$[$0-2])),yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(new yy.Access($$[$0]))));break;case 142:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Access($$[$0]));break;case 143:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Access($$[$0],{soak:!0}));break;case 144:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)([yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.Access(new yy.PropertyName("prototype"),{shorthand:!0})),yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(new yy.Access($$[$0]))]);break;case 145:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)([yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.Access(new yy.PropertyName("prototype"),{shorthand:!0,soak:!0})),yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(new yy.Access($$[$0]))]);break;case 146:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Access(new yy.PropertyName("prototype"),{shorthand:!0}));break;case 147:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Access(new yy.PropertyName("prototype"),{shorthand:!0,soak:!0}));break;case 150:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)($$[$0-2]);break;case 151:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(yy.extend($$[$0],{soak:!0}));break;case 152:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Index($$[$0]));break;case 153:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Slice($$[$0]));break;case 154:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Obj($$[$0-2],$$[$0-3].generated));break;case 160:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Class);break;case 161:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Class(null,null,$$[$0]));break;case 162:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Class(null,$$[$0]));break;case 163:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Class(null,$$[$0-1],$$[$0]));break;case 164:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Class($$[$0]));break;case 165:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Class($$[$0-1],null,$$[$0]));break;case 166:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Class($$[$0-2],$$[$0]));break;case 167:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Class($$[$0-3],$$[$0-1],$$[$0]));break;case 168:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.ImportDeclaration(null,$$[$0]));break;case 169:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.ImportDeclaration(new yy.ImportClause($$[$0-2],null),$$[$0]));break;case 170:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.ImportDeclaration(new yy.ImportClause(null,$$[$0-2]),$$[$0]));break;case 171:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.ImportDeclaration(new yy.ImportClause(null,new yy.ImportSpecifierList([])),$$[$0]));break;case 172:this.$=yy.addDataToNode(yy,_$[$0-6],$$[$0-6],_$[$0],$$[$0],!0)(new yy.ImportDeclaration(new yy.ImportClause(null,new yy.ImportSpecifierList($$[$0-4])),$$[$0]));break;case 173:this.$=yy.addDataToNode(yy,_$[$0-5],$$[$0-5],_$[$0],$$[$0],!0)(new yy.ImportDeclaration(new yy.ImportClause($$[$0-4],$$[$0-2]),$$[$0]));break;case 174:this.$=yy.addDataToNode(yy,_$[$0-8],$$[$0-8],_$[$0],$$[$0],!0)(new yy.ImportDeclaration(new yy.ImportClause($$[$0-7],new yy.ImportSpecifierList($$[$0-4])),$$[$0]));break;case 178:case 200:case 234:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)($$[$0-2]);break;case 180:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.ImportSpecifier($$[$0]));break;case 181:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.ImportSpecifier($$[$0-2],$$[$0]));break;case 182:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.ImportSpecifier(yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(new yy.DefaultLiteral($$[$0]))));break;case 183:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.ImportSpecifier(yy.addDataToNode(yy,_$[$0-2],$$[$0-2],null,null,!0)(new yy.DefaultLiteral($$[$0-2])),$$[$0]));break;case 184:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.ImportDefaultSpecifier($$[$0]));break;case 185:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.ImportNamespaceSpecifier(new yy.Literal($$[$0-2]),$$[$0]));break;case 186:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.ExportNamedDeclaration(new yy.ExportSpecifierList([])));break;case 187:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.ExportNamedDeclaration(new yy.ExportSpecifierList($$[$0-2])));break;case 188:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.ExportNamedDeclaration($$[$0]));break;case 189:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.ExportNamedDeclaration(yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Assign($$[$0-2],$$[$0],null,{moduleDeclaration:"export"}))));break;case 190:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.ExportNamedDeclaration(yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Assign($$[$0-3],$$[$0],null,{moduleDeclaration:"export"}))));break;case 191:this.$=yy.addDataToNode(yy,_$[$0-5],$$[$0-5],_$[$0],$$[$0],!0)(new yy.ExportNamedDeclaration(yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Assign($$[$0-4],$$[$0-1],null,{moduleDeclaration:"export"}))));break;case 192:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.ExportDefaultDeclaration($$[$0]));break;case 193:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.ExportDefaultDeclaration(new yy.Value($$[$0-1])));break;case 194:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.ExportAllDeclaration(new yy.Literal($$[$0-2]),$$[$0]));break;case 195:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.ExportNamedDeclaration(new yy.ExportSpecifierList([]),$$[$0]));break;case 196:this.$=yy.addDataToNode(yy,_$[$0-6],$$[$0-6],_$[$0],$$[$0],!0)(new yy.ExportNamedDeclaration(new yy.ExportSpecifierList($$[$0-4]),$$[$0]));break;case 202:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.ExportSpecifier($$[$0]));break;case 203:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.ExportSpecifier($$[$0-2],$$[$0]));break;case 204:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.ExportSpecifier($$[$0-2],yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(new yy.DefaultLiteral($$[$0]))));break;case 205:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.ExportSpecifier(yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(new yy.DefaultLiteral($$[$0]))));break;case 206:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.ExportSpecifier(yy.addDataToNode(yy,_$[$0-2],$$[$0-2],null,null,!0)(new yy.DefaultLiteral($$[$0-2])),$$[$0]));break;case 207:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.TaggedTemplateCall($$[$0-2],$$[$0],$$[$0-1].soak));break;case 211:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)({soak:!1});break;case 212:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)({soak:!0});break;case 213:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)([]);break;case 214:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(function(){return $$[$0-2].implicit=$$[$0-3].generated,$$[$0-2]}());break;case 215:case 216:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Value(new yy.ThisLiteral($$[$0])));break;case 217:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Value(yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.ThisLiteral($$[$0-1])),[yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(new yy.Access($$[$0]))],"this"));break;case 218:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Arr([]));break;case 219:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Arr($$[$0-1]));break;case 220:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Arr([].concat($$[$0-2],$$[$0-1])));break;case 221:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)({exclusive:!1});break;case 222:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)({exclusive:!0});break;case 223:case 224:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Range($$[$0-3],$$[$0-1],$$[$0-2].exclusive?"exclusive":"inclusive"));break;case 225:case 227:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Range($$[$0-2],$$[$0],$$[$0-1].exclusive?"exclusive":"inclusive"));break;case 226:case 228:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Range($$[$0-1],null,$$[$0].exclusive?"exclusive":"inclusive"));break;case 229:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Range(null,$$[$0],$$[$0-1].exclusive?"exclusive":"inclusive"));break;case 230:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Range(null,null,$$[$0].exclusive?"exclusive":"inclusive"));break;case 243:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)($$[$0-2].concat($$[$0-1]));break;case 244:this.$=yy.addDataToNode(yy,_$[$0-5],$$[$0-5],_$[$0],$$[$0],!0)($$[$0-5].concat($$[$0-4],$$[$0-2],$$[$0-1]));break;case 248:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)([].concat($$[$0]));break;case 251:this.$=yy.addDataToNode(yy,_$[$0],$$[$0],_$[$0],$$[$0],!0)(new yy.Elision);break;case 252:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)($$[$0-1]);break;case 255:case 256:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)([].concat($$[$0-2],$$[$0]));break;case 257:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Try($$[$0]));break;case 258:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Try($$[$0-1],$$[$0]));break;case 259:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Try($$[$0-2],null,$$[$0],yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.Literal($$[$0-1]))));break;case 260:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Try($$[$0-3],$$[$0-2],$$[$0],yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.Literal($$[$0-1]))));break;case 261:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Catch($$[$0],$$[$0-1]));break;case 262:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Catch($$[$0],yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.Value($$[$0-1]))));break;case 263:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Catch($$[$0]));break;case 264:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Throw($$[$0]));break;case 265:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Throw(new yy.Value($$[$0-1])));break;case 266:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Parens($$[$0-1]));break;case 267:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Parens($$[$0-2]));break;case 268:case 272:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.While($$[$0]));break;case 269:case 273:case 274:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.While($$[$0-2],{guard:$$[$0]}));break;case 270:case 275:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.While($$[$0],{invert:!0}));break;case 271:case 276:case 277:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.While($$[$0-2],{invert:!0,guard:$$[$0]}));break;case 278:case 279:case 287:case 288:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)($$[$0-1].addBody($$[$0]));break;case 280:case 281:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(Object.assign($$[$0],{postfix:!0}).addBody(yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(yy.Block.wrap([$$[$0-1]]))));break;case 283:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.While(yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.BooleanLiteral("true")),{isLoop:!0}).addBody($$[$0]));break;case 284:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.While(yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.BooleanLiteral("true")),{isLoop:!0}).addBody(yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(yy.Block.wrap([$$[$0]]))));break;case 285:case 286:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(function(){return $$[$0].postfix=!0,$$[$0].addBody($$[$0-1])}());break;case 289:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.For([],{source:yy.addDataToNode(yy,_$[$0],$$[$0],null,null,!0)(new yy.Value($$[$0]))}));break;case 290:case 292:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.For([],{source:yy.addDataToNode(yy,_$[$0-2],$$[$0-2],null,null,!0)(new yy.Value($$[$0-2])),step:$$[$0]}));break;case 291:case 293:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)($$[$0-1].addSource($$[$0]));break;case 294:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.For([],{name:$$[$0][0],index:$$[$0][1]}));break;case 295:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(function(){var _$$$$=_slicedToArray($$[$0],2),index,name;return name=_$$$$[0],index=_$$$$[1],new yy.For([],{name:name,index:index,await:!0,awaitTag:yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.Literal($$[$0-1]))})}());break;case 296:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(function(){var _$$$$2=_slicedToArray($$[$0],2),index,name;return name=_$$$$2[0],index=_$$$$2[1],new yy.For([],{name:name,index:index,own:!0,ownTag:yy.addDataToNode(yy,_$[$0-1],$$[$0-1],null,null,!0)(new yy.Literal($$[$0-1]))})}());break;case 302:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)([$$[$0-2],$$[$0]]);break;case 303:case 322:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)({source:$$[$0]});break;case 304:case 323:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)({source:$$[$0],object:!0});break;case 305:case 306:case 324:case 325:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)({source:$$[$0-2],guard:$$[$0]});break;case 307:case 308:case 326:case 327:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)({source:$$[$0-2],guard:$$[$0],object:!0});break;case 309:case 310:case 328:case 329:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)({source:$$[$0-2],step:$$[$0]});break;case 311:case 312:case 313:case 314:case 330:case 331:case 332:case 333:this.$=yy.addDataToNode(yy,_$[$0-5],$$[$0-5],_$[$0],$$[$0],!0)({source:$$[$0-4],guard:$$[$0-2],step:$$[$0]});break;case 315:case 316:case 317:case 318:case 334:case 335:case 336:case 337:this.$=yy.addDataToNode(yy,_$[$0-5],$$[$0-5],_$[$0],$$[$0],!0)({source:$$[$0-4],step:$$[$0-2],guard:$$[$0]});break;case 319:case 338:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)({source:$$[$0],from:!0});break;case 320:case 321:case 339:case 340:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)({source:$$[$0-2],guard:$$[$0],from:!0});break;case 341:case 342:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Switch($$[$0-3],$$[$0-1]));break;case 343:case 344:this.$=yy.addDataToNode(yy,_$[$0-6],$$[$0-6],_$[$0],$$[$0],!0)(new yy.Switch($$[$0-5],$$[$0-3],yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0-1],$$[$0-1],!0)($$[$0-1])));break;case 345:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Switch(null,$$[$0-1]));break;case 346:this.$=yy.addDataToNode(yy,_$[$0-5],$$[$0-5],_$[$0],$$[$0],!0)(new yy.Switch(null,$$[$0-3],yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0-1],$$[$0-1],!0)($$[$0-1])));break;case 349:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.SwitchWhen($$[$0-1],$$[$0]));break;case 350:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!1)(yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0-1],$$[$0-1],!0)(new yy.SwitchWhen($$[$0-2],$$[$0-1])));break;case 351:case 357:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.If($$[$0-1],$$[$0],{type:$$[$0-2]}));break;case 352:case 358:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)($$[$0-4].addElse(yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.If($$[$0-1],$$[$0],{type:$$[$0-2]}))));break;case 354:case 360:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)($$[$0-2].addElse($$[$0]));break;case 355:case 356:case 361:case 362:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.If($$[$0],yy.addDataToNode(yy,_$[$0-2],$$[$0-2],null,null,!0)(yy.Block.wrap([$$[$0-2]])),{type:$$[$0-1],postfix:!0}));break;case 366:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Op($$[$0-1].toString(),$$[$0],void 0,void 0,{originalOperator:$$[$0-1].original}));break;case 369:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Op("-",$$[$0]));break;case 370:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Op("+",$$[$0]));break;case 373:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Op("--",$$[$0]));break;case 374:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Op("++",$$[$0]));break;case 375:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Op("--",$$[$0-1],null,!0));break;case 376:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Op("++",$$[$0-1],null,!0));break;case 377:this.$=yy.addDataToNode(yy,_$[$0-1],$$[$0-1],_$[$0],$$[$0],!0)(new yy.Existence($$[$0-1]));break;case 378:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Op("+",$$[$0-2],$$[$0]));break;case 379:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Op("-",$$[$0-2],$$[$0]));break;case 380:case 381:case 382:case 384:case 385:case 386:case 389:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Op($$[$0-1],$$[$0-2],$$[$0]));break;case 383:case 387:case 388:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Op($$[$0-1].toString(),$$[$0-2],$$[$0],void 0,{originalOperator:$$[$0-1].original}));break;case 390:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(function(){var ref,ref1;return new yy.Op($$[$0-1].toString(),$$[$0-2],$$[$0],void 0,{invertOperator:null==(ref=null==(ref1=$$[$0-1].invert)?void 0:ref1.original)?$$[$0-1].invert:ref})}());break;case 391:this.$=yy.addDataToNode(yy,_$[$0-2],$$[$0-2],_$[$0],$$[$0],!0)(new yy.Assign($$[$0-2],$$[$0],$$[$0-1].toString(),{originalContext:$$[$0-1].original}));break;case 392:this.$=yy.addDataToNode(yy,_$[$0-4],$$[$0-4],_$[$0],$$[$0],!0)(new yy.Assign($$[$0-4],$$[$0-1],$$[$0-3].toString(),{originalContext:$$[$0-3].original}));break;case 393:this.$=yy.addDataToNode(yy,_$[$0-3],$$[$0-3],_$[$0],$$[$0],!0)(new yy.Assign($$[$0-3],$$[$0],$$[$0-2].toString(),{originalContext:$$[$0-2].original}));}},table:[{1:[2,1],3:1,4:2,5:3,7:4,8:5,9:6,10:7,11:27,12:28,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$V1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vk,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{1:[3]},{1:[2,2],6:$VL},o($VM,[2,3]),o($VN,[2,6],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($VN,[2,7]),o($VN,[2,8],{165:122,158:124,161:125,155:$VO,157:$VP,163:$VQ,181:$V41}),o($VN,[2,9]),o($V51,[2,16],{83:126,86:127,112:133,46:$V61,47:$V61,134:$V61,105:$V71,106:$V81,109:$V91,110:$Va1,111:$Vb1,114:$Vc1,133:$Vd1}),o($V51,[2,17],{112:133,86:136,105:$V71,106:$V81,109:$V91,110:$Va1,111:$Vb1,114:$Vc1}),o($V51,[2,18]),o($V51,[2,19]),o($V51,[2,20]),o($V51,[2,21]),o($V51,[2,22]),o($V51,[2,23]),o($V51,[2,24]),o($V51,[2,25]),o($V51,[2,26]),o($V51,[2,27]),o($VN,[2,28]),o($VN,[2,29]),o($VN,[2,30]),o($Ve1,[2,12]),o($Ve1,[2,13]),o($Ve1,[2,14]),o($Ve1,[2,15]),o($VN,[2,10]),o($VN,[2,11]),o($Vf1,$Vg1,{66:[1,137]}),o($Vf1,[2,130]),o($Vf1,[2,131]),o($Vf1,[2,132]),o($Vf1,$Vh1),o($Vf1,[2,134]),o($Vf1,[2,135]),o($Vf1,[2,136]),o($Vf1,[2,137]),o($Vi1,$Vj1,{90:138,97:139,98:140,38:142,72:143,99:144,34:145,39:$V2,40:$V3,73:$Vk1,75:$Vl1,76:$Vm1,116:$Vp}),{5:149,7:4,8:5,9:6,10:7,11:27,12:28,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$V1,33:$Vn1,34:66,37:148,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vk,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:151,8:152,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:156,8:157,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:158,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:166,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:167,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:168,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,33:$Vv1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:[1,170],88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{17:172,18:173,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:174,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:171,102:32,103:34,104:37,108:$Vo,116:$Vp,137:$Vt,152:$Vw,185:$Vu1},{17:172,18:173,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:174,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:175,102:32,103:34,104:37,108:$Vo,116:$Vp,137:$Vt,152:$Vw,185:$Vu1},o($Vw1,$Vx1,{189:[1,176],190:[1,177],203:[1,178]}),o($V51,[2,353],{176:[1,179]}),{33:$Vn1,37:180},{33:$Vn1,37:181},{33:$Vn1,37:182},o($V51,[2,282]),{33:$Vn1,37:183},{33:$Vn1,37:184},{7:185,8:186,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,33:[1,187],34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vy1,[2,160],{58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,99:65,34:66,43:67,53:69,38:84,72:85,45:94,92:160,17:172,18:173,65:174,37:188,101:190,33:$Vn1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,82:$Vh,85:$Vi,89:$Vq1,93:$Vm,94:$Vn,108:$Vo,116:$Vp,120:[1,189],137:$Vt,152:$Vw,185:$Vu1}),{7:191,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,33:[1,192],34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o([1,6,35,52,74,76,96,135,142,153,155,156,157,163,164,181,191,192,193,194,195,196,197,198,199,200,201,202],$Vz1,{17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,13:23,15:25,16:26,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,101:48,179:49,158:51,154:52,159:53,161:54,162:55,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,92:160,9:163,7:193,14:$V0,32:$Vo1,33:$VA1,36:$VB1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,82:$Vh,85:$Vi,87:[1,196],88:$Vp1,89:$Vq1,93:$Vm,94:$Vn,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,160:$Vz,174:$VB,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),o($VN,[2,359],{176:[1,197]}),{18:199,29:198,89:$Vl,92:39,93:$Vm,94:$Vn},o([1,6,35,52,74,76,96,135,142,153,155,156,157,163,164,181],$VC1,{17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,13:23,15:25,16:26,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,101:48,179:49,158:51,154:52,159:53,161:54,162:55,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,92:160,9:163,7:200,14:$V0,32:$Vo1,33:$VD1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,93:$Vm,94:$Vn,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,160:$Vz,174:$VB,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),{38:206,39:$V2,40:$V3,45:202,46:$V5,47:$V6,116:[1,205],122:203,123:204,128:$VE1},{26:209,38:210,39:$V2,40:$V3,116:[1,208],119:$Vq,127:[1,211],131:[1,212]},o($Vw1,[2,127]),o($Vw1,[2,128]),o($Vf1,[2,52]),o($Vf1,[2,53]),o($Vf1,[2,54]),o($Vf1,[2,55]),o($Vf1,[2,56]),o($Vf1,[2,57]),o($Vf1,[2,58]),o($Vf1,[2,59]),{4:213,5:3,7:4,8:5,9:6,10:7,11:27,12:28,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$V1,33:[1,214],34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vk,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:215,8:216,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,33:$VF1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,74:$VG1,75:$Vg,76:$VH1,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,96:$VI1,99:65,100:225,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,138:218,139:219,143:224,144:221,145:220,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{83:227,105:$VJ1,106:$VK1,133:$Vd1,134:$V61},{84:230,134:$VL1},o($Vf1,[2,215]),o($Vf1,$VM1,{41:232,42:$VN1}),{105:[1,234]},o($VO1,[2,102]),o($VO1,[2,103]),o($VP1,[2,122]),o($VP1,[2,125]),{7:235,8:236,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:237,8:238,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:239,8:240,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:242,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,33:$Vn1,34:66,37:241,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{34:251,38:248,39:$V2,40:$V3,72:249,73:$Vf,75:$Vl1,88:$VQ1,99:250,102:243,116:$Vp,168:244,169:$VR1,170:247},{166:252,167:253,171:[1,254],172:[1,255],173:[1,256]},o([6,33,96,118],$VS1,{45:94,117:257,67:258,68:259,69:260,71:261,43:264,77:266,38:267,41:268,72:269,78:270,34:271,79:272,80:273,81:274,39:$V2,40:$V3,42:$VN1,44:$V4,46:$V5,47:$V6,73:$VT1,75:$VU1,76:$VV1,82:$VW1,85:$VX1,116:$Vp,137:$Vt,152:$Vw}),o($VY1,[2,40]),o($VY1,[2,41]),o($Vf1,[2,50]),{17:172,18:173,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:277,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:174,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:278,102:32,103:34,104:37,108:$Vo,116:$Vp,137:$Vt,152:$Vw,185:$Vu1},o($VZ1,[2,37]),o($VZ1,[2,38]),o($V_1,[2,42]),{45:282,46:$V5,47:$V6,48:279,50:280,51:$V$1},o($VM,[2,5],{7:4,8:5,9:6,10:7,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,13:23,15:25,16:26,11:27,12:28,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,92:39,101:48,179:49,158:51,154:52,159:53,161:54,162:55,182:60,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,5:283,14:$V0,32:$V1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,82:$Vh,85:$Vi,87:$Vj,88:$Vk,89:$Vl,93:$Vm,94:$Vn,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,155:$Vx,157:$Vy,160:$Vz,163:$VA,174:$VB,180:$VC,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),o($V51,[2,377]),{7:284,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:285,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:286,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:287,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:288,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:289,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:290,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:291,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:292,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:293,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:294,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:295,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:296,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:297,8:298,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($V51,[2,281]),o($V51,[2,286]),{7:237,8:299,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:239,8:300,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{34:251,38:248,39:$V2,40:$V3,72:249,73:$Vf,75:$Vl1,88:$VQ1,99:250,102:301,116:$Vp,168:244,169:$VR1,170:247},{166:252,171:[1,302],172:[1,303],173:[1,304]},{7:305,8:306,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($V51,[2,280]),o($V51,[2,285]),{45:307,46:$V5,47:$V6,84:308,134:$VL1},o($VP1,[2,123]),o($V02,[2,212]),{41:309,42:$VN1},{41:310,42:$VN1},o($VP1,[2,146],{41:311,42:$VN1}),o($VP1,[2,147],{41:312,42:$VN1}),o($VP1,[2,148]),{7:315,8:317,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,33:[1,314],34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,76:$V12,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,113:313,115:316,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,141:318,142:$V22,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{106:$V81,112:321,114:$Vc1},o($VP1,[2,124]),{6:[1,323],7:322,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,33:[1,324],34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($V32,$V42,{95:327,91:[1,325],96:$V52}),o($V62,[2,107]),o($V62,[2,111],{66:[1,329],76:[1,328]}),o($V62,[2,115],{38:142,72:143,99:144,34:145,98:330,39:$V2,40:$V3,73:$Vk1,75:$Vl1,116:$Vp}),o($V72,[2,116]),o($V72,[2,117]),o($V72,[2,118]),o($V72,[2,119]),{41:232,42:$VN1},{7:331,8:332,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,33:$VF1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,74:$VG1,75:$Vg,76:$VH1,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,96:$VI1,99:65,100:225,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,138:218,139:219,143:224,144:221,145:220,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vf1,[2,99]),o($VN,[2,101]),{4:334,5:3,7:4,8:5,9:6,10:7,11:27,12:28,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$V1,34:66,35:[1,333],38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vk,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($V82,$V92,{158:117,161:118,165:122,191:$VU}),o($VN,[2,363]),{7:168,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,33:$Vv1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{155:$VO,157:$VP,158:124,161:125,163:$VQ,165:122,181:$V41},o([1,6,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,191,192,193,194,195,196,197,198,199,200,201,202],$Vz1,{17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,13:23,15:25,16:26,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,101:48,179:49,158:51,154:52,159:53,161:54,162:55,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,92:160,9:163,7:193,14:$V0,32:$Vo1,33:$VA1,36:$VB1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,93:$Vm,94:$Vn,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,160:$Vz,174:$VB,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),o($V82,$Va2,{158:117,161:118,165:122,191:$VU}),o($VN,[2,364]),o($Vb2,[2,368],{158:117,161:118,165:122,191:$VU,193:$VW}),o($Vi1,$Vj1,{97:139,98:140,38:142,72:143,99:144,34:145,90:336,39:$V2,40:$V3,73:$Vk1,75:$Vl1,76:$Vm1,116:$Vp}),{33:$Vn1,37:148},{7:337,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:338,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{155:$VO,157:$VP,158:124,161:125,163:$VQ,165:122,181:[1,339]},{18:199,89:$Vq1,92:160,93:$Vm,94:$Vn},{7:340,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vb2,[2,369],{158:117,161:118,165:122,191:$VU,193:$VW}),o($Vb2,[2,370],{158:117,161:118,165:122,191:$VU,193:$VW}),o($V82,[2,371],{158:117,161:118,165:122,191:$VU}),{34:341,116:$Vp},o($VN,[2,97],{17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,13:23,15:25,16:26,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,101:48,179:49,158:51,154:52,159:53,161:54,162:55,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,92:160,9:163,7:342,14:$V0,32:$Vo1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,93:$Vm,94:$Vn,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,155:$VC1,157:$VC1,163:$VC1,181:$VC1,160:$Vz,174:$VB,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),o($V51,[2,373],{46:$Vx1,47:$Vx1,105:$Vx1,106:$Vx1,109:$Vx1,110:$Vx1,111:$Vx1,114:$Vx1,133:$Vx1,134:$Vx1}),o($V02,$V61,{83:126,86:127,112:133,105:$V71,106:$V81,109:$V91,110:$Va1,111:$Vb1,114:$Vc1,133:$Vd1}),{86:136,105:$V71,106:$V81,109:$V91,110:$Va1,111:$Vb1,112:133,114:$Vc1},o($Vc2,$Vg1),o($V51,[2,374],{46:$Vx1,47:$Vx1,105:$Vx1,106:$Vx1,109:$Vx1,110:$Vx1,111:$Vx1,114:$Vx1,133:$Vx1,134:$Vx1}),o($V51,[2,375]),o($V51,[2,376]),{6:[1,345],7:343,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,33:[1,344],34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{33:$Vn1,37:346,180:[1,347]},o($V51,[2,257],{148:348,149:[1,349],150:[1,350]}),o($V51,[2,278]),o($V51,[2,279]),o($V51,[2,287]),o($V51,[2,288]),{33:[1,351],155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[1,352]},{175:353,177:354,178:$Vd2},o($V51,[2,161]),{7:356,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vy1,[2,164],{37:357,33:$Vn1,46:$Vx1,47:$Vx1,105:$Vx1,106:$Vx1,109:$Vx1,110:$Vx1,111:$Vx1,114:$Vx1,133:$Vx1,134:$Vx1,120:[1,358]}),o($Ve2,[2,264],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{34:359,116:$Vp},o($Ve2,[2,32],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{34:360,116:$Vp},{7:361,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o([1,6,35,52,74,76,96,135,142,153,156,164],[2,95],{17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,13:23,15:25,16:26,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,101:48,179:49,158:51,154:52,159:53,161:54,162:55,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,92:160,9:163,7:362,14:$V0,32:$Vo1,33:$VD1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,93:$Vm,94:$Vn,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,155:$VC1,157:$VC1,163:$VC1,181:$VC1,160:$Vz,174:$VB,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),{33:$Vn1,37:363,180:[1,364]},o($VN,[2,365]),o($Vf1,[2,394]),o($Ve1,$Vf2,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{34:365,116:$Vp},o($Ve1,[2,168]),{36:[1,366],96:[1,367]},{36:[1,368]},{33:$Vg2,38:373,39:$V2,40:$V3,118:[1,369],124:370,125:371,127:$Vh2},o([36,96],[2,184]),{126:[1,375]},{33:$Vi2,38:380,39:$V2,40:$V3,118:[1,376],127:$Vj2,130:377,132:378},o($Ve1,[2,188]),{66:[1,382]},{7:383,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,33:[1,384],34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{36:[1,385]},{6:$VL,153:[1,386]},{4:387,5:3,7:4,8:5,9:6,10:7,11:27,12:28,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$V1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vk,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vk2,$Vl2,{158:117,161:118,165:122,141:388,76:[1,389],142:$V22,155:$VO,157:$VP,163:$VQ,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Vk2,$Vm2,{141:390,76:$V12,142:$V22}),o($Vn2,[2,218]),{7:331,8:332,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,74:[1,391],75:$Vg,76:$VH1,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,96:$VI1,99:65,100:225,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,143:393,145:392,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o([6,33,74],$V42,{140:394,95:396,96:$Vo2}),o($Vp2,[2,249],{6:$Vq2}),o($Vr2,[2,240]),{7:331,8:332,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,33:$VF1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,76:$VH1,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,96:$VI1,99:65,100:225,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,138:399,139:398,143:224,144:221,145:220,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vs2,[2,251]),o($Vr2,[2,245]),o($Vt2,[2,238]),o($Vt2,[2,239],{17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,13:23,15:25,16:26,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,101:48,179:49,158:51,154:52,159:53,161:54,162:55,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,92:160,9:163,7:400,14:$V0,32:$Vo1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,93:$Vm,94:$Vn,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,155:$Vx,157:$Vy,160:$Vz,163:$VA,174:$VB,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),{84:401,134:$VL1},{41:402,42:$VN1},{7:403,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,33:[1,404],34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vu2,[2,210]),{7:331,8:332,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,33:$Vv2,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,76:$VH1,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,100:225,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,135:[1,405],136:406,137:$Vt,143:407,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vw2,[2,217]),o($Vw2,[2,39]),{41:409,42:$VN1},{33:$Vn1,37:410,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:$Vn1,37:411},o($Vx2,[2,272],{158:117,161:118,165:122,155:$VO,156:[1,412],157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{33:[2,268],156:[1,413]},o($Vx2,[2,275],{158:117,161:118,165:122,155:$VO,156:[1,414],157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{33:[2,270],156:[1,415]},o($V51,[2,283]),o($Vy2,[2,284],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{33:$Vz2,164:[1,416]},o($VA2,[2,294]),{34:251,38:248,39:$V2,40:$V3,72:249,73:$Vk1,75:$Vl1,99:250,116:$Vp,168:417,170:247},{34:251,38:248,39:$V2,40:$V3,72:249,73:$Vk1,75:$Vl1,99:250,116:$Vp,168:418,170:247},o($VA2,[2,301],{96:[1,419]}),o($VB2,[2,297]),o($VB2,[2,298]),o($VB2,[2,299]),o($VB2,[2,300]),o($V51,[2,291]),{33:[2,293]},{7:420,8:421,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:422,8:423,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:424,8:425,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($VC2,$V42,{95:426,96:$VD2}),o($VE2,[2,156]),o($VE2,[2,63],{70:[1,428]}),o($VE2,[2,64]),o($VF2,[2,72],{112:133,83:431,86:432,66:[1,429],76:[1,430],105:$V71,106:$V81,109:$V91,110:$Va1,111:$Vb1,114:$Vc1,133:$Vd1,134:$V61}),{7:433,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o([76,105,106,109,110,111,114,133,134],$VM1,{41:232,42:$VN1,73:[1,434]}),o($VF2,[2,75]),{34:271,38:267,39:$V2,40:$V3,41:268,42:$VN1,71:435,72:269,75:$Vg,77:436,78:270,79:272,80:273,81:274,82:$VW1,85:$VX1,116:$Vp,137:$Vt,152:$Vw},{76:[1,437],83:438,86:439,105:$V71,106:$V81,109:$V91,110:$Va1,111:$Vb1,112:133,114:$Vc1,133:$Vd1,134:$V61},o($VG2,[2,69]),o($VG2,[2,70]),o($VG2,[2,71]),o($VH2,[2,80]),o($VH2,[2,81]),o($VH2,[2,82]),o($VH2,[2,83]),o($VH2,[2,84]),{83:440,105:$VJ1,106:$VK1,133:$Vd1,134:$V61},{84:441,134:$VL1},o($Vc2,$Vh1,{57:[1,442]}),o($Vc2,$Vx1),{45:282,46:$V5,47:$V6,49:[1,443],50:444,51:$V$1},o($VI2,[2,44]),{4:445,5:3,7:4,8:5,9:6,10:7,11:27,12:28,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$V1,33:[1,446],34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,52:[1,447],53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vk,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($VI2,[2,49]),o($VM,[2,4]),o($VJ2,[2,378],{158:117,161:118,165:122,191:$VU,192:$VV,193:$VW}),o($VJ2,[2,379],{158:117,161:118,165:122,191:$VU,192:$VV,193:$VW}),o($Vb2,[2,380],{158:117,161:118,165:122,191:$VU,193:$VW}),o($Vb2,[2,381],{158:117,161:118,165:122,191:$VU,193:$VW}),o([1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,194,195,196,197,198,199,200,201,202],[2,382],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW}),o([1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,195,196,197,198,199,200,201],[2,383],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,202:$V31}),o([1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,196,197,198,199,200,201],[2,384],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,202:$V31}),o([1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,197,198,199,200,201],[2,385],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,202:$V31}),o([1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,198,199,200,201],[2,386],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,202:$V31}),o([1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,199,200,201],[2,387],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,202:$V31}),o([1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,200,201],[2,388],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,202:$V31}),o([1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,201],[2,389],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,202:$V31}),o([1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,164,181,195,196,197,198,199,200,201,202],[2,390],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX}),o($Vy2,$VK2,{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($VN,[2,362]),{156:[1,448]},{156:[1,449]},o([1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,156,157,163,181,187,188,191,192,193,194,195,196,197,198,199,200,201,202],$Vz2,{164:[1,450]}),{7:451,8:452,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:453,8:454,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:455,8:456,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vy2,$VL2,{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($VN,[2,361]),o($Vu2,[2,207]),o($Vu2,[2,208]),o($VP1,[2,142]),o($VP1,[2,143]),o($VP1,[2,144]),o($VP1,[2,145]),{107:[1,457]},{7:315,8:317,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,76:$V12,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,113:458,115:316,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,141:318,142:$V22,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($VM2,[2,152],{158:117,161:118,165:122,141:459,76:$V12,142:$V22,155:$VO,157:$VP,163:$VQ,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($VM2,[2,153]),{76:$V12,141:460,142:$V22},o($VM2,[2,230],{17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,13:23,15:25,16:26,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,101:48,179:49,158:51,154:52,159:53,161:54,162:55,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,92:160,9:163,7:461,14:$V0,32:$Vo1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,93:$Vm,94:$Vn,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,155:$Vx,157:$Vy,160:$Vz,163:$VA,174:$VB,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),o($VN2,[2,221]),o($VN2,$VO2),o($VP1,[2,151]),o($Ve2,[2,60],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{7:462,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:463,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{92:464,93:$Vm,94:$Vn},o($VP2,$VQ2,{98:140,38:142,72:143,99:144,34:145,97:465,39:$V2,40:$V3,73:$Vk1,75:$Vl1,76:$Vm1,116:$Vp}),{6:$VR2,33:$VS2},o($V62,[2,112]),{7:468,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($V62,[2,113]),o($Vt2,$Vl2,{158:117,161:118,165:122,76:[1,469],155:$VO,157:$VP,163:$VQ,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Vt2,$Vm2),o($VT2,[2,35]),{6:$VL,35:[1,470]},{7:471,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($V32,$V42,{95:327,91:[1,472],96:$V52}),o($V82,$V92,{158:117,161:118,165:122,191:$VU}),o($V82,$Va2,{158:117,161:118,165:122,191:$VU}),{7:473,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{33:$Vn1,37:410,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{35:[1,474]},o($VN,[2,96],{158:117,161:118,165:122,155:$Vf2,157:$Vf2,163:$Vf2,181:$Vf2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve2,[2,391],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{7:475,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:476,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($V51,[2,354]),{7:477,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($V51,[2,258],{149:[1,478]}),{33:$Vn1,37:479},{33:$Vn1,34:481,37:482,38:480,39:$V2,40:$V3,116:$Vp},{175:483,177:354,178:$Vd2},{175:484,177:354,178:$Vd2},{35:[1,485],176:[1,486],177:487,178:$Vd2},o($VV2,[2,347]),{7:489,8:490,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,146:488,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($VW2,[2,162],{158:117,161:118,165:122,37:491,33:$Vn1,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($V51,[2,165]),{7:492,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{35:[1,493]},{35:[1,494]},o($Ve2,[2,34],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($VN,[2,94],{158:117,161:118,165:122,155:$Vf2,157:$Vf2,163:$Vf2,181:$Vf2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($VN,[2,360]),{7:496,8:495,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{35:[1,497]},{45:498,46:$V5,47:$V6},{116:[1,500],123:499,128:$VE1},{45:501,46:$V5,47:$V6},{36:[1,502]},o($VC2,$V42,{95:503,96:$VX2}),o($VE2,[2,175]),{33:$Vg2,38:373,39:$V2,40:$V3,124:505,125:371,127:$Vh2},o($VE2,[2,180],{126:[1,506]}),o($VE2,[2,182],{126:[1,507]}),{38:508,39:$V2,40:$V3},o($Ve1,[2,186],{36:[1,509]}),o($VC2,$V42,{95:510,96:$VY2}),o($VE2,[2,197]),{33:$Vi2,38:380,39:$V2,40:$V3,127:$Vj2,130:512,132:378},o($VE2,[2,202],{126:[1,513]}),o($VE2,[2,205],{126:[1,514]}),{6:[1,516],7:515,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,33:[1,517],34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($VZ2,[2,192],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{34:518,116:$Vp},{45:519,46:$V5,47:$V6},o($Vf1,[2,266]),{6:$VL,35:[1,520]},{7:521,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o([14,32,39,40,44,46,47,54,55,59,60,61,62,63,64,73,75,82,85,87,88,89,93,94,108,116,119,121,129,137,147,151,152,155,157,160,163,174,180,183,184,185,186,187,188,189,190],$VO2,{6:$V_2,33:$V_2,74:$V_2,96:$V_2}),{7:522,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vn2,[2,219]),o($Vp2,[2,250],{6:$Vq2}),o($Vr2,[2,246]),{33:$V$2,74:[1,523]},o([6,33,35,74],$VQ2,{17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,13:23,15:25,16:26,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,92:39,101:48,179:49,158:51,154:52,159:53,161:54,162:55,182:60,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,9:154,145:220,143:224,100:225,7:331,8:332,144:525,138:526,14:$V0,32:$Vo1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,76:$VH1,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,93:$Vm,94:$Vn,96:$VI1,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,155:$Vx,157:$Vy,160:$Vz,163:$VA,174:$VB,180:$VC,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),o($V03,[2,247],{6:[1,527]}),o($Vs2,[2,252]),o($VP2,$V42,{95:396,140:528,96:$Vo2}),{7:331,8:332,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,76:$VH1,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,96:$VI1,99:65,100:225,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,143:393,145:392,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vt2,[2,121],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Vu2,[2,209]),o($Vf1,[2,138]),{107:[1,529],155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{7:530,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vu2,[2,213]),o([6,33,135],$V42,{95:531,96:$V13}),o($V23,[2,231]),{7:331,8:332,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,33:$Vv2,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,76:$VH1,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,100:225,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,136:533,137:$Vt,143:407,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vf1,[2,141]),o($V33,[2,351]),o($V43,[2,357]),{7:534,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:535,8:536,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:537,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:538,8:539,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:540,8:541,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($VA2,[2,295]),o($VA2,[2,296]),{34:251,38:248,39:$V2,40:$V3,72:249,73:$Vk1,75:$Vl1,99:250,116:$Vp,170:542},{33:$V53,155:$VO,156:[1,543],157:$VP,158:117,161:118,163:$VQ,164:[1,544],165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,322],156:[1,545],164:[1,546]},{33:$V63,155:$VO,156:[1,547],157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,323],156:[1,548]},{33:$V73,155:$VO,156:[1,549],157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,338],156:[1,550]},{6:$V83,33:$V93,118:[1,551]},o($Va3,$VQ2,{45:94,68:259,69:260,71:261,43:264,77:266,38:267,41:268,72:269,78:270,34:271,79:272,80:273,81:274,67:554,39:$V2,40:$V3,42:$VN1,44:$V4,46:$V5,47:$V6,73:$VT1,75:$VU1,76:$VV1,82:$VW1,85:$VX1,116:$Vp,137:$Vt,152:$Vw}),{7:555,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,33:[1,556],34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:557,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,33:[1,558],34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($VE2,[2,76]),{84:559,134:$VL1},o($VH2,[2,89]),{74:[1,560],155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{7:561,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($VE2,[2,77],{112:133,83:431,86:432,105:$V71,106:$V81,109:$V91,110:$Va1,111:$Vb1,114:$Vc1,133:$Vd1,134:$V61}),o($VE2,[2,79],{112:133,83:438,86:439,105:$V71,106:$V81,109:$V91,110:$Va1,111:$Vb1,114:$Vc1,133:$Vd1,134:$V61}),o($VE2,[2,78]),{84:562,134:$VL1},o($VH2,[2,90]),{84:563,134:$VL1},o($VH2,[2,86]),o($Vf1,[2,51]),o($V_1,[2,43]),o($VI2,[2,45]),{6:$VL,52:[1,564]},{4:565,5:3,7:4,8:5,9:6,10:7,11:27,12:28,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$V1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vk,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($VI2,[2,48]),{7:566,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:567,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:568,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o([1,6,33,35,52,74,76,91,96,107,118,135,142,153,155,157,163,181],$V53,{158:117,161:118,165:122,156:[1,569],164:[1,570],187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{156:[1,571],164:[1,572]},o($Vb3,$V63,{158:117,161:118,165:122,156:[1,573],187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{156:[1,574]},o($Vb3,$V73,{158:117,161:118,165:122,156:[1,575],187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{156:[1,576]},o($VP1,[2,149]),{35:[1,577]},o($VM2,[2,226],{17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,13:23,15:25,16:26,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,101:48,179:49,158:51,154:52,159:53,161:54,162:55,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,92:160,9:163,7:578,14:$V0,32:$Vo1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,93:$Vm,94:$Vn,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,155:$Vx,157:$Vy,160:$Vz,163:$VA,174:$VB,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),o($VM2,[2,228],{17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,13:23,15:25,16:26,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,101:48,179:49,158:51,154:52,159:53,161:54,162:55,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,92:160,9:163,7:579,14:$V0,32:$Vo1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,93:$Vm,94:$Vn,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,155:$Vx,157:$Vy,160:$Vz,163:$VA,174:$VB,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),o($VM2,[2,229],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve2,[2,61],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{35:[1,580],155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{5:582,7:4,8:5,9:6,10:7,11:27,12:28,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$V1,33:$Vn1,34:66,37:581,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vk,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($V62,[2,108]),{34:145,38:142,39:$V2,40:$V3,72:143,73:$Vk1,75:$Vl1,76:$Vm1,97:583,98:140,99:144,116:$Vp},o($Vc3,$Vj1,{97:139,98:140,38:142,72:143,99:144,34:145,90:584,39:$V2,40:$V3,73:$Vk1,75:$Vl1,76:$Vm1,116:$Vp}),o($V62,[2,114],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Vt2,$V_2),o($VT2,[2,36]),o($Vy2,$VK2,{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{92:585,93:$Vm,94:$Vn},o($Vy2,$VL2,{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($V51,[2,372]),{35:[1,586],155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},o($Ve2,[2,393],{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{33:$Vn1,37:587,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:$Vn1,37:588},o($V51,[2,259]),{33:$Vn1,37:589},{33:$Vn1,37:590},o($Vd3,[2,263]),{35:[1,591],176:[1,592],177:487,178:$Vd2},{35:[1,593],176:[1,594],177:487,178:$Vd2},o($V51,[2,345]),{33:$Vn1,37:595},o($VV2,[2,348]),{33:$Vn1,37:596,96:[1,597]},o($Ve3,[2,253],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve3,[2,254]),o($V51,[2,163]),o($VW2,[2,166],{158:117,161:118,165:122,37:598,33:$Vn1,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($V51,[2,265]),o($V51,[2,33]),{33:$Vn1,37:599},{155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},o($Ve1,[2,92]),o($Ve1,[2,169]),{36:[1,600]},{33:$Vg2,38:373,39:$V2,40:$V3,124:601,125:371,127:$Vh2},o($Ve1,[2,170]),{45:602,46:$V5,47:$V6},{6:$Vf3,33:$Vg3,118:[1,603]},o($Va3,$VQ2,{38:373,125:606,39:$V2,40:$V3,127:$Vh2}),o($VP2,$V42,{95:607,96:$VX2}),{38:608,39:$V2,40:$V3},{38:609,39:$V2,40:$V3},{36:[2,185]},{45:610,46:$V5,47:$V6},{6:$Vh3,33:$Vi3,118:[1,611]},o($Va3,$VQ2,{38:380,132:614,39:$V2,40:$V3,127:$Vj2}),o($VP2,$V42,{95:615,96:$VY2}),{38:616,39:$V2,40:$V3,127:[1,617]},{38:618,39:$V2,40:$V3},o($VZ2,[2,189],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{7:619,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:620,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{35:[1,621]},o($Ve1,[2,194]),{153:[1,622]},{74:[1,623],155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{74:[1,624],155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},o($Vn2,[2,220]),{7:331,8:332,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,33:$VF1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,76:$VH1,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,96:$VI1,99:65,100:225,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,138:399,139:625,143:224,144:221,145:220,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vr2,[2,241]),o($V03,[2,248],{17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,13:23,15:25,16:26,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,92:39,101:48,179:49,158:51,154:52,159:53,161:54,162:55,182:60,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,9:154,100:225,7:331,8:332,145:392,143:393,14:$V0,32:$Vo1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,76:$VH1,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,93:$Vm,94:$Vn,96:$VI1,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,155:$Vx,157:$Vy,160:$Vz,163:$VA,174:$VB,180:$VC,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),{7:331,8:332,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,76:$VH1,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,96:$VI1,99:65,100:225,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,138:399,143:224,144:626,145:220,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{33:$V$2,35:[1,627]},o($Vf1,[2,139]),{35:[1,628],155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{6:$Vj3,33:$Vk3,135:[1,629]},o([6,33,35,135],$VQ2,{17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,13:23,15:25,16:26,65:29,58:30,79:31,102:32,56:33,103:34,81:35,80:36,104:37,92:39,101:48,179:49,158:51,154:52,159:53,161:54,162:55,182:60,99:65,34:66,43:67,53:69,38:84,72:85,165:91,45:94,9:154,100:225,7:331,8:332,143:632,14:$V0,32:$Vo1,39:$V2,40:$V3,44:$V4,46:$V5,47:$V6,54:$V7,55:$V8,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,73:$Vf,75:$Vg,76:$VH1,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,93:$Vm,94:$Vn,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,155:$Vx,157:$Vy,160:$Vz,163:$VA,174:$VB,180:$VC,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK}),o($VP2,$V42,{95:633,96:$V13}),o($Vy2,[2,273],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{33:$Vl3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,269]},o($Vy2,[2,276],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{33:$Vm3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,271]},{33:$Vn3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,292]},o($VA2,[2,302]),{7:634,8:635,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:636,8:637,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:638,8:639,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:640,8:641,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:642,8:643,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:644,8:645,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:646,8:647,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:648,8:649,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($Vn2,[2,154]),{34:271,38:267,39:$V2,40:$V3,41:268,42:$VN1,43:264,44:$V4,45:94,46:$V5,47:$V6,67:650,68:259,69:260,71:261,72:269,73:$VT1,75:$VU1,76:$VV1,77:266,78:270,79:272,80:273,81:274,82:$VW1,85:$VX1,116:$Vp,137:$Vt,152:$Vw},o($Vc3,$VS1,{45:94,67:258,68:259,69:260,71:261,43:264,77:266,38:267,41:268,72:269,78:270,34:271,79:272,80:273,81:274,117:651,39:$V2,40:$V3,42:$VN1,44:$V4,46:$V5,47:$V6,73:$VT1,75:$VU1,76:$VV1,82:$VW1,85:$VX1,116:$Vp,137:$Vt,152:$Vw}),o($VE2,[2,157]),o($VE2,[2,65],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{7:652,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($VE2,[2,67],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{7:653,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($VH2,[2,87]),o($VF2,[2,73]),{74:[1,654],155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},o($VH2,[2,88]),o($VH2,[2,85]),o($VI2,[2,46]),{6:$VL,35:[1,655]},o($Vy2,$Vl3,{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Vy2,$Vm3,{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Vy2,$Vn3,{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{7:656,8:657,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:658,8:659,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:660,8:661,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:662,8:663,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:664,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:665,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:666,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:667,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{107:[1,668]},o($VM2,[2,225],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($VM2,[2,227],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($V51,[2,62]),o($Vf1,[2,98]),o($VN,[2,100]),o($V62,[2,109]),o($VP2,$V42,{95:669,96:$V52}),{33:$Vn1,37:581},o($V51,[2,392]),o($V33,[2,352]),o($V51,[2,260]),o($Vd3,[2,261]),o($Vd3,[2,262]),o($V51,[2,341]),{33:$Vn1,37:670},o($V51,[2,342]),{33:$Vn1,37:671},{35:[1,672]},o($VV2,[2,349],{6:[1,673]}),{7:674,8:675,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($V51,[2,167]),o($V43,[2,358]),{45:676,46:$V5,47:$V6},o($VC2,$V42,{95:677,96:$VX2}),o($Ve1,[2,171]),{36:[1,678]},{38:373,39:$V2,40:$V3,125:679,127:$Vh2},{33:$Vg2,38:373,39:$V2,40:$V3,124:680,125:371,127:$Vh2},o($VE2,[2,176]),{6:$Vf3,33:$Vg3,35:[1,681]},o($VE2,[2,181]),o($VE2,[2,183]),o($Ve1,[2,195]),o($Ve1,[2,187],{36:[1,682]}),{38:380,39:$V2,40:$V3,127:$Vj2,132:683},{33:$Vi2,38:380,39:$V2,40:$V3,127:$Vj2,130:684,132:378},o($VE2,[2,198]),{6:$Vh3,33:$Vi3,35:[1,685]},o($VE2,[2,203]),o($VE2,[2,204]),o($VE2,[2,206]),o($VZ2,[2,190],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{35:[1,686],155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},o($Ve1,[2,193]),o($Vf1,[2,267]),o($Vf1,[2,223]),o($Vf1,[2,224]),o($VP2,$V42,{95:396,140:687,96:$Vo2}),o($Vr2,[2,242]),o($Vr2,[2,243]),{107:[1,688]},o($Vu2,[2,214]),{7:331,8:332,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,76:$VH1,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,100:225,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,143:689,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:331,8:332,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,33:$Vv2,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,76:$VH1,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,100:225,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,136:690,137:$Vt,143:407,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($V23,[2,232]),{6:$Vj3,33:$Vk3,35:[1,691]},{33:$Vo3,155:$VO,157:$VP,158:117,161:118,163:$VQ,164:[1,692],165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,324],164:[1,693]},{33:$Vp3,155:$VO,156:[1,694],157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,328],156:[1,695]},{33:$Vq3,155:$VO,157:$VP,158:117,161:118,163:$VQ,164:[1,696],165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,325],164:[1,697]},{33:$Vr3,155:$VO,156:[1,698],157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,329],156:[1,699]},{33:$Vs3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,326]},{33:$Vt3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,327]},{33:$Vu3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,339]},{33:$Vv3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,340]},o($VE2,[2,158]),o($VP2,$V42,{95:700,96:$VD2}),{35:[1,701],155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{35:[1,702],155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VU2,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},o($VF2,[2,74]),{52:[1,703]},o($Vw3,$Vo3,{158:117,161:118,165:122,164:[1,704],187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{164:[1,705]},o($Vb3,$Vp3,{158:117,161:118,165:122,156:[1,706],187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{156:[1,707]},o($Vw3,$Vq3,{158:117,161:118,165:122,164:[1,708],187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{164:[1,709]},o($Vb3,$Vr3,{158:117,161:118,165:122,156:[1,710],187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{156:[1,711]},o($Ve2,$Vs3,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve2,$Vt3,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve2,$Vu3,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve2,$Vv3,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($VP1,[2,150]),{6:$VR2,33:$VS2,35:[1,712]},{35:[1,713]},{35:[1,714]},o($V51,[2,346]),o($VV2,[2,350]),o($Ve3,[2,255],{158:117,161:118,165:122,155:$VO,157:$VP,163:$VQ,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve3,[2,256]),o($Ve1,[2,173]),{6:$Vf3,33:$Vg3,118:[1,715]},{45:716,46:$V5,47:$V6},o($VE2,[2,177]),o($VP2,$V42,{95:717,96:$VX2}),o($VE2,[2,178]),{45:718,46:$V5,47:$V6},o($VE2,[2,199]),o($VP2,$V42,{95:719,96:$VY2}),o($VE2,[2,200]),o($Ve1,[2,191]),{33:$V$2,35:[1,720]},o($Vf1,[2,140]),o($V23,[2,233]),o($VP2,$V42,{95:721,96:$V13}),o($V23,[2,234]),{7:722,8:723,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:724,8:725,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:726,8:727,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:728,8:729,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:730,8:731,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:732,8:733,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:734,8:735,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:736,8:737,9:154,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,29:20,30:21,31:22,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vl,92:39,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$VC,182:60,183:$VD,184:$VE,185:$VF,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{6:$V83,33:$V93,35:[1,738]},o($VE2,[2,66]),o($VE2,[2,68]),o($VI2,[2,47]),{7:739,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:740,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:741,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:742,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:743,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:744,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:745,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},{7:746,9:163,13:23,14:$V0,15:25,16:26,17:8,18:9,19:10,20:11,21:12,22:13,23:14,24:15,25:16,26:17,27:18,28:19,32:$Vo1,34:66,38:84,39:$V2,40:$V3,43:67,44:$V4,45:94,46:$V5,47:$V6,53:69,54:$V7,55:$V8,56:33,58:30,59:$V9,60:$Va,61:$Vb,62:$Vc,63:$Vd,64:$Ve,65:29,72:85,73:$Vf,75:$Vg,79:31,80:36,81:35,82:$Vh,85:$Vi,87:$Vj,88:$Vp1,89:$Vq1,92:160,93:$Vm,94:$Vn,99:65,101:48,102:32,103:34,104:37,108:$Vo,116:$Vp,119:$Vq,121:$Vr,129:$Vs,137:$Vt,147:$Vu,151:$Vv,152:$Vw,154:52,155:$Vx,157:$Vy,158:51,159:53,160:$Vz,161:54,162:55,163:$VA,165:91,174:$VB,179:49,180:$Vr1,183:$Vs1,184:$Vt1,185:$Vu1,186:$VG,187:$VH,188:$VI,189:$VJ,190:$VK},o($V62,[2,110]),o($V51,[2,343]),o($V51,[2,344]),{36:[1,747]},o($Ve1,[2,172]),{6:$Vf3,33:$Vg3,35:[1,748]},o($Ve1,[2,196]),{6:$Vh3,33:$Vi3,35:[1,749]},o($Vr2,[2,244]),{6:$Vj3,33:$Vk3,35:[1,750]},{33:$Vx3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,330]},{33:$Vy3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,332]},{33:$Vz3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,334]},{33:$VA3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,336]},{33:$VB3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,331]},{33:$VC3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,333]},{33:$VD3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,335]},{33:$VE3,155:$VO,157:$VP,158:117,161:118,163:$VQ,165:122,181:$VR,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31},{33:[2,337]},o($VE2,[2,159]),o($Ve2,$Vx3,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve2,$Vy3,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve2,$Vz3,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve2,$VA3,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve2,$VB3,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve2,$VC3,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve2,$VD3,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),o($Ve2,$VE3,{158:117,161:118,165:122,187:$VS,188:$VT,191:$VU,192:$VV,193:$VW,194:$VX,195:$VY,196:$VZ,197:$V_,198:$V$,199:$V01,200:$V11,201:$V21,202:$V31}),{45:751,46:$V5,47:$V6},o($VE2,[2,179]),o($VE2,[2,201]),o($V23,[2,235]),o($Ve1,[2,174])],defaultActions:{253:[2,293],508:[2,185],536:[2,269],539:[2,271],541:[2,292],643:[2,326],645:[2,327],647:[2,339],649:[2,340],723:[2,330],725:[2,332],727:[2,334],729:[2,336],731:[2,331],733:[2,333],735:[2,335],737:[2,337]},parseError:function(str,hash){if(hash.recoverable)this.trace(str);else{var error=new Error(str);throw error.hash=hash,error}},parse:function(input){var self=this,stack=[0],vstack=[null],lstack=[],table=this.table,yytext="",yylineno=0,yyleng=0,recovering=0,EOF=1,args=lstack.slice.call(arguments,1),lexer=Object.create(this.lexer),sharedState={yy:{}};for(var k in this.yy)Object.prototype.hasOwnProperty.call(this.yy,k)&&(sharedState.yy[k]=this.yy[k]);lexer.setInput(input,sharedState.yy),sharedState.yy.lexer=lexer,sharedState.yy.parser=this,"undefined"==typeof lexer.yylloc&&(lexer.yylloc={});var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;this.parseError="function"==typeof sharedState.yy.parseError?sharedState.yy.parseError:Object.getPrototypeOf(this).parseError;_token_stack:var lex=function(){var token;return token=lexer.lex()||EOF,"number"!=typeof token&&(token=self.symbols_[token]||token),token};for(var yyval={},symbol,preErrorSymbol,state,action,r,p,len,newState,expected;;){if(state=stack[stack.length-1],this.defaultActions[state]?action=this.defaultActions[state]:((null===symbol||"undefined"==typeof symbol)&&(symbol=lex()),action=table[state]&&table[state][symbol]),"undefined"==typeof action||!action.length||!action[0]){var errStr="";for(p in expected=[],table[state])this.terminals_[p]&&p>2&&expected.push("'"+this.terminals_[p]+"'");errStr=lexer.showPosition?"Parse error on line "+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(", ")+", got '"+(this.terminals_[symbol]||symbol)+"'":"Parse error on line "+(yylineno+1)+": Unexpected "+(symbol==EOF?"end of input":"'"+(this.terminals_[symbol]||symbol)+"'"),this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected:expected})}if(action[0]instanceof Array&&1<action.length)throw new Error("Parse Error: multiple actions possible at state: "+state+", token: "+symbol);switch(action[0]){case 1:stack.push(symbol),vstack.push(lexer.yytext),lstack.push(lexer.yylloc),stack.push(action[1]),symbol=null,preErrorSymbol?(symbol=preErrorSymbol,preErrorSymbol=null):(yyleng=lexer.yyleng,yytext=lexer.yytext,yylineno=lexer.yylineno,yyloc=lexer.yylloc,0<recovering&&recovering--);break;case 2:if(len=this.productions_[action[1]][1],yyval.$=vstack[vstack.length-len],yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column},ranges&&(yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]]),r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args)),"undefined"!=typeof r)return r;len&&(stack=stack.slice(0,2*(-1*len)),vstack=vstack.slice(0,-1*len),lstack=lstack.slice(0,-1*len)),stack.push(this.productions_[action[1]][0]),vstack.push(yyval.$),lstack.push(yyval._$),newState=table[stack[stack.length-2]][stack[stack.length-1]],stack.push(newState);break;case 3:return!0;}}return!0}};return Parser.prototype=parser,parser.Parser=Parser,new Parser}();return"undefined"!=typeof require&&"undefined"!=typeof exports&&(exports.parser=parser,exports.Parser=parser.Parser,exports.parse=function(){return parser.parse.apply(parser,arguments)},exports.main=function(){},require.main===module&&exports.main(process.argv.slice(1))),module.exports}(),require["./scope"]=function(){var exports={};return function(){var indexOf=[].indexOf,Scope;exports.Scope=Scope=function(){"use strict";function Scope(parent,expressions,method,referencedVars){_classCallCheck(this,Scope);var ref,ref1;this.parent=parent,this.expressions=expressions,this.method=method,this.referencedVars=referencedVars,this.variables=[{name:"arguments",type:"arguments"}],this.comments={},this.positions={},this.parent||(this.utilities={}),this.root=null==(ref=null==(ref1=this.parent)?void 0:ref1.root)?this:ref}return _createClass(Scope,[{key:"add",value:function add(name,type,immediate){return this.shared&&!immediate?this.parent.add(name,type,immediate):Object.prototype.hasOwnProperty.call(this.positions,name)?this.variables[this.positions[name]].type=type:this.positions[name]=this.variables.push({name:name,type:type})-1}},{key:"namedMethod",value:function namedMethod(){var ref;return(null==(ref=this.method)?void 0:ref.name)||!this.parent?this.method:this.parent.namedMethod()}},{key:"find",value:function find(name){var type=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"var";return!!this.check(name)||(this.add(name,type),!1)}},{key:"parameter",value:function parameter(name){return this.shared&&this.parent.check(name,!0)?void 0:this.add(name,"param")}},{key:"check",value:function check(name){var ref;return!!(this.type(name)||(null==(ref=this.parent)?void 0:ref.check(name)))}},{key:"temporary",value:function temporary(name,index){var single=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],diff,endCode,letter,newCode,num,startCode;return single?(startCode=name.charCodeAt(0),endCode="z".charCodeAt(0),diff=endCode-startCode,newCode=startCode+index%(diff+1),letter=_StringfromCharCode(newCode),num=_Mathfloor(index/(diff+1)),"".concat(letter).concat(num||"")):"".concat(name).concat(index||"")}},{key:"type",value:function type(name){var i,len,ref,v;for(ref=this.variables,i=0,len=ref.length;i<len;i++)if(v=ref[i],v.name===name)return v.type;return null}},{key:"freeVariable",value:function freeVariable(name){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},index,ref,temp;for(index=0;temp=this.temporary(name,index,options.single),!!(this.check(temp)||0<=indexOf.call(this.root.referencedVars,temp));)index++;return(null==(ref=options.reserve)||ref)&&this.add(temp,"var",!0),temp}},{key:"assign",value:function assign(name,value){return this.add(name,{value:value,assigned:!0},!0),this.hasAssignments=!0}},{key:"hasDeclarations",value:function hasDeclarations(){return!!this.declaredVariables().length}},{key:"declaredVariables",value:function declaredVariables(){var v;return function(){var i,len,ref,results;for(ref=this.variables,results=[],(i=0,len=ref.length);i<len;i++)v=ref[i],"var"===v.type&&results.push(v.name);return results}.call(this).sort()}},{key:"assignedVariables",value:function assignedVariables(){var i,len,ref,results,v;for(ref=this.variables,results=[],(i=0,len=ref.length);i<len;i++)v=ref[i],v.type.assigned&&results.push("".concat(v.name," = ").concat(v.type.value));return results}}]),Scope}()}.call(this),{exports:exports}.exports}(),require["./nodes"]=function(){var exports={};return function(){var indexOf=[].indexOf,splice=[].splice,slice1=[].slice,Access,Arr,Assign,AwaitReturn,Base,Block,BooleanLiteral,Call,Catch,Class,ClassProperty,ClassPrototypeProperty,Code,CodeFragment,ComputedPropertyName,DefaultLiteral,Directive,DynamicImport,DynamicImportCall,Elision,EmptyInterpolation,ExecutableClassBody,Existence,Expansion,ExportAllDeclaration,ExportDeclaration,ExportDefaultDeclaration,ExportNamedDeclaration,ExportSpecifier,ExportSpecifierList,Extends,For,FuncDirectiveReturn,FuncGlyph,HEREGEX_OMIT,HereComment,HoistTarget,IdentifierLiteral,If,ImportClause,ImportDeclaration,ImportDefaultSpecifier,ImportNamespaceSpecifier,ImportSpecifier,ImportSpecifierList,In,Index,InfinityLiteral,Interpolation,JSXAttribute,JSXAttributes,JSXElement,JSXEmptyExpression,JSXExpressionContainer,JSXIdentifier,JSXNamespacedName,JSXTag,JSXText,JS_FORBIDDEN,LEADING_BLANK_LINE,LEVEL_ACCESS,LEVEL_COND,LEVEL_LIST,LEVEL_OP,LEVEL_PAREN,LEVEL_TOP,LineComment,Literal,MetaProperty,ModuleDeclaration,ModuleSpecifier,ModuleSpecifierList,NEGATE,NO,NaNLiteral,NullLiteral,NumberLiteral,Obj,ObjectProperty,Op,Param,Parens,PassthroughLiteral,PropertyName,Range,RegexLiteral,RegexWithInterpolations,Return,Root,SIMPLENUM,SIMPLE_STRING_OMIT,STRING_OMIT,Scope,Sequence,Slice,Splat,StatementLiteral,StringLiteral,StringWithInterpolations,Super,SuperCall,Switch,SwitchCase,SwitchWhen,TAB,THIS,TRAILING_BLANK_LINE,TaggedTemplateCall,TemplateElement,ThisLiteral,Throw,Try,UTILITIES,UndefinedLiteral,Value,While,YES,YieldReturn,addDataToNode,astAsBlockIfNeeded,attachCommentsToNode,compact,del,emptyExpressionLocationData,ends,extend,extractSameLineLocationDataFirst,extractSameLineLocationDataLast,flatten,fragmentsToText,greater,hasLineComments,indentInitial,isAstLocGreater,isFunction,isLiteralArguments,isLiteralThis,isLocationDataEndGreater,isLocationDataStartGreater,isNumber,isPlainObject,isUnassignable,jisonLocationDataToAstLocationData,lesser,locationDataToString,makeDelimitedLiteral,merge,mergeAstLocationData,mergeLocationData,moveComments,multident,parseNumber,replaceUnicodeCodePointEscapes,shouldCacheOrIsAssignable,sniffDirectives,some,starts,throwSyntaxError,_unfoldSoak,unshiftAfterComments,utility,zeroWidthLocationDataFromEndLocation;Error.stackTraceLimit=2e308;var _require4=require("./scope");Scope=_require4.Scope;var _require5=require("./lexer");isUnassignable=_require5.isUnassignable,JS_FORBIDDEN=_require5.JS_FORBIDDEN;var _require6=require("./helpers");compact=_require6.compact,flatten=_require6.flatten,extend=_require6.extend,merge=_require6.merge,del=_require6.del,starts=_require6.starts,ends=_require6.ends,some=_require6.some,addDataToNode=_require6.addDataToNode,attachCommentsToNode=_require6.attachCommentsToNode,locationDataToString=_require6.locationDataToString,throwSyntaxError=_require6.throwSyntaxError,replaceUnicodeCodePointEscapes=_require6.replaceUnicodeCodePointEscapes,isFunction=_require6.isFunction,isPlainObject=_require6.isPlainObject,isNumber=_require6.isNumber,parseNumber=_require6.parseNumber,exports.extend=extend,exports.addDataToNode=addDataToNode,YES=function(){return!0},NO=function(){return!1},THIS=function(){return this},NEGATE=function(){return this.negated=!this.negated,this},exports.CodeFragment=CodeFragment=function(){"use strict";function CodeFragment(parent,code){_classCallCheck(this,CodeFragment);var ref1;this.code="".concat(code),this.type=(null==parent||null==(ref1=parent.constructor)?void 0:ref1.name)||"unknown",this.locationData=null==parent?void 0:parent.locationData,this.comments=null==parent?void 0:parent.comments}return _createClass(CodeFragment,[{key:"toString",value:function toString(){return"".concat(this.code).concat(this.locationData?": "+locationDataToString(this.locationData):"")}}]),CodeFragment}(),fragmentsToText=function(fragments){var fragment;return function(){var j,len1,results1;for(results1=[],j=0,len1=fragments.length;j<len1;j++)fragment=fragments[j],results1.push(fragment.code);return results1}().join("")},exports.Base=Base=function(){var Base=function(){"use strict";function Base(){_classCallCheck(this,Base)}return _createClass(Base,[{key:"compile",value:function compile(o,lvl){return fragmentsToText(this.compileToFragments(o,lvl))}},{key:"compileWithoutComments",value:function compileWithoutComments(o,lvl){var method=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"compile",fragments,unwrapped;return this.comments&&(this.ignoreTheseCommentsTemporarily=this.comments,delete this.comments),unwrapped=this.unwrapAll(),unwrapped.comments&&(unwrapped.ignoreTheseCommentsTemporarily=unwrapped.comments,delete unwrapped.comments),fragments=this[method](o,lvl),this.ignoreTheseCommentsTemporarily&&(this.comments=this.ignoreTheseCommentsTemporarily,delete this.ignoreTheseCommentsTemporarily),unwrapped.ignoreTheseCommentsTemporarily&&(unwrapped.comments=unwrapped.ignoreTheseCommentsTemporarily,delete unwrapped.ignoreTheseCommentsTemporarily),fragments}},{key:"compileNodeWithoutComments",value:function compileNodeWithoutComments(o,lvl){return this.compileWithoutComments(o,lvl,"compileNode")}},{key:"compileToFragments",value:function compileToFragments(o,lvl){var fragments,node;return o=extend({},o),lvl&&(o.level=lvl),node=this.unfoldSoak(o)||this,node.tab=o.indent,fragments=o.level!==LEVEL_TOP&&node.isStatement(o)?node.compileClosure(o):node.compileNode(o),this.compileCommentFragments(o,node,fragments),fragments}},{key:"compileToFragmentsWithoutComments",value:function compileToFragmentsWithoutComments(o,lvl){return this.compileWithoutComments(o,lvl,"compileToFragments")}},{key:"compileClosure",value:function compileClosure(o){var args,argumentsNode,func,meth,parts,ref1,ref2;switch(this.checkForPureStatementInExpression(),o.sharedScope=!0,func=new Code([],Block.wrap([this])),args=[],this.contains(function(node){return node instanceof SuperCall})?func.bound=!0:((argumentsNode=this.contains(isLiteralArguments))||this.contains(isLiteralThis))&&(args=[new ThisLiteral],argumentsNode?(meth="apply",args.push(new IdentifierLiteral("arguments"))):meth="call",func=new Value(func,[new Access(new PropertyName(meth))])),parts=new Call(func,args).compileNode(o),!1){case!(func.isGenerator||(null==(ref1=func.base)?void 0:ref1.isGenerator)):parts.unshift(this.makeCode("(yield* ")),parts.push(this.makeCode(")"));break;case!(func.isAsync||(null==(ref2=func.base)?void 0:ref2.isAsync)):parts.unshift(this.makeCode("(await ")),parts.push(this.makeCode(")"));}return parts}},{key:"compileCommentFragments",value:function compileCommentFragments(o,node,fragments){var base1,base2,comment,commentFragment,j,len1,ref1,unshiftCommentFragment;if(!node.comments)return fragments;for(unshiftCommentFragment=function(commentFragment){var precedingFragment;return commentFragment.unshift?unshiftAfterComments(fragments,commentFragment):(0!==fragments.length&&(precedingFragment=fragments[fragments.length-1],commentFragment.newLine&&""!==precedingFragment.code&&!/\n\s*$/.test(precedingFragment.code)&&(commentFragment.code="\n".concat(commentFragment.code))),fragments.push(commentFragment))},ref1=node.comments,(j=0,len1=ref1.length);j<len1;j++)(comment=ref1[j],!!(0>indexOf.call(this.compiledComments,comment)))&&(this.compiledComments.push(comment),commentFragment=comment.here?new HereComment(comment).compileNode(o):new LineComment(comment).compileNode(o),commentFragment.isHereComment&&!commentFragment.newLine||node.includeCommentFragments()?unshiftCommentFragment(commentFragment):(0===fragments.length&&fragments.push(this.makeCode("")),commentFragment.unshift?(null==(base1=fragments[0]).precedingComments&&(base1.precedingComments=[]),fragments[0].precedingComments.push(commentFragment)):(null==(base2=fragments[fragments.length-1]).followingComments&&(base2.followingComments=[]),fragments[fragments.length-1].followingComments.push(commentFragment))));return fragments}},{key:"cache",value:function cache(o,level,shouldCache){var complex,ref,sub;return complex=null==shouldCache?this.shouldCache():shouldCache(this),complex?(ref=new IdentifierLiteral(o.scope.freeVariable("ref")),sub=new Assign(ref,this),level?[sub.compileToFragments(o,level),[this.makeCode(ref.value)]]:[sub,ref]):(ref=level?this.compileToFragments(o,level):this,[ref,ref])}},{key:"hoist",value:function hoist(){var compileNode,compileToFragments,target;return this.hoisted=!0,target=new HoistTarget(this),compileNode=this.compileNode,compileToFragments=this.compileToFragments,this.compileNode=function(o){return target.update(compileNode,o)},this.compileToFragments=function(o){return target.update(compileToFragments,o)},target}},{key:"cacheToCodeFragments",value:function cacheToCodeFragments(cacheValues){return[fragmentsToText(cacheValues[0]),fragmentsToText(cacheValues[1])]}},{key:"makeReturn",value:function makeReturn(results,mark){var node;return mark?void(this.canBeReturned=!0):(node=this.unwrapAll(),results?new Call(new Literal("".concat(results,".push")),[node]):new Return(node))}},{key:"contains",value:function contains(pred){var node;return node=void 0,this.traverseChildren(!1,function(n){if(pred(n))return node=n,!1}),node}},{key:"lastNode",value:function lastNode(list){return 0===list.length?null:list[list.length-1]}},{key:"toString",value:function toString(){var idt=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",name=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.constructor.name,tree;return tree="\n"+idt+name,this.soak&&(tree+="?"),this.eachChild(function(node){return tree+=node.toString(idt+TAB)}),tree}},{key:"checkForPureStatementInExpression",value:function checkForPureStatementInExpression(){var jumpNode;if(jumpNode=this.jumps())return jumpNode.error("cannot use a pure statement in an expression")}},{key:"ast",value:function ast(o,level){var astNode;return o=this.astInitialize(o,level),astNode=this.astNode(o),null!=this.astNode&&this.canBeReturned&&Object.assign(astNode,{returns:!0}),astNode}},{key:"astInitialize",value:function astInitialize(o,level){return o=Object.assign({},o),null!=level&&(o.level=level),o.level>LEVEL_TOP&&this.checkForPureStatementInExpression(),this.isStatement(o)&&o.level!==LEVEL_TOP&&null!=o.scope&&this.makeReturn(null,!0),o}},{key:"astNode",value:function astNode(o){return Object.assign({},{type:this.astType(o)},this.astProperties(o),this.astLocationData())}},{key:"astProperties",value:function astProperties(){return{}}},{key:"astType",value:function astType(){return this.constructor.name}},{key:"astLocationData",value:function astLocationData(){return jisonLocationDataToAstLocationData(this.locationData)}},{key:"isStatementAst",value:function isStatementAst(o){return this.isStatement(o)}},{key:"eachChild",value:function eachChild(func){var attr,child,j,k,len1,len2,ref1,ref2;if(!this.children)return this;for(ref1=this.children,j=0,len1=ref1.length;j<len1;j++)if(attr=ref1[j],this[attr])for(ref2=flatten([this[attr]]),k=0,len2=ref2.length;k<len2;k++)if(child=ref2[k],!1===func(child))return this;return this}},{key:"traverseChildren",value:function traverseChildren(crossScope,func){return this.eachChild(function(child){var recur;if(recur=func(child),!1!==recur)return child.traverseChildren(crossScope,func)})}},{key:"replaceInContext",value:function replaceInContext(match,replacement){var attr,child,children,i,j,k,len1,len2,ref1,ref2;if(!this.children)return!1;for(ref1=this.children,j=0,len1=ref1.length;j<len1;j++)if(attr=ref1[j],children=this[attr])if(Array.isArray(children))for(i=k=0,len2=children.length;k<len2;i=++k){if(child=children[i],match(child))return splice.apply(children,[i,i-i+1].concat(ref2=replacement(child,this))),ref2,!0;if(child.replaceInContext(match,replacement))return!0}else{if(match(children))return this[attr]=replacement(children,this),!0;if(children.replaceInContext(match,replacement))return!0}}},{key:"invert",value:function invert(){return new Op("!",this)}},{key:"unwrapAll",value:function unwrapAll(){var node;for(node=this;node!==(node=node.unwrap());)continue;return node}},{key:"updateLocationDataIfMissing",value:function updateLocationDataIfMissing(locationData,force){return(force&&(this.forceUpdateLocation=!0),this.locationData&&!this.forceUpdateLocation)?this:(delete this.forceUpdateLocation,this.locationData=locationData,this.eachChild(function(child){return child.updateLocationDataIfMissing(locationData)}))}},{key:"withLocationDataFrom",value:function withLocationDataFrom(_ref19){var locationData=_ref19.locationData;return this.updateLocationDataIfMissing(locationData)}},{key:"withLocationDataAndCommentsFrom",value:function withLocationDataAndCommentsFrom(node){var comments;return this.withLocationDataFrom(node),comments=node.comments,(null==comments?void 0:comments.length)&&(this.comments=comments),this}},{key:"error",value:function error(message){return throwSyntaxError(message,this.locationData)}},{key:"makeCode",value:function makeCode(code){return new CodeFragment(this,code)}},{key:"wrapInParentheses",value:function wrapInParentheses(fragments){return[this.makeCode("(")].concat(_toConsumableArray(fragments),[this.makeCode(")")])}},{key:"wrapInBraces",value:function wrapInBraces(fragments){return[this.makeCode("{")].concat(_toConsumableArray(fragments),[this.makeCode("}")])}},{key:"joinFragmentArrays",value:function joinFragmentArrays(fragmentsList,joinStr){var answer,fragments,i,j,len1;for(answer=[],i=j=0,len1=fragmentsList.length;j<len1;i=++j)fragments=fragmentsList[i],i&&answer.push(this.makeCode(joinStr)),answer=answer.concat(fragments);return answer}}]),Base}();return Base.prototype.children=[],Base.prototype.isStatement=NO,Base.prototype.compiledComments=[],Base.prototype.includeCommentFragments=NO,Base.prototype.jumps=NO,Base.prototype.shouldCache=YES,Base.prototype.isChainable=NO,Base.prototype.isAssignable=NO,Base.prototype.isNumber=NO,Base.prototype.unwrap=THIS,Base.prototype.unfoldSoak=NO,Base.prototype.assigns=NO,Base}.call(this),exports.HoistTarget=HoistTarget=function(_Base){"use strict";function HoistTarget(source1){var _this8;return _classCallCheck(this,HoistTarget),_this8=_possibleConstructorReturn(this,_getPrototypeOf(HoistTarget).call(this)),_this8.source=source1,_this8.options={},_this8.targetFragments={fragments:[]},_this8}return _inherits(HoistTarget,_Base),_createClass(HoistTarget,null,[{key:"expand",value:function expand(fragments){var fragment,i,j,ref1;for(i=j=fragments.length-1;0<=j;i=j+=-1)fragment=fragments[i],fragment.fragments&&(splice.apply(fragments,[i,i-i+1].concat(ref1=this.expand(fragment.fragments))),ref1);return fragments}}]),_createClass(HoistTarget,[{key:"isStatement",value:function isStatement(o){return this.source.isStatement(o)}},{key:"update",value:function update(compile,o){return this.targetFragments.fragments=compile.call(this.source,merge(o,this.options))}},{key:"compileToFragments",value:function compileToFragments(o,level){return this.options.indent=o.indent,this.options.level=null==level?o.level:level,[this.targetFragments]}},{key:"compileNode",value:function compileNode(o){return this.compileToFragments(o)}},{key:"compileClosure",value:function compileClosure(o){return this.compileToFragments(o)}}]),HoistTarget}(Base),exports.Root=Root=function(){var Root=function(_Base2){"use strict";function Root(body1){var _this9;return _classCallCheck(this,Root),_this9=_possibleConstructorReturn(this,_getPrototypeOf(Root).call(this)),_this9.body=body1,_this9}return _inherits(Root,_Base2),_createClass(Root,[{key:"compileNode",value:function compileNode(o){var fragments;return o.indent=o.bare?"":TAB,o.level=LEVEL_TOP,o.compiling=!0,this.initializeScope(o),fragments=this.body.compileRoot(o),o.bare?fragments:[].concat(this.makeCode("(function() {\n"),fragments,this.makeCode("\n}).call(this);\n"))}},{key:"initializeScope",value:function initializeScope(o){var j,len1,name,ref1,ref2,results1;for(o.scope=new Scope(null,this.body,null,null==(ref1=o.referencedVars)?[]:ref1),ref2=o.locals||[],results1=[],(j=0,len1=ref2.length);j<len1;j++)name=ref2[j],results1.push(o.scope.parameter(name));return results1}},{key:"commentsAst",value:function commentsAst(){var comment,commentToken,j,len1,ref1,results1;for(null==this.allComments&&(this.allComments=function(){var j,len1,ref1,ref2,results1;for(ref2=null==(ref1=this.allCommentTokens)?[]:ref1,results1=[],(j=0,len1=ref2.length);j<len1;j++)commentToken=ref2[j],commentToken.heregex||(commentToken.here?results1.push(new HereComment(commentToken)):results1.push(new LineComment(commentToken)));return results1}.call(this)),ref1=this.allComments,results1=[],(j=0,len1=ref1.length);j<len1;j++)comment=ref1[j],results1.push(comment.ast());return results1}},{key:"astNode",value:function astNode(o){return o.level=LEVEL_TOP,this.initializeScope(o),_get(_getPrototypeOf(Root.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(){return"File"}},{key:"astProperties",value:function astProperties(o){return this.body.isRootBlock=!0,{program:Object.assign(this.body.ast(o),this.astLocationData()),comments:this.commentsAst()}}}]),Root}(Base);return Root.prototype.children=["body"],Root}.call(this),exports.Block=Block=function(){var Block=function(_Base3){"use strict";function Block(nodes){var _this10;return _classCallCheck(this,Block),_this10=_possibleConstructorReturn(this,_getPrototypeOf(Block).call(this)),_this10.expressions=compact(flatten(nodes||[])),_this10}return _inherits(Block,_Base3),_createClass(Block,[{key:"push",value:function push(node){return this.expressions.push(node),this}},{key:"pop",value:function pop(){return this.expressions.pop()}},{key:"unshift",value:function unshift(node){return this.expressions.unshift(node),this}},{key:"unwrap",value:function unwrap(){return 1===this.expressions.length?this.expressions[0]:this}},{key:"isEmpty",value:function isEmpty(){return!this.expressions.length}},{key:"isStatement",value:function isStatement(o){var exp,j,len1,ref1;for(ref1=this.expressions,j=0,len1=ref1.length;j<len1;j++)if(exp=ref1[j],exp.isStatement(o))return!0;return!1}},{key:"jumps",value:function jumps(o){var exp,j,jumpNode,len1,ref1;for(ref1=this.expressions,j=0,len1=ref1.length;j<len1;j++)if(exp=ref1[j],jumpNode=exp.jumps(o))return jumpNode}},{key:"makeReturn",value:function makeReturn(results,mark){var _slice1$call,_slice1$call2,expr,expressions,last,lastExp,len,penult,ref1,ref2;if(len=this.expressions.length,ref1=this.expressions,_slice1$call=slice1.call(ref1,-1),_slice1$call2=_slicedToArray(_slice1$call,1),lastExp=_slice1$call2[0],_slice1$call,lastExp=(null==lastExp?void 0:lastExp.unwrap())||!1,lastExp&&lastExp instanceof Parens&&1<lastExp.body.expressions.length){var _lastExp=lastExp;expressions=_lastExp.body.expressions;var _slice1$call3=slice1.call(expressions,-2),_slice1$call4=_slicedToArray(_slice1$call3,2);penult=_slice1$call4[0],last=_slice1$call4[1],penult=penult.unwrap(),last=last.unwrap(),penult instanceof JSXElement&&last instanceof JSXElement&&expressions[expressions.length-1].error("Adjacent JSX elements must be wrapped in an enclosing tag")}if(mark)return void(null!=(ref2=this.expressions[len-1])&&ref2.makeReturn(results,mark));for(;len--;){expr=this.expressions[len],this.expressions[len]=expr.makeReturn(results),expr instanceof Return&&!expr.expression&&this.expressions.splice(len,1);break}return this}},{key:"compile",value:function compile(o,lvl){return o.scope?_get(_getPrototypeOf(Block.prototype),"compile",this).call(this,o,lvl):new Root(this).withLocationDataFrom(this).compile(o,lvl)}},{key:"compileNode",value:function compileNode(o){var answer,compiledNodes,fragments,index,j,lastFragment,len1,node,ref1,top;for(this.tab=o.indent,top=o.level===LEVEL_TOP,compiledNodes=[],ref1=this.expressions,(index=j=0,len1=ref1.length);j<len1;index=++j){if(node=ref1[index],node.hoisted){node.compileToFragments(o);continue}if(node=node.unfoldSoak(o)||node,node instanceof Block)compiledNodes.push(node.compileNode(o));else if(top){if(node.front=!0,fragments=node.compileToFragments(o),!node.isStatement(o)){fragments=indentInitial(fragments,this);var _slice1$call5=slice1.call(fragments,-1),_slice1$call6=_slicedToArray(_slice1$call5,1);lastFragment=_slice1$call6[0],""===lastFragment.code||lastFragment.isComment||fragments.push(this.makeCode(";"))}compiledNodes.push(fragments)}else compiledNodes.push(node.compileToFragments(o,LEVEL_LIST))}return top?this.spaced?[].concat(this.joinFragmentArrays(compiledNodes,"\n\n"),this.makeCode("\n")):this.joinFragmentArrays(compiledNodes,"\n"):(answer=compiledNodes.length?this.joinFragmentArrays(compiledNodes,", "):[this.makeCode("void 0")],1<compiledNodes.length&&o.level>=LEVEL_LIST?this.wrapInParentheses(answer):answer)}},{key:"compileRoot",value:function compileRoot(o){var fragments;return this.spaced=!0,fragments=this.compileWithDeclarations(o),HoistTarget.expand(fragments),this.compileComments(fragments)}},{key:"compileWithDeclarations",value:function compileWithDeclarations(o){var assigns,declaredVariable,declaredVariables,declaredVariablesIndex,declars,exp,fragments,i,j,k,len1,len2,post,ref1,rest,scope,spaced;for(fragments=[],post=[],ref1=this.expressions,(i=j=0,len1=ref1.length);j<len1&&(exp=ref1[i],exp=exp.unwrap(),!!(exp instanceof Literal));i=++j);if(o=merge(o,{level:LEVEL_TOP}),i){rest=this.expressions.splice(i,9e9);var _ref20=[this.spaced,!1];spaced=_ref20[0],this.spaced=_ref20[1];var _ref21=[this.compileNode(o),spaced];fragments=_ref21[0],this.spaced=_ref21[1],this.expressions=rest}post=this.compileNode(o);var _o2=o;if(scope=_o2.scope,scope.expressions===this)if(declars=o.scope.hasDeclarations(),assigns=scope.hasAssignments,declars||assigns){if(i&&fragments.push(this.makeCode("\n")),fragments.push(this.makeCode("".concat(this.tab,"var "))),declars)for(declaredVariables=scope.declaredVariables(),declaredVariablesIndex=k=0,len2=declaredVariables.length;k<len2;declaredVariablesIndex=++k){if(declaredVariable=declaredVariables[declaredVariablesIndex],fragments.push(this.makeCode(declaredVariable)),Object.prototype.hasOwnProperty.call(o.scope.comments,declaredVariable)){var _fragments;(_fragments=fragments).push.apply(_fragments,_toConsumableArray(o.scope.comments[declaredVariable]))}declaredVariablesIndex!==declaredVariables.length-1&&fragments.push(this.makeCode(", "))}assigns&&(declars&&fragments.push(this.makeCode(",\n".concat(this.tab+TAB))),fragments.push(this.makeCode(scope.assignedVariables().join(",\n".concat(this.tab+TAB))))),fragments.push(this.makeCode(";\n".concat(this.spaced?"\n":"")))}else fragments.length&&post.length&&fragments.push(this.makeCode("\n"));return fragments.concat(post)}},{key:"compileComments",value:function compileComments(fragments){var code,commentFragment,fragment,fragmentIndent,fragmentIndex,indent,j,k,l,len1,len2,len3,newLineIndex,onNextLine,p,pastFragment,pastFragmentIndex,q,ref1,ref2,ref3,ref4,trail,upcomingFragment,upcomingFragmentIndex;for(fragmentIndex=j=0,len1=fragments.length;j<len1;fragmentIndex=++j){if(fragment=fragments[fragmentIndex],fragment.precedingComments){for(fragmentIndent="",ref1=fragments.slice(0,fragmentIndex+1),k=ref1.length-1;0<=k;k+=-1)if(pastFragment=ref1[k],indent=/^ {2,}/m.exec(pastFragment.code),indent){fragmentIndent=indent[0];break}else if(0<=indexOf.call(pastFragment.code,"\n"))break;for(code="\n".concat(fragmentIndent)+function(){var l,len2,ref2,results1;for(ref2=fragment.precedingComments,results1=[],(l=0,len2=ref2.length);l<len2;l++)commentFragment=ref2[l],commentFragment.isHereComment&&commentFragment.multiline?results1.push(multident(commentFragment.code,fragmentIndent,!1)):results1.push(commentFragment.code);return results1}().join("\n".concat(fragmentIndent)).replace(/^(\s*)$/gm,""),ref2=fragments.slice(0,fragmentIndex+1),pastFragmentIndex=l=ref2.length-1;0<=l;pastFragmentIndex=l+=-1){if(pastFragment=ref2[pastFragmentIndex],newLineIndex=pastFragment.code.lastIndexOf("\n"),-1===newLineIndex)if(0===pastFragmentIndex)pastFragment.code="\n"+pastFragment.code,newLineIndex=0;else if(pastFragment.isStringWithInterpolations&&"{"===pastFragment.code)code=code.slice(1)+"\n",newLineIndex=1;else continue;delete fragment.precedingComments,pastFragment.code=pastFragment.code.slice(0,newLineIndex)+code+pastFragment.code.slice(newLineIndex);break}}if(fragment.followingComments){if(trail=fragment.followingComments[0].trail,fragmentIndent="",!(trail&&1===fragment.followingComments.length))for(onNextLine=!1,ref3=fragments.slice(fragmentIndex),(p=0,len2=ref3.length);p<len2;p++)if(upcomingFragment=ref3[p],!onNextLine){if(0<=indexOf.call(upcomingFragment.code,"\n"))onNextLine=!0;else continue;}else if(indent=/^ {2,}/m.exec(upcomingFragment.code),indent){fragmentIndent=indent[0];break}else if(0<=indexOf.call(upcomingFragment.code,"\n"))break;for(code=1===fragmentIndex&&/^\s+$/.test(fragments[0].code)?"":trail?" ":"\n".concat(fragmentIndent),code+=function(){var len3,q,ref4,results1;for(ref4=fragment.followingComments,results1=[],(q=0,len3=ref4.length);q<len3;q++)commentFragment=ref4[q],commentFragment.isHereComment&&commentFragment.multiline?results1.push(multident(commentFragment.code,fragmentIndent,!1)):results1.push(commentFragment.code);return results1}().join("\n".concat(fragmentIndent)).replace(/^(\s*)$/gm,""),ref4=fragments.slice(fragmentIndex),(upcomingFragmentIndex=q=0,len3=ref4.length);q<len3;upcomingFragmentIndex=++q){if(upcomingFragment=ref4[upcomingFragmentIndex],newLineIndex=upcomingFragment.code.indexOf("\n"),-1===newLineIndex)if(upcomingFragmentIndex===fragments.length-1)upcomingFragment.code+="\n",newLineIndex=upcomingFragment.code.length;else if(upcomingFragment.isStringWithInterpolations&&"}"===upcomingFragment.code)code="".concat(code,"\n"),newLineIndex=0;else continue;delete fragment.followingComments,"\n"===upcomingFragment.code&&(code=code.replace(/^\n/,"")),upcomingFragment.code=upcomingFragment.code.slice(0,newLineIndex)+code+upcomingFragment.code.slice(newLineIndex);break}}}return fragments}},{key:"astNode",value:function astNode(o){return null!=o.level&&o.level!==LEVEL_TOP&&this.expressions.length?new Sequence(this.expressions).withLocationDataFrom(this).ast(o):_get(_getPrototypeOf(Block.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(){return this.isRootBlock?"Program":this.isClassBody?"ClassBody":"BlockStatement"}},{key:"astProperties",value:function astProperties(o){var body,checkForDirectives,directives,expression,expressionAst,j,len1,ref1;for(checkForDirectives=del(o,"checkForDirectives"),(this.isRootBlock||checkForDirectives)&&sniffDirectives(this.expressions,{notFinalExpression:checkForDirectives}),directives=[],body=[],ref1=this.expressions,(j=0,len1=ref1.length);j<len1;j++)if(expression=ref1[j],expressionAst=expression.ast(o),null==expressionAst)continue;else expression instanceof Directive?directives.push(expressionAst):expression.isStatementAst(o)?body.push(expressionAst):body.push(Object.assign({type:"ExpressionStatement",expression:expressionAst},expression.astLocationData()));return{body:body,directives:directives}}},{key:"astLocationData",value:function astLocationData(){return this.isRootBlock&&null==this.locationData?void 0:_get(_getPrototypeOf(Block.prototype),"astLocationData",this).call(this)}}],[{key:"wrap",value:function wrap(nodes){return 1===nodes.length&&nodes[0]instanceof Block?nodes[0]:new Block(nodes)}}]),Block}(Base);return Block.prototype.children=["expressions"],Block}.call(this),exports.Directive=Directive=function(_Base4){"use strict";function Directive(value1){var _this11;return _classCallCheck(this,Directive),_this11=_possibleConstructorReturn(this,_getPrototypeOf(Directive).call(this)),_this11.value=value1,_this11}return _inherits(Directive,_Base4),_createClass(Directive,[{key:"astProperties",value:function astProperties(o){return{value:Object.assign({},this.value.ast(o),{type:"DirectiveLiteral"})}}}]),Directive}(Base),exports.Literal=Literal=function(){var Literal=function(_Base5){"use strict";function Literal(value1){var _this12;return _classCallCheck(this,Literal),_this12=_possibleConstructorReturn(this,_getPrototypeOf(Literal).call(this)),_this12.value=value1,_this12}return _inherits(Literal,_Base5),_createClass(Literal,[{key:"assigns",value:function assigns(name){return name===this.value}},{key:"compileNode",value:function compileNode(){return[this.makeCode(this.value)]}},{key:"astProperties",value:function astProperties(){return{value:this.value}}},{key:"toString",value:function toString(){return" ".concat(this.isStatement()?_get(_getPrototypeOf(Literal.prototype),"toString",this).call(this):this.constructor.name,": ").concat(this.value)}}]),Literal}(Base);return Literal.prototype.shouldCache=NO,Literal}.call(this),exports.NumberLiteral=NumberLiteral=function(_Literal){"use strict";function NumberLiteral(value1){var _ref22=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},parsedValue=_ref22.parsedValue,_this13;return _classCallCheck(this,NumberLiteral),_this13=_possibleConstructorReturn(this,_getPrototypeOf(NumberLiteral).call(this)),_this13.value=value1,_this13.parsedValue=parsedValue,null==_this13.parsedValue&&(isNumber(_this13.value)?(_this13.parsedValue=_this13.value,_this13.value="".concat(_this13.value)):_this13.parsedValue=parseNumber(_this13.value)),_this13}return _inherits(NumberLiteral,_Literal),_createClass(NumberLiteral,[{key:"isBigInt",value:function isBigInt(){return /n$/.test(this.value)}},{key:"astType",value:function astType(){return this.isBigInt()?"BigIntLiteral":"NumericLiteral"}},{key:"astProperties",value:function astProperties(){return{value:this.isBigInt()?this.parsedValue.toString():this.parsedValue,extra:{rawValue:this.isBigInt()?this.parsedValue.toString():this.parsedValue,raw:this.value}}}}]),NumberLiteral}(Literal),exports.InfinityLiteral=InfinityLiteral=function(_NumberLiteral){"use strict";function InfinityLiteral(value1){var _ref23=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_ref23$originalValue=_ref23.originalValue,originalValue=void 0===_ref23$originalValue?"Infinity":_ref23$originalValue,_this14;return _classCallCheck(this,InfinityLiteral),_this14=_possibleConstructorReturn(this,_getPrototypeOf(InfinityLiteral).call(this)),_this14.value=value1,_this14.originalValue=originalValue,_this14}return _inherits(InfinityLiteral,_NumberLiteral),_createClass(InfinityLiteral,[{key:"compileNode",value:function compileNode(){return[this.makeCode("2e308")]}},{key:"astNode",value:function astNode(o){return"Infinity"===this.originalValue?_get(_getPrototypeOf(InfinityLiteral.prototype),"astNode",this).call(this,o):new NumberLiteral(this.value).withLocationDataFrom(this).ast(o)}},{key:"astType",value:function astType(){return"Identifier"}},{key:"astProperties",value:function astProperties(){return{name:"Infinity",declaration:!1}}}]),InfinityLiteral}(NumberLiteral),exports.NaNLiteral=NaNLiteral=function(_NumberLiteral2){"use strict";function NaNLiteral(){return _classCallCheck(this,NaNLiteral),_possibleConstructorReturn(this,_getPrototypeOf(NaNLiteral).call(this,"NaN"))}return _inherits(NaNLiteral,_NumberLiteral2),_createClass(NaNLiteral,[{key:"compileNode",value:function compileNode(o){var code;return code=[this.makeCode("0/0")],o.level>=LEVEL_OP?this.wrapInParentheses(code):code}},{key:"astType",value:function astType(){return"Identifier"}},{key:"astProperties",value:function astProperties(){return{name:"NaN",declaration:!1}}}]),NaNLiteral}(NumberLiteral),exports.StringLiteral=StringLiteral=function(_Literal2){"use strict";function StringLiteral(originalValue){var _ref24=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},quote=_ref24.quote,initialChunk=_ref24.initialChunk,finalChunk=_ref24.finalChunk,indent1=_ref24.indent,double1=_ref24.double,heregex1=_ref24.heregex,_this15;_classCallCheck(this,StringLiteral);var heredoc,indentRegex,val;return _this15=_possibleConstructorReturn(this,_getPrototypeOf(StringLiteral).call(this,"")),_this15.originalValue=originalValue,_this15.quote=quote,_this15.initialChunk=initialChunk,_this15.finalChunk=finalChunk,_this15.indent=indent1,_this15.double=double1,_this15.heregex=heregex1,"///"===_this15.quote&&(_this15.quote=null),_this15.fromSourceString=null!=_this15.quote,null==_this15.quote&&(_this15.quote="\""),heredoc=_this15.isFromHeredoc(),val=_this15.originalValue,_this15.heregex?(val=val.replace(HEREGEX_OMIT,"$1$2"),val=replaceUnicodeCodePointEscapes(val,{flags:_this15.heregex.flags})):(val=val.replace(STRING_OMIT,"$1"),val=_this15.fromSourceString?heredoc?(_this15.indent?indentRegex=RegExp("\\n".concat(_this15.indent),"g"):void 0,indentRegex?val=val.replace(indentRegex,"\n"):void 0,_this15.initialChunk?val=val.replace(LEADING_BLANK_LINE,""):void 0,_this15.finalChunk?val=val.replace(TRAILING_BLANK_LINE,""):void 0,val):val.replace(SIMPLE_STRING_OMIT,function(match,offset){return _this15.initialChunk&&0===offset||_this15.finalChunk&&offset+match.length===val.length?"":" "}):val),_this15.delimiter=_this15.quote.charAt(0),_this15.value=makeDelimitedLiteral(val,{delimiter:_this15.delimiter,double:_this15.double}),_this15.unquotedValueForTemplateLiteral=makeDelimitedLiteral(val,{delimiter:"`",double:_this15.double,escapeNewlines:!1,includeDelimiters:!1,convertTrailingNullEscapes:!0}),_this15.unquotedValueForJSX=makeDelimitedLiteral(val,{double:_this15.double,escapeNewlines:!1,includeDelimiters:!1,escapeDelimiter:!1}),_this15}return _inherits(StringLiteral,_Literal2),_createClass(StringLiteral,[{key:"compileNode",value:function compileNode(o){return this.shouldGenerateTemplateLiteral()?StringWithInterpolations.fromStringLiteral(this).compileNode(o):this.jsx?[this.makeCode(this.unquotedValueForJSX)]:_get(_getPrototypeOf(StringLiteral.prototype),"compileNode",this).call(this,o)}},{key:"withoutQuotesInLocationData",value:function withoutQuotesInLocationData(){var copy,endsWithNewline,locationData;return endsWithNewline="\n"===this.originalValue.slice(-1),locationData=Object.assign({},this.locationData),locationData.first_column+=this.quote.length,endsWithNewline?(locationData.last_line-=1,locationData.last_column=locationData.last_line===locationData.first_line?locationData.first_column+this.originalValue.length-"\n".length:this.originalValue.slice(0,-1).length-"\n".length-this.originalValue.slice(0,-1).lastIndexOf("\n")):locationData.last_column-=this.quote.length,locationData.last_column_exclusive-=this.quote.length,locationData.range=[locationData.range[0]+this.quote.length,locationData.range[1]-this.quote.length],copy=new StringLiteral(this.originalValue,{quote:this.quote,initialChunk:this.initialChunk,finalChunk:this.finalChunk,indent:this.indent,double:this.double,heregex:this.heregex}),copy.locationData=locationData,copy}},{key:"isFromHeredoc",value:function isFromHeredoc(){return 3===this.quote.length}},{key:"shouldGenerateTemplateLiteral",value:function shouldGenerateTemplateLiteral(){return this.isFromHeredoc()}},{key:"astNode",value:function astNode(o){return this.shouldGenerateTemplateLiteral()?StringWithInterpolations.fromStringLiteral(this).ast(o):_get(_getPrototypeOf(StringLiteral.prototype),"astNode",this).call(this,o)}},{key:"astProperties",value:function astProperties(){return{value:this.originalValue,extra:{raw:"".concat(this.delimiter).concat(this.originalValue).concat(this.delimiter)}}}}]),StringLiteral}(Literal),exports.RegexLiteral=RegexLiteral=function(){var RegexLiteral=function(_Literal3){"use strict";function RegexLiteral(value){var _ref25=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_ref25$delimiter=_ref25.delimiter,delimiter1=void 0===_ref25$delimiter?"/":_ref25$delimiter,_ref25$heregexComment=_ref25.heregexCommentTokens,heregexCommentTokens=void 0===_ref25$heregexComment?[]:_ref25$heregexComment,_this16;_classCallCheck(this,RegexLiteral);var endDelimiterIndex,heregex,val;return _this16=_possibleConstructorReturn(this,_getPrototypeOf(RegexLiteral).call(this,"")),_this16.delimiter=delimiter1,_this16.heregexCommentTokens=heregexCommentTokens,heregex="///"===_this16.delimiter,endDelimiterIndex=value.lastIndexOf("/"),_this16.flags=value.slice(endDelimiterIndex+1),val=_this16.originalValue=value.slice(1,endDelimiterIndex),heregex&&(val=val.replace(HEREGEX_OMIT,"$1$2")),val=replaceUnicodeCodePointEscapes(val,{flags:_this16.flags}),_this16.value="".concat(makeDelimitedLiteral(val,{delimiter:"/"})).concat(_this16.flags),_this16}return _inherits(RegexLiteral,_Literal3),_createClass(RegexLiteral,[{key:"astType",value:function astType(){return"RegExpLiteral"}},{key:"astProperties",value:function astProperties(o){var _this$REGEX_REGEX$exe=this.REGEX_REGEX.exec(this.value),_this$REGEX_REGEX$exe2=_slicedToArray(_this$REGEX_REGEX$exe,2),heregexCommentToken,pattern;return pattern=_this$REGEX_REGEX$exe2[1],{value:void 0,pattern:pattern,flags:this.flags,delimiter:this.delimiter,originalPattern:this.originalValue,extra:{raw:this.value,originalRaw:"".concat(this.delimiter).concat(this.originalValue).concat(this.delimiter).concat(this.flags),rawValue:void 0},comments:function(){var j,len1,ref1,results1;for(ref1=this.heregexCommentTokens,results1=[],(j=0,len1=ref1.length);j<len1;j++)heregexCommentToken=ref1[j],heregexCommentToken.here?results1.push(new HereComment(heregexCommentToken).ast(o)):results1.push(new LineComment(heregexCommentToken).ast(o));return results1}.call(this)}}}]),RegexLiteral}(Literal);return RegexLiteral.prototype.REGEX_REGEX=/^\/(.*)\/\w*$/,RegexLiteral}.call(this),exports.PassthroughLiteral=PassthroughLiteral=function(_Literal4){"use strict";function PassthroughLiteral(originalValue){var _ref26=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},here=_ref26.here,generated=_ref26.generated,_this17;return _classCallCheck(this,PassthroughLiteral),_this17=_possibleConstructorReturn(this,_getPrototypeOf(PassthroughLiteral).call(this,"")),_this17.originalValue=originalValue,_this17.here=here,_this17.generated=generated,_this17.value=_this17.originalValue.replace(/\\+(`|$)/g,function(string){var _Mathceil=Math.ceil;return string.slice(-_Mathceil(string.length/2))}),_this17}return _inherits(PassthroughLiteral,_Literal4),_createClass(PassthroughLiteral,[{key:"astNode",value:function astNode(o){return this.generated?null:_get(_getPrototypeOf(PassthroughLiteral.prototype),"astNode",this).call(this,o)}},{key:"astProperties",value:function astProperties(){return{value:this.originalValue,here:!!this.here}}}]),PassthroughLiteral}(Literal),exports.IdentifierLiteral=IdentifierLiteral=function(){var IdentifierLiteral=function(_Literal5){"use strict";function IdentifierLiteral(){return _classCallCheck(this,IdentifierLiteral),_possibleConstructorReturn(this,_getPrototypeOf(IdentifierLiteral).apply(this,arguments))}return _inherits(IdentifierLiteral,_Literal5),_createClass(IdentifierLiteral,[{key:"eachName",value:function eachName(iterator){return iterator(this)}},{key:"astType",value:function astType(){return this.jsx?"JSXIdentifier":"Identifier"}},{key:"astProperties",value:function astProperties(){return{name:this.value,declaration:!!this.isDeclaration}}}]),IdentifierLiteral}(Literal);return IdentifierLiteral.prototype.isAssignable=YES,IdentifierLiteral}.call(this),exports.PropertyName=PropertyName=function(){var PropertyName=function(_Literal6){"use strict";function PropertyName(){return _classCallCheck(this,PropertyName),_possibleConstructorReturn(this,_getPrototypeOf(PropertyName).apply(this,arguments))}return _inherits(PropertyName,_Literal6),_createClass(PropertyName,[{key:"astType",value:function astType(){return this.jsx?"JSXIdentifier":"Identifier"}},{key:"astProperties",value:function astProperties(){return{name:this.value,declaration:!1}}}]),PropertyName}(Literal);return PropertyName.prototype.isAssignable=YES,PropertyName}.call(this),exports.ComputedPropertyName=ComputedPropertyName=function(_PropertyName){"use strict";function ComputedPropertyName(){return _classCallCheck(this,ComputedPropertyName),_possibleConstructorReturn(this,_getPrototypeOf(ComputedPropertyName).apply(this,arguments))}return _inherits(ComputedPropertyName,_PropertyName),_createClass(ComputedPropertyName,[{key:"compileNode",value:function compileNode(o){return[this.makeCode("[")].concat(_toConsumableArray(this.value.compileToFragments(o,LEVEL_LIST)),[this.makeCode("]")])}},{key:"astNode",value:function astNode(o){return this.value.ast(o)}}]),ComputedPropertyName}(PropertyName),exports.StatementLiteral=StatementLiteral=function(){var StatementLiteral=function(_Literal7){"use strict";function StatementLiteral(){return _classCallCheck(this,StatementLiteral),_possibleConstructorReturn(this,_getPrototypeOf(StatementLiteral).apply(this,arguments))}return _inherits(StatementLiteral,_Literal7),_createClass(StatementLiteral,[{key:"jumps",value:function jumps(o){return"break"!==this.value||(null==o?void 0:o.loop)||(null==o?void 0:o.block)?"continue"!==this.value||null!=o&&o.loop?void 0:this:this}},{key:"compileNode",value:function compileNode(){return[this.makeCode("".concat(this.tab).concat(this.value,";"))]}},{key:"astType",value:function astType(){switch(this.value){case"continue":return"ContinueStatement";case"break":return"BreakStatement";case"debugger":return"DebuggerStatement";}}}]),StatementLiteral}(Literal);return StatementLiteral.prototype.isStatement=YES,StatementLiteral.prototype.makeReturn=THIS,StatementLiteral}.call(this),exports.ThisLiteral=ThisLiteral=function(_Literal8){"use strict";function ThisLiteral(value){var _this18;return _classCallCheck(this,ThisLiteral),_this18=_possibleConstructorReturn(this,_getPrototypeOf(ThisLiteral).call(this,"this")),_this18.shorthand="@"===value,_this18}return _inherits(ThisLiteral,_Literal8),_createClass(ThisLiteral,[{key:"compileNode",value:function compileNode(o){var code,ref1;return code=(null==(ref1=o.scope.method)?void 0:ref1.bound)?o.scope.method.context:this.value,[this.makeCode(code)]}},{key:"astType",value:function astType(){return"ThisExpression"}},{key:"astProperties",value:function astProperties(){return{shorthand:this.shorthand}}}]),ThisLiteral}(Literal),exports.UndefinedLiteral=UndefinedLiteral=function(_Literal9){"use strict";function UndefinedLiteral(){return _classCallCheck(this,UndefinedLiteral),_possibleConstructorReturn(this,_getPrototypeOf(UndefinedLiteral).call(this,"undefined"))}return _inherits(UndefinedLiteral,_Literal9),_createClass(UndefinedLiteral,[{key:"compileNode",value:function compileNode(o){return[this.makeCode(o.level>=LEVEL_ACCESS?"(void 0)":"void 0")]}},{key:"astType",value:function astType(){return"Identifier"}},{key:"astProperties",value:function astProperties(){return{name:this.value,declaration:!1}}}]),UndefinedLiteral}(Literal),exports.NullLiteral=NullLiteral=function(_Literal10){"use strict";function NullLiteral(){return _classCallCheck(this,NullLiteral),_possibleConstructorReturn(this,_getPrototypeOf(NullLiteral).call(this,"null"))}return _inherits(NullLiteral,_Literal10),NullLiteral}(Literal),exports.BooleanLiteral=BooleanLiteral=function(_Literal11){"use strict";function BooleanLiteral(value){var _ref27=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},originalValue=_ref27.originalValue,_this19;return _classCallCheck(this,BooleanLiteral),_this19=_possibleConstructorReturn(this,_getPrototypeOf(BooleanLiteral).call(this,value)),_this19.originalValue=originalValue,null==_this19.originalValue&&(_this19.originalValue=_this19.value),_this19}return _inherits(BooleanLiteral,_Literal11),_createClass(BooleanLiteral,[{key:"astProperties",value:function astProperties(){return{value:"true"===this.value,name:this.originalValue}}}]),BooleanLiteral}(Literal),exports.DefaultLiteral=DefaultLiteral=function(_Literal12){"use strict";function DefaultLiteral(){return _classCallCheck(this,DefaultLiteral),_possibleConstructorReturn(this,_getPrototypeOf(DefaultLiteral).apply(this,arguments))}return _inherits(DefaultLiteral,_Literal12),_createClass(DefaultLiteral,[{key:"astType",value:function astType(){return"Identifier"}},{key:"astProperties",value:function astProperties(){return{name:"default",declaration:!1}}}]),DefaultLiteral}(Literal),exports.Return=Return=function(){var Return=function(_Base6){"use strict";function Return(expression1){var _ref28=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},belongsToFuncDirectiveReturn=_ref28.belongsToFuncDirectiveReturn,_this20;return _classCallCheck(this,Return),_this20=_possibleConstructorReturn(this,_getPrototypeOf(Return).call(this)),_this20.expression=expression1,_this20.belongsToFuncDirectiveReturn=belongsToFuncDirectiveReturn,_this20}return _inherits(Return,_Base6),_createClass(Return,[{key:"compileToFragments",value:function compileToFragments(o,level){var expr,ref1;return expr=null==(ref1=this.expression)?void 0:ref1.makeReturn(),expr&&!(expr instanceof Return)?expr.compileToFragments(o,level):_get(_getPrototypeOf(Return.prototype),"compileToFragments",this).call(this,o,level)}},{key:"compileNode",value:function compileNode(o){var answer,fragment,j,len1;if(answer=[],this.expression){for(answer=this.expression.compileToFragments(o,LEVEL_PAREN),unshiftAfterComments(answer,this.makeCode("".concat(this.tab,"return "))),(j=0,len1=answer.length);j<len1;j++)if(fragment=answer[j],fragment.isHereComment&&0<=indexOf.call(fragment.code,"\n"))fragment.code=multident(fragment.code,this.tab);else if(fragment.isLineComment)fragment.code="".concat(this.tab).concat(fragment.code);else break;}else answer.push(this.makeCode("".concat(this.tab,"return")));return answer.push(this.makeCode(";")),answer}},{key:"checkForPureStatementInExpression",value:function checkForPureStatementInExpression(){return this.belongsToFuncDirectiveReturn?void 0:_get(_getPrototypeOf(Return.prototype),"checkForPureStatementInExpression",this).call(this)}},{key:"astType",value:function astType(){return"ReturnStatement"}},{key:"astProperties",value:function astProperties(o){var ref1,ref2;return{argument:null==(ref1=null==(ref2=this.expression)?void 0:ref2.ast(o,LEVEL_PAREN))?null:ref1}}}]),Return}(Base);return Return.prototype.children=["expression"],Return.prototype.isStatement=YES,Return.prototype.makeReturn=THIS,Return.prototype.jumps=THIS,Return}.call(this),exports.FuncDirectiveReturn=FuncDirectiveReturn=function(){var FuncDirectiveReturn=function(_Return){"use strict";function FuncDirectiveReturn(expression,_ref29){var returnKeyword=_ref29.returnKeyword,_this21;return _classCallCheck(this,FuncDirectiveReturn),_this21=_possibleConstructorReturn(this,_getPrototypeOf(FuncDirectiveReturn).call(this,expression)),_this21.returnKeyword=returnKeyword,_this21}return _inherits(FuncDirectiveReturn,_Return),_createClass(FuncDirectiveReturn,[{key:"compileNode",value:function compileNode(o){return this.checkScope(o),_get(_getPrototypeOf(FuncDirectiveReturn.prototype),"compileNode",this).call(this,o)}},{key:"checkScope",value:function checkScope(o){if(null==o.scope.parent)return this.error("".concat(this.keyword," can only occur inside functions"))}},{key:"astNode",value:function astNode(o){return this.checkScope(o),new Op(this.keyword,new Return(this.expression,{belongsToFuncDirectiveReturn:!0}).withLocationDataFrom(null==this.expression?this.returnKeyword:{locationData:mergeLocationData(this.returnKeyword.locationData,this.expression.locationData)})).withLocationDataFrom(this).ast(o)}}]),FuncDirectiveReturn}(Return);return FuncDirectiveReturn.prototype.isStatementAst=NO,FuncDirectiveReturn}.call(this),exports.YieldReturn=YieldReturn=function(){var YieldReturn=function(_FuncDirectiveReturn){"use strict";function YieldReturn(){return _classCallCheck(this,YieldReturn),_possibleConstructorReturn(this,_getPrototypeOf(YieldReturn).apply(this,arguments))}return _inherits(YieldReturn,_FuncDirectiveReturn),YieldReturn}(FuncDirectiveReturn);return YieldReturn.prototype.keyword="yield",YieldReturn}.call(this),exports.AwaitReturn=AwaitReturn=function(){var AwaitReturn=function(_FuncDirectiveReturn2){"use strict";function AwaitReturn(){return _classCallCheck(this,AwaitReturn),_possibleConstructorReturn(this,_getPrototypeOf(AwaitReturn).apply(this,arguments))}return _inherits(AwaitReturn,_FuncDirectiveReturn2),AwaitReturn}(FuncDirectiveReturn);return AwaitReturn.prototype.keyword="await",AwaitReturn}.call(this),exports.Value=Value=function(){var Value=function(_Base7){"use strict";function Value(base,props,tag){var isDefaultValue=!!(3<arguments.length&&void 0!==arguments[3])&&arguments[3],_this22;_classCallCheck(this,Value);var ref1,ref2;return(_this22=_possibleConstructorReturn(this,_getPrototypeOf(Value).call(this)),!props&&base instanceof Value)?_possibleConstructorReturn(_this22,base):(_this22.base=base,_this22.properties=props||[],_this22.tag=tag,tag&&(_this22[tag]=!0),_this22.isDefaultValue=isDefaultValue,(null==(ref1=_this22.base)?void 0:ref1.comments)&&_this22.base instanceof ThisLiteral&&null!=(null==(ref2=_this22.properties[0])?void 0:ref2.name)&&moveComments(_this22.base,_this22.properties[0].name),_this22)}return _inherits(Value,_Base7),_createClass(Value,[{key:"add",value:function add(props){return this.properties=this.properties.concat(props),this.forceUpdateLocation=!0,this}},{key:"hasProperties",value:function hasProperties(){return 0!==this.properties.length}},{key:"bareLiteral",value:function bareLiteral(type){return!this.properties.length&&this.base instanceof type}},{key:"isArray",value:function isArray(){return this.bareLiteral(Arr)}},{key:"isRange",value:function isRange(){return this.bareLiteral(Range)}},{key:"shouldCache",value:function shouldCache(){return this.hasProperties()||this.base.shouldCache()}},{key:"isAssignable",value:function isAssignable(opts){return this.hasProperties()||this.base.isAssignable(opts)}},{key:"isNumber",value:function(){return this.bareLiteral(NumberLiteral)}},{key:"isString",value:function isString(){return this.bareLiteral(StringLiteral)}},{key:"isRegex",value:function isRegex(){return this.bareLiteral(RegexLiteral)}},{key:"isUndefined",value:function isUndefined(){return this.bareLiteral(UndefinedLiteral)}},{key:"isNull",value:function isNull(){return this.bareLiteral(NullLiteral)}},{key:"isBoolean",value:function isBoolean(){return this.bareLiteral(BooleanLiteral)}},{key:"isAtomic",value:function isAtomic(){var j,len1,node,ref1;for(ref1=this.properties.concat(this.base),j=0,len1=ref1.length;j<len1;j++)if(node=ref1[j],node.soak||node instanceof Call||node instanceof Op&&"do"===node.operator)return!1;return!0}},{key:"isNotCallable",value:function isNotCallable(){return this.isNumber()||this.isString()||this.isRegex()||this.isArray()||this.isRange()||this.isSplice()||this.isObject()||this.isUndefined()||this.isNull()||this.isBoolean()}},{key:"isStatement",value:function isStatement(o){return!this.properties.length&&this.base.isStatement(o)}},{key:"isJSXTag",value:function isJSXTag(){return this.base instanceof JSXTag}},{key:"assigns",value:function assigns(name){return!this.properties.length&&this.base.assigns(name)}},{key:"jumps",value:function jumps(o){return!this.properties.length&&this.base.jumps(o)}},{key:"isObject",value:function isObject(onlyGenerated){return!this.properties.length&&this.base instanceof Obj&&(!onlyGenerated||this.base.generated)}},{key:"isElision",value:function isElision(){return!!(this.base instanceof Arr)&&this.base.hasElision()}},{key:"isSplice",value:function isSplice(){var _slice1$call7,_slice1$call8,lastProperty,ref1;return ref1=this.properties,_slice1$call7=slice1.call(ref1,-1),_slice1$call8=_slicedToArray(_slice1$call7,1),lastProperty=_slice1$call8[0],_slice1$call7,lastProperty instanceof Slice}},{key:"looksStatic",value:function looksStatic(className){var name,ref1,thisLiteral;return!!(((thisLiteral=this.base)instanceof ThisLiteral||(name=this.base).value===className)&&1===this.properties.length&&"prototype"!==(null==(ref1=this.properties[0].name)?void 0:ref1.value))&&{staticClassName:null==thisLiteral?name:thisLiteral}}},{key:"unwrap",value:function unwrap(){return this.properties.length?this:this.base}},{key:"cacheReference",value:function cacheReference(o){var _slice1$call9,_slice1$call10,base,bref,name,nref,ref1;return(ref1=this.properties,_slice1$call9=slice1.call(ref1,-1),_slice1$call10=_slicedToArray(_slice1$call9,1),name=_slice1$call10[0],_slice1$call9,2>this.properties.length&&!this.base.shouldCache()&&(null==name||!name.shouldCache()))?[this,this]:(base=new Value(this.base,this.properties.slice(0,-1)),base.shouldCache()&&(bref=new IdentifierLiteral(o.scope.freeVariable("base")),base=new Value(new Parens(new Assign(bref,base)))),!name)?[base,bref]:(name.shouldCache()&&(nref=new IdentifierLiteral(o.scope.freeVariable("name")),name=new Index(new Assign(nref,name.index)),nref=new Index(nref)),[base.add(name),new Value(bref||base.base,[nref||name])])}},{key:"compileNode",value:function compileNode(o){var fragments,j,len1,prop,props;for(this.base.front=this.front,props=this.properties,fragments=props.length&&null!=this.base.cached?this.base.cached:this.base.compileToFragments(o,props.length?LEVEL_ACCESS:null),props.length&&SIMPLENUM.test(fragmentsToText(fragments))&&fragments.push(this.makeCode(".")),(j=0,len1=props.length);j<len1;j++){var _fragments2;prop=props[j],(_fragments2=fragments).push.apply(_fragments2,_toConsumableArray(prop.compileToFragments(o)))}return fragments}},{key:"unfoldSoak",value:function unfoldSoak(o){var _this23=this;return null==this.unfoldedSoak?this.unfoldedSoak=function(){var fst,i,ifn,j,len1,prop,ref,ref1,snd;if(ifn=_this23.base.unfoldSoak(o),ifn){var _ifn$body$properties;return(_ifn$body$properties=ifn.body.properties).push.apply(_ifn$body$properties,_toConsumableArray(_this23.properties)),ifn}for(ref1=_this23.properties,i=j=0,len1=ref1.length;j<len1;i=++j)if(prop=ref1[i],!!prop.soak)return prop.soak=!1,fst=new Value(_this23.base,_this23.properties.slice(0,i)),snd=new Value(_this23.base,_this23.properties.slice(i)),fst.shouldCache()&&(ref=new IdentifierLiteral(o.scope.freeVariable("ref")),fst=new Parens(new Assign(ref,fst)),snd.base=ref),new If(new Existence(fst),snd,{soak:!0});return!1}():this.unfoldedSoak}},{key:"eachName",value:function eachName(iterator){var _ref30=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_ref30$checkAssignabi=_ref30.checkAssignability;return this.hasProperties()?iterator(this):!(void 0===_ref30$checkAssignabi||_ref30$checkAssignabi)||this.base.isAssignable()?this.base.eachName(iterator):this.error("tried to assign to unassignable value")}},{key:"object",value:function(){var initialProperties,object;return this.hasProperties()?(initialProperties=this.properties.slice(0,this.properties.length-1),object=new Value(this.base,initialProperties,this.tag,this.isDefaultValue),object.locationData=0===initialProperties.length?this.base.locationData:mergeLocationData(this.base.locationData,initialProperties[initialProperties.length-1].locationData),object):this}},{key:"containsSoak",value:function containsSoak(){var j,len1,property,ref1;if(!this.hasProperties())return!1;for(ref1=this.properties,j=0,len1=ref1.length;j<len1;j++)if(property=ref1[j],property.soak)return!0;return!!(this.base instanceof Call&&this.base.soak)}},{key:"astNode",value:function astNode(o){return this.hasProperties()?_get(_getPrototypeOf(Value.prototype),"astNode",this).call(this,o):this.base.ast(o)}},{key:"astType",value:function astType(){return this.isJSXTag()?"JSXMemberExpression":this.containsSoak()?"OptionalMemberExpression":"MemberExpression"}},{key:"astProperties",value:function astProperties(o){var _slice1$call11,_slice1$call12,computed,property,ref1,ref2;return ref1=this.properties,_slice1$call11=slice1.call(ref1,-1),_slice1$call12=_slicedToArray(_slice1$call11,1),property=_slice1$call12[0],_slice1$call11,this.isJSXTag()&&(property.name.jsx=!0),computed=property instanceof Index||!((null==(ref2=property.name)?void 0:ref2.unwrap())instanceof PropertyName),{object:this.object().ast(o,LEVEL_ACCESS),property:property.ast(o,computed?LEVEL_PAREN:void 0),computed:computed,optional:!!property.soak,shorthand:!!property.shorthand}}},{key:"astLocationData",value:function astLocationData(){return this.isJSXTag()?mergeAstLocationData(jisonLocationDataToAstLocationData(this.base.tagNameLocationData),jisonLocationDataToAstLocationData(this.properties[this.properties.length-1].locationData)):_get(_getPrototypeOf(Value.prototype),"astLocationData",this).call(this)}}]),Value}(Base);return Value.prototype.children=["base","properties"],Value}.call(this),exports.MetaProperty=MetaProperty=function(){var MetaProperty=function(_Base8){"use strict";function MetaProperty(meta,property1){var _this24;return _classCallCheck(this,MetaProperty),_this24=_possibleConstructorReturn(this,_getPrototypeOf(MetaProperty).call(this)),_this24.meta=meta,_this24.property=property1,_this24}return _inherits(MetaProperty,_Base8),_createClass(MetaProperty,[{key:"checkValid",value:function checkValid(o){if("new"===this.meta.value){if(!(this.property instanceof Access&&"target"===this.property.name.value))return this.error("the only valid meta property for new is new.target");if(null==o.scope.parent)return this.error("new.target can only occur inside functions")}}},{key:"compileNode",value:function compileNode(o){var _fragments3,_fragments4,fragments;return this.checkValid(o),fragments=[],(_fragments3=fragments).push.apply(_fragments3,_toConsumableArray(this.meta.compileToFragments(o,LEVEL_ACCESS))),(_fragments4=fragments).push.apply(_fragments4,_toConsumableArray(this.property.compileToFragments(o))),fragments}},{key:"astProperties",value:function astProperties(o){return this.checkValid(o),{meta:this.meta.ast(o,LEVEL_ACCESS),property:this.property.ast(o)}}}]),MetaProperty}(Base);return MetaProperty.prototype.children=["meta","property"],MetaProperty}.call(this),exports.HereComment=HereComment=function(_Base9){"use strict";function HereComment(_ref31){var content1=_ref31.content,newLine=_ref31.newLine,unshift=_ref31.unshift,locationData1=_ref31.locationData,_this25;return _classCallCheck(this,HereComment),_this25=_possibleConstructorReturn(this,_getPrototypeOf(HereComment).call(this)),_this25.content=content1,_this25.newLine=newLine,_this25.unshift=unshift,_this25.locationData=locationData1,_this25}return _inherits(HereComment,_Base9),_createClass(HereComment,[{key:"compileNode",value:function compileNode(){var fragment,hasLeadingMarks,indent,j,leadingWhitespace,len1,line,multiline,ref1;if(multiline=0<=indexOf.call(this.content,"\n"),multiline){for(indent=null,ref1=this.content.split("\n"),(j=0,len1=ref1.length);j<len1;j++)line=ref1[j],leadingWhitespace=/^\s*/.exec(line)[0],(!indent||leadingWhitespace.length<indent.length)&&(indent=leadingWhitespace);indent&&(this.content=this.content.replace(RegExp("\\n".concat(indent),"g"),"\n"))}return hasLeadingMarks=/\n\s*[#|\*]/.test(this.content),hasLeadingMarks&&(this.content=this.content.replace(/^([ \t]*)#(?=\s)/gm," *")),this.content="/*".concat(this.content).concat(hasLeadingMarks?" ":"","*/"),fragment=this.makeCode(this.content),fragment.newLine=this.newLine,fragment.unshift=this.unshift,fragment.multiline=multiline,fragment.isComment=fragment.isHereComment=!0,fragment}},{key:"astType",value:function astType(){return"CommentBlock"}},{key:"astProperties",value:function astProperties(){return{value:this.content}}}]),HereComment}(Base),exports.LineComment=LineComment=function(_Base10){"use strict";function LineComment(_ref32){var content1=_ref32.content,newLine=_ref32.newLine,unshift=_ref32.unshift,locationData1=_ref32.locationData,precededByBlankLine=_ref32.precededByBlankLine,_this26;return _classCallCheck(this,LineComment),_this26=_possibleConstructorReturn(this,_getPrototypeOf(LineComment).call(this)),_this26.content=content1,_this26.newLine=newLine,_this26.unshift=unshift,_this26.locationData=locationData1,_this26.precededByBlankLine=precededByBlankLine,_this26}return _inherits(LineComment,_Base10),_createClass(LineComment,[{key:"compileNode",value:function compileNode(o){var fragment;return fragment=this.makeCode(/^\s*$/.test(this.content)?"":"".concat(this.precededByBlankLine?"\n".concat(o.indent):"","//").concat(this.content)),fragment.newLine=this.newLine,fragment.unshift=this.unshift,fragment.trail=!this.newLine&&!this.unshift,fragment.isComment=fragment.isLineComment=!0,fragment}},{key:"astType",value:function astType(){return"CommentLine"}},{key:"astProperties",value:function astProperties(){return{value:this.content}}}]),LineComment}(Base),exports.JSXIdentifier=JSXIdentifier=function(_IdentifierLiteral){"use strict";function JSXIdentifier(){return _classCallCheck(this,JSXIdentifier),_possibleConstructorReturn(this,_getPrototypeOf(JSXIdentifier).apply(this,arguments))}return _inherits(JSXIdentifier,_IdentifierLiteral),_createClass(JSXIdentifier,[{key:"astType",value:function astType(){return"JSXIdentifier"}}]),JSXIdentifier}(IdentifierLiteral),exports.JSXTag=JSXTag=function(_JSXIdentifier){"use strict";function JSXTag(value,_ref33){var tagNameLocationData=_ref33.tagNameLocationData,closingTagOpeningBracketLocationData=_ref33.closingTagOpeningBracketLocationData,closingTagSlashLocationData=_ref33.closingTagSlashLocationData,closingTagNameLocationData=_ref33.closingTagNameLocationData,closingTagClosingBracketLocationData=_ref33.closingTagClosingBracketLocationData,_this27;return _classCallCheck(this,JSXTag),_this27=_possibleConstructorReturn(this,_getPrototypeOf(JSXTag).call(this,value)),_this27.tagNameLocationData=tagNameLocationData,_this27.closingTagOpeningBracketLocationData=closingTagOpeningBracketLocationData,_this27.closingTagSlashLocationData=closingTagSlashLocationData,_this27.closingTagNameLocationData=closingTagNameLocationData,_this27.closingTagClosingBracketLocationData=closingTagClosingBracketLocationData,_this27}return _inherits(JSXTag,_JSXIdentifier),_createClass(JSXTag,[{key:"astProperties",value:function astProperties(){return{name:this.value}}}]),JSXTag}(JSXIdentifier),exports.JSXExpressionContainer=JSXExpressionContainer=function(){var JSXExpressionContainer=function(_Base11){"use strict";function JSXExpressionContainer(expression1){var _ref34=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},locationData=_ref34.locationData,_this28;return _classCallCheck(this,JSXExpressionContainer),_this28=_possibleConstructorReturn(this,_getPrototypeOf(JSXExpressionContainer).call(this)),_this28.expression=expression1,_this28.expression.jsxAttribute=!0,_this28.locationData=null==locationData?_this28.expression.locationData:locationData,_this28}return _inherits(JSXExpressionContainer,_Base11),_createClass(JSXExpressionContainer,[{key:"compileNode",value:function compileNode(o){return this.expression.compileNode(o)}},{key:"astProperties",value:function astProperties(o){return{expression:astAsBlockIfNeeded(this.expression,o)}}}]),JSXExpressionContainer}(Base);return JSXExpressionContainer.prototype.children=["expression"],JSXExpressionContainer}.call(this),exports.JSXEmptyExpression=JSXEmptyExpression=function(_Base12){"use strict";function JSXEmptyExpression(){return _classCallCheck(this,JSXEmptyExpression),_possibleConstructorReturn(this,_getPrototypeOf(JSXEmptyExpression).apply(this,arguments))}return _inherits(JSXEmptyExpression,_Base12),JSXEmptyExpression}(Base),exports.JSXText=JSXText=function(_Base13){"use strict";function JSXText(stringLiteral){var _this29;return _classCallCheck(this,JSXText),_this29=_possibleConstructorReturn(this,_getPrototypeOf(JSXText).call(this)),_this29.value=stringLiteral.unquotedValueForJSX,_this29.locationData=stringLiteral.locationData,_this29}return _inherits(JSXText,_Base13),_createClass(JSXText,[{key:"astProperties",value:function astProperties(){return{value:this.value,extra:{raw:this.value}}}}]),JSXText}(Base),exports.JSXAttribute=JSXAttribute=function(){var JSXAttribute=function(_Base14){"use strict";function JSXAttribute(_ref35){var name1=_ref35.name,value=_ref35.value,_this30;_classCallCheck(this,JSXAttribute);var ref1;return _this30=_possibleConstructorReturn(this,_getPrototypeOf(JSXAttribute).call(this)),_this30.name=name1,_this30.value=null==value?null:(value=value.base,value instanceof StringLiteral?value:new JSXExpressionContainer(value)),null!=(ref1=_this30.value)&&(ref1.comments=value.comments),_this30}return _inherits(JSXAttribute,_Base14),_createClass(JSXAttribute,[{key:"compileNode",value:function compileNode(o){var compiledName,val;return(compiledName=this.name.compileToFragments(o,LEVEL_LIST),null==this.value)?compiledName:(val=this.value.compileToFragments(o,LEVEL_LIST),compiledName.concat(this.makeCode("="),val))}},{key:"astProperties",value:function astProperties(o){var name,ref1,ref2;return name=this.name,0<=indexOf.call(name.value,":")&&(name=new JSXNamespacedName(name)),{name:name.ast(o),value:null==(ref1=null==(ref2=this.value)?void 0:ref2.ast(o))?null:ref1}}}]),JSXAttribute}(Base);return JSXAttribute.prototype.children=["name","value"],JSXAttribute}.call(this),exports.JSXAttributes=JSXAttributes=function(){var JSXAttributes=function(_Base15){"use strict";function JSXAttributes(arr){var _this31;_classCallCheck(this,JSXAttributes);var attribute,base,j,k,len1,len2,object,property,ref1,ref2,value,variable;for(_this31=_possibleConstructorReturn(this,_getPrototypeOf(JSXAttributes).call(this)),_this31.attributes=[],ref1=arr.objects,(j=0,len1=ref1.length);j<len1;j++){object=ref1[j],_this31.checkValidAttribute(object);var _object=object;if(base=_object.base,base instanceof IdentifierLiteral)attribute=new JSXAttribute({name:new JSXIdentifier(base.value).withLocationDataAndCommentsFrom(base)}),attribute.locationData=base.locationData,_this31.attributes.push(attribute);else if(!base.generated)attribute=base.properties[0],attribute.jsx=!0,attribute.locationData=base.locationData,_this31.attributes.push(attribute);else for(ref2=base.properties,k=0,len2=ref2.length;k<len2;k++){property=ref2[k];var _property=property;variable=_property.variable,value=_property.value,attribute=new JSXAttribute({name:new JSXIdentifier(variable.base.value).withLocationDataAndCommentsFrom(variable.base),value:value}),attribute.locationData=property.locationData,_this31.attributes.push(attribute)}}return _this31.locationData=arr.locationData,_this31}return _inherits(JSXAttributes,_Base15),_createClass(JSXAttributes,[{key:"checkValidAttribute",value:function checkValidAttribute(object){var attribute,properties;if(attribute=object.base,properties=(null==attribute?void 0:attribute.properties)||[],!(attribute instanceof Obj||attribute instanceof IdentifierLiteral)||attribute instanceof Obj&&!attribute.generated&&(1<properties.length||!(properties[0]instanceof Splat)))return object.error("Unexpected token. Allowed JSX attributes are: id=\"val\", src={source}, {props...} or attribute.")}},{key:"compileNode",value:function compileNode(o){var attribute,fragments,j,len1,ref1;for(fragments=[],ref1=this.attributes,(j=0,len1=ref1.length);j<len1;j++){var _fragments5;attribute=ref1[j],fragments.push(this.makeCode(" ")),(_fragments5=fragments).push.apply(_fragments5,_toConsumableArray(attribute.compileToFragments(o,LEVEL_TOP)))}return fragments}},{key:"astNode",value:function astNode(o){var attribute,j,len1,ref1,results1;for(ref1=this.attributes,results1=[],(j=0,len1=ref1.length);j<len1;j++)attribute=ref1[j],results1.push(attribute.ast(o));return results1}}]),JSXAttributes}(Base);return JSXAttributes.prototype.children=["attributes"],JSXAttributes}.call(this),exports.JSXNamespacedName=JSXNamespacedName=function(){var JSXNamespacedName=function(_Base16){"use strict";function JSXNamespacedName(tag){var _this32;_classCallCheck(this,JSXNamespacedName);var name,namespace;_this32=_possibleConstructorReturn(this,_getPrototypeOf(JSXNamespacedName).call(this));var _tag$value$split=tag.value.split(":"),_tag$value$split2=_slicedToArray(_tag$value$split,2);return namespace=_tag$value$split2[0],name=_tag$value$split2[1],_this32.namespace=new JSXIdentifier(namespace).withLocationDataFrom({locationData:extractSameLineLocationDataFirst(namespace.length)(tag.locationData)}),_this32.name=new JSXIdentifier(name).withLocationDataFrom({locationData:extractSameLineLocationDataLast(name.length)(tag.locationData)}),_this32.locationData=tag.locationData,_this32}return _inherits(JSXNamespacedName,_Base16),_createClass(JSXNamespacedName,[{key:"astProperties",value:function astProperties(o){return{namespace:this.namespace.ast(o),name:this.name.ast(o)}}}]),JSXNamespacedName}(Base);return JSXNamespacedName.prototype.children=["namespace","name"],JSXNamespacedName}.call(this),exports.JSXElement=JSXElement=function(){var JSXElement=function(_Base17){"use strict";function JSXElement(_ref36){var tagName1=_ref36.tagName,attributes=_ref36.attributes,content1=_ref36.content,_this33;return _classCallCheck(this,JSXElement),_this33=_possibleConstructorReturn(this,_getPrototypeOf(JSXElement).call(this)),_this33.tagName=tagName1,_this33.attributes=attributes,_this33.content=content1,_this33}return _inherits(JSXElement,_Base17),_createClass(JSXElement,[{key:"compileNode",value:function compileNode(o){var _fragments6,_fragments7,fragments,ref1,tag;if(null!=(ref1=this.content)&&(ref1.base.jsx=!0),fragments=[this.makeCode("<")],(_fragments6=fragments).push.apply(_fragments6,_toConsumableArray(tag=this.tagName.compileToFragments(o,LEVEL_ACCESS))),(_fragments7=fragments).push.apply(_fragments7,_toConsumableArray(this.attributes.compileToFragments(o))),this.content){var _fragments8,_fragments9;fragments.push(this.makeCode(">")),(_fragments8=fragments).push.apply(_fragments8,_toConsumableArray(this.content.compileNode(o,LEVEL_LIST))),(_fragments9=fragments).push.apply(_fragments9,[this.makeCode("</")].concat(_toConsumableArray(tag),[this.makeCode(">")]))}else fragments.push(this.makeCode(" />"));return fragments}},{key:"isFragment",value:function isFragment(){return!this.tagName.base.value.length}},{key:"astNode",value:function astNode(o){var tagName;return this.openingElementLocationData=jisonLocationDataToAstLocationData(this.attributes.locationData),tagName=this.tagName.base,tagName.locationData=tagName.tagNameLocationData,null!=this.content&&(this.closingElementLocationData=mergeAstLocationData(jisonLocationDataToAstLocationData(tagName.closingTagOpeningBracketLocationData),jisonLocationDataToAstLocationData(tagName.closingTagClosingBracketLocationData))),_get(_getPrototypeOf(JSXElement.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(){return this.isFragment()?"JSXFragment":"JSXElement"}},{key:"elementAstProperties",value:function elementAstProperties(o){var _this34=this,closingElement,columnDiff,currentExpr,openingElement,rangeDiff,ref1,shiftAstLocationData,tagNameAst;if(tagNameAst=function(){var tag;return tag=_this34.tagName.unwrap(),(null==tag?void 0:tag.value)&&0<=indexOf.call(tag.value,":")&&(tag=new JSXNamespacedName(tag)),tag.ast(o)},openingElement=Object.assign({type:"JSXOpeningElement",name:tagNameAst(),selfClosing:null==this.closingElementLocationData,attributes:this.attributes.ast(o)},this.openingElementLocationData),closingElement=null,null!=this.closingElementLocationData&&(closingElement=Object.assign({type:"JSXClosingElement",name:Object.assign(tagNameAst(),jisonLocationDataToAstLocationData(this.tagName.base.closingTagNameLocationData))},this.closingElementLocationData),"JSXMemberExpression"===(ref1=closingElement.name.type)||"JSXNamespacedName"===ref1))if(rangeDiff=closingElement.range[0]-openingElement.range[0]+"/".length,columnDiff=closingElement.loc.start.column-openingElement.loc.start.column+"/".length,shiftAstLocationData=function(node){return node.range=[node.range[0]+rangeDiff,node.range[1]+rangeDiff],node.start+=rangeDiff,node.end+=rangeDiff,node.loc.start={line:_this34.closingElementLocationData.loc.start.line,column:node.loc.start.column+columnDiff},node.loc.end={line:_this34.closingElementLocationData.loc.start.line,column:node.loc.end.column+columnDiff}},"JSXMemberExpression"===closingElement.name.type){for(currentExpr=closingElement.name;"JSXMemberExpression"===currentExpr.type;)currentExpr!==closingElement.name&&shiftAstLocationData(currentExpr),shiftAstLocationData(currentExpr.property),currentExpr=currentExpr.object;shiftAstLocationData(currentExpr)}else shiftAstLocationData(closingElement.name.namespace),shiftAstLocationData(closingElement.name.name);return{openingElement:openingElement,closingElement:closingElement}}},{key:"fragmentAstProperties",value:function fragmentAstProperties(){var closingFragment,openingFragment;return openingFragment=Object.assign({type:"JSXOpeningFragment"},this.openingElementLocationData),closingFragment=Object.assign({type:"JSXClosingFragment"},this.closingElementLocationData),{openingFragment:openingFragment,closingFragment:closingFragment}}},{key:"contentAst",value:function contentAst(o){var base1,child,children,content,element,emptyExpression,expression,j,len1,results1,unwrapped;if(!this.content||("function"==typeof(base1=this.content.base).isEmpty?base1.isEmpty():void 0))return[];for(content=this.content.unwrapAll(),children=function(){var j,len1,ref1,results1;if(content instanceof StringLiteral)return[new JSXText(content)];for(ref1=this.content.unwrapAll().extractElements(o,{includeInterpolationWrappers:!0,isJsx:!0}),results1=[],(j=0,len1=ref1.length);j<len1;j++)if(element=ref1[j],element instanceof StringLiteral)results1.push(new JSXText(element));else{var _element=element;expression=_element.expression,null==expression?(emptyExpression=new JSXEmptyExpression,emptyExpression.locationData=emptyExpressionLocationData({interpolationNode:element,openingBrace:"{",closingBrace:"}"}),results1.push(new JSXExpressionContainer(emptyExpression,{locationData:element.locationData}))):(unwrapped=expression.unwrapAll(),unwrapped instanceof JSXElement&&unwrapped.locationData.range[0]===element.locationData.range[0]?results1.push(unwrapped):results1.push(new JSXExpressionContainer(unwrapped,{locationData:element.locationData})))}return results1}.call(this),results1=[],(j=0,len1=children.length);j<len1;j++)child=children[j],child instanceof JSXText&&0===child.value.length||results1.push(child.ast(o));return results1}},{key:"astProperties",value:function astProperties(o){return Object.assign(this.isFragment()?this.fragmentAstProperties(o):this.elementAstProperties(o),{children:this.contentAst(o)})}},{key:"astLocationData",value:function astLocationData(){return null==this.closingElementLocationData?this.openingElementLocationData:mergeAstLocationData(this.openingElementLocationData,this.closingElementLocationData)}}]),JSXElement}(Base);return JSXElement.prototype.children=["tagName","attributes","content"],JSXElement}.call(this),exports.Call=Call=function(){var Call=function(_Base18){"use strict";function Call(variable1){var args1=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],soak1=2<arguments.length?arguments[2]:void 0,token1=3<arguments.length?arguments[3]:void 0,_this35;_classCallCheck(this,Call);var ref1;return(_this35=_possibleConstructorReturn(this,_getPrototypeOf(Call).call(this)),_this35.variable=variable1,_this35.args=args1,_this35.soak=soak1,_this35.token=token1,_this35.implicit=_this35.args.implicit,_this35.isNew=!1,_this35.variable instanceof Value&&_this35.variable.isNotCallable()&&_this35.variable.error("literal is not a function"),_this35.variable.base instanceof JSXTag)?_possibleConstructorReturn(_this35,new JSXElement({tagName:_this35.variable,attributes:new JSXAttributes(_this35.args[0].base),content:_this35.args[1]})):("RegExp"===(null==(ref1=_this35.variable.base)?void 0:ref1.value)&&0!==_this35.args.length&&moveComments(_this35.variable,_this35.args[0]),_this35)}return _inherits(Call,_Base18),_createClass(Call,[{key:"updateLocationDataIfMissing",value:function updateLocationDataIfMissing(locationData){var base,ref1;return this.locationData&&this.needsUpdatedStartLocation&&(this.locationData=Object.assign({},this.locationData,{first_line:locationData.first_line,first_column:locationData.first_column,range:[locationData.range[0],this.locationData.range[1]]}),base=(null==(ref1=this.variable)?void 0:ref1.base)||this.variable,base.needsUpdatedStartLocation&&(this.variable.locationData=Object.assign({},this.variable.locationData,{first_line:locationData.first_line,first_column:locationData.first_column,range:[locationData.range[0],this.variable.locationData.range[1]]}),base.updateLocationDataIfMissing(locationData)),delete this.needsUpdatedStartLocation),_get(_getPrototypeOf(Call.prototype),"updateLocationDataIfMissing",this).call(this,locationData)}},{key:"newInstance",value:function newInstance(){var base,ref1;return base=(null==(ref1=this.variable)?void 0:ref1.base)||this.variable,base instanceof Call&&!base.isNew?base.newInstance():this.isNew=!0,this.needsUpdatedStartLocation=!0,this}},{key:"unfoldSoak",value:function unfoldSoak(o){var call,ifn,j,left,len1,list,ref1,rite;if(this.soak){if(this.variable instanceof Super)left=new Literal(this.variable.compile(o)),rite=new Value(left),null==this.variable.accessor&&this.variable.error("Unsupported reference to 'super'");else{if(ifn=_unfoldSoak(o,this,"variable"))return ifn;var _cacheReference=new Value(this.variable).cacheReference(o),_cacheReference2=_slicedToArray(_cacheReference,2);left=_cacheReference2[0],rite=_cacheReference2[1]}return rite=new Call(rite,this.args),rite.isNew=this.isNew,left=new Literal("typeof ".concat(left.compile(o)," === \"function\"")),new If(left,new Value(rite),{soak:!0})}for(call=this,list=[];;){if(call.variable instanceof Call){list.push(call),call=call.variable;continue}if(!(call.variable instanceof Value))break;if(list.push(call),!((call=call.variable.base)instanceof Call))break}for(ref1=list.reverse(),j=0,len1=ref1.length;j<len1;j++)call=ref1[j],ifn&&(call.variable instanceof Call?call.variable=ifn:call.variable.base=ifn),ifn=_unfoldSoak(o,call,"variable");return ifn}},{key:"compileNode",value:function compileNode(o){var _fragments10,_fragments11,arg,argCode,argIndex,cache,compiledArgs,fragments,j,len1,ref1,ref2,ref3,ref4,varAccess;if(this.checkForNewSuper(),null!=(ref1=this.variable)&&(ref1.front=this.front),compiledArgs=[],varAccess=(null==(ref2=this.variable)||null==(ref3=ref2.properties)?void 0:ref3[0])instanceof Access,argCode=function(){var j,len1,ref4,results1;for(ref4=this.args||[],results1=[],(j=0,len1=ref4.length);j<len1;j++)arg=ref4[j],arg instanceof Code&&results1.push(arg);return results1}.call(this),0<argCode.length&&varAccess&&!this.variable.base.cached){var _this$variable$base$c=this.variable.base.cache(o,LEVEL_ACCESS,function(){return!1}),_this$variable$base$c2=_slicedToArray(_this$variable$base$c,1);cache=_this$variable$base$c2[0],this.variable.base.cached=cache}for(ref4=this.args,argIndex=j=0,len1=ref4.length;j<len1;argIndex=++j){var _compiledArgs;arg=ref4[argIndex],argIndex&&compiledArgs.push(this.makeCode(", ")),(_compiledArgs=compiledArgs).push.apply(_compiledArgs,_toConsumableArray(arg.compileToFragments(o,LEVEL_LIST)))}return fragments=[],this.isNew&&fragments.push(this.makeCode("new ")),(_fragments10=fragments).push.apply(_fragments10,_toConsumableArray(this.variable.compileToFragments(o,LEVEL_ACCESS))),(_fragments11=fragments).push.apply(_fragments11,[this.makeCode("(")].concat(_toConsumableArray(compiledArgs),[this.makeCode(")")])),fragments}},{key:"checkForNewSuper",value:function checkForNewSuper(){if(this.isNew&&this.variable instanceof Super)return this.variable.error("Unsupported reference to 'super'")}},{key:"containsSoak",value:function containsSoak(){var ref1;return!!this.soak||null!=(ref1=this.variable)&&"function"==typeof ref1.containsSoak&&ref1.containsSoak()}},{key:"astNode",value:function astNode(o){var ref1;return this.soak&&this.variable instanceof Super&&(null==(ref1=o.scope.namedMethod())?void 0:ref1.ctor)&&this.variable.error("Unsupported reference to 'super'"),this.checkForNewSuper(),_get(_getPrototypeOf(Call.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(){return this.isNew?"NewExpression":this.containsSoak()?"OptionalCallExpression":"CallExpression"}},{key:"astProperties",value:function astProperties(o){var arg;return{callee:this.variable.ast(o,LEVEL_ACCESS),arguments:function(){var j,len1,ref1,results1;for(ref1=this.args,results1=[],(j=0,len1=ref1.length);j<len1;j++)arg=ref1[j],results1.push(arg.ast(o,LEVEL_LIST));return results1}.call(this),optional:!!this.soak,implicit:!!this.implicit}}}]),Call}(Base);return Call.prototype.children=["variable","args"],Call}.call(this),exports.SuperCall=SuperCall=function(){var SuperCall=function(_Call){"use strict";function SuperCall(){return _classCallCheck(this,SuperCall),_possibleConstructorReturn(this,_getPrototypeOf(SuperCall).apply(this,arguments))}return _inherits(SuperCall,_Call),_createClass(SuperCall,[{key:"isStatement",value:function isStatement(o){var ref1;return(null==(ref1=this.expressions)?void 0:ref1.length)&&o.level===LEVEL_TOP}},{key:"compileNode",value:function compileNode(o){var ref,ref1,replacement,superCall;if(null==(ref1=this.expressions)||!ref1.length)return _get(_getPrototypeOf(SuperCall.prototype),"compileNode",this).call(this,o);if(superCall=new Literal(fragmentsToText(_get(_getPrototypeOf(SuperCall.prototype),"compileNode",this).call(this,o))),replacement=new Block(this.expressions.slice()),o.level>LEVEL_TOP){var _superCall$cache=superCall.cache(o,null,YES),_superCall$cache2=_slicedToArray(_superCall$cache,2);superCall=_superCall$cache2[0],ref=_superCall$cache2[1],replacement.push(ref)}return replacement.unshift(superCall),replacement.compileToFragments(o,o.level===LEVEL_TOP?o.level:LEVEL_LIST)}}]),SuperCall}(Call);return SuperCall.prototype.children=Call.prototype.children.concat(["expressions"]),SuperCall}.call(this),exports.Super=Super=function(){var Super=function(_Base19){"use strict";function Super(accessor,superLiteral){var _this36;return _classCallCheck(this,Super),_this36=_possibleConstructorReturn(this,_getPrototypeOf(Super).call(this)),_this36.accessor=accessor,_this36.superLiteral=superLiteral,_this36}return _inherits(Super,_Base19),_createClass(Super,[{key:"compileNode",value:function compileNode(o){var fragments,method,name,nref,ref1,ref2,salvagedComments,variable;if(this.checkInInstanceMethod(o),method=o.scope.namedMethod(),null==method.ctor&&null==this.accessor){var _method=method;name=_method.name,variable=_method.variable,(name.shouldCache()||name instanceof Index&&name.index.isAssignable())&&(nref=new IdentifierLiteral(o.scope.parent.freeVariable("name")),name.index=new Assign(nref,name.index)),this.accessor=null==nref?name:new Index(nref)}return(null==(ref1=this.accessor)||null==(ref2=ref1.name)?void 0:ref2.comments)&&(salvagedComments=this.accessor.name.comments,delete this.accessor.name.comments),fragments=new Value(new Literal("super"),this.accessor?[this.accessor]:[]).compileToFragments(o),salvagedComments&&attachCommentsToNode(salvagedComments,this.accessor.name),fragments}},{key:"checkInInstanceMethod",value:function checkInInstanceMethod(o){var method;if(method=o.scope.namedMethod(),null==method||!method.isMethod)return this.error("cannot use super outside of an instance method")}},{key:"astNode",value:function astNode(o){var ref1;return this.checkInInstanceMethod(o),null==this.accessor?_get(_getPrototypeOf(Super.prototype),"astNode",this).call(this,o):new Value(new Super().withLocationDataFrom(null==(ref1=this.superLiteral)?this:ref1),[this.accessor]).withLocationDataFrom(this).ast(o)}}]),Super}(Base);return Super.prototype.children=["accessor"],Super}.call(this),exports.RegexWithInterpolations=RegexWithInterpolations=function(){var RegexWithInterpolations=function(_Base20){"use strict";function RegexWithInterpolations(call1){var _ref37=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_ref37$heregexComment=_ref37.heregexCommentTokens,heregexCommentTokens=void 0===_ref37$heregexComment?[]:_ref37$heregexComment,_this37;return _classCallCheck(this,RegexWithInterpolations),_this37=_possibleConstructorReturn(this,_getPrototypeOf(RegexWithInterpolations).call(this)),_this37.call=call1,_this37.heregexCommentTokens=heregexCommentTokens,_this37}return _inherits(RegexWithInterpolations,_Base20),_createClass(RegexWithInterpolations,[{key:"compileNode",value:function compileNode(o){return this.call.compileNode(o)}},{key:"astType",value:function astType(){return"InterpolatedRegExpLiteral"}},{key:"astProperties",value:function astProperties(o){var heregexCommentToken,ref1,ref2;return{interpolatedPattern:this.call.args[0].ast(o),flags:null==(ref1=null==(ref2=this.call.args[1])?void 0:ref2.unwrap().originalValue)?"":ref1,comments:function(){var j,len1,ref3,results1;for(ref3=this.heregexCommentTokens,results1=[],(j=0,len1=ref3.length);j<len1;j++)heregexCommentToken=ref3[j],heregexCommentToken.here?results1.push(new HereComment(heregexCommentToken).ast(o)):results1.push(new LineComment(heregexCommentToken).ast(o));return results1}.call(this)}}}]),RegexWithInterpolations}(Base);return RegexWithInterpolations.prototype.children=["call"],RegexWithInterpolations}.call(this),exports.TaggedTemplateCall=TaggedTemplateCall=function(_Call2){"use strict";function TaggedTemplateCall(variable,arg,soak){return _classCallCheck(this,TaggedTemplateCall),arg instanceof StringLiteral&&(arg=StringWithInterpolations.fromStringLiteral(arg)),_possibleConstructorReturn(this,_getPrototypeOf(TaggedTemplateCall).call(this,variable,[arg],soak))}return _inherits(TaggedTemplateCall,_Call2),_createClass(TaggedTemplateCall,[{key:"compileNode",value:function compileNode(o){return this.variable.compileToFragments(o,LEVEL_ACCESS).concat(this.args[0].compileToFragments(o,LEVEL_LIST))}},{key:"astType",value:function astType(){return"TaggedTemplateExpression"}},{key:"astProperties",value:function astProperties(o){return{tag:this.variable.ast(o,LEVEL_ACCESS),quasi:this.args[0].ast(o,LEVEL_LIST)}}}]),TaggedTemplateCall}(Call),exports.Extends=Extends=function(){var Extends=function(_Base21){"use strict";function Extends(child1,parent1){var _this38;return _classCallCheck(this,Extends),_this38=_possibleConstructorReturn(this,_getPrototypeOf(Extends).call(this)),_this38.child=child1,_this38.parent=parent1,_this38}return _inherits(Extends,_Base21),_createClass(Extends,[{key:"compileToFragments",value:function compileToFragments(o){return new Call(new Value(new Literal(utility("extend",o))),[this.child,this.parent]).compileToFragments(o)}}]),Extends}(Base);return Extends.prototype.children=["child","parent"],Extends}.call(this),exports.Access=Access=function(){var Access=function(_Base22){"use strict";function Access(name1){var _ref38=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},soak1=_ref38.soak,shorthand=_ref38.shorthand,_this39;return _classCallCheck(this,Access),_this39=_possibleConstructorReturn(this,_getPrototypeOf(Access).call(this)),_this39.name=name1,_this39.soak=soak1,_this39.shorthand=shorthand,_this39}return _inherits(Access,_Base22),_createClass(Access,[{key:"compileToFragments",value:function compileToFragments(o){var name,node;return name=this.name.compileToFragments(o),node=this.name.unwrap(),node instanceof PropertyName?[this.makeCode(".")].concat(_toConsumableArray(name)):[this.makeCode("[")].concat(_toConsumableArray(name),[this.makeCode("]")])}},{key:"astNode",value:function astNode(o){return this.name.ast(o)}}]),Access}(Base);return Access.prototype.children=["name"],Access.prototype.shouldCache=NO,Access}.call(this),exports.Index=Index=function(){var Index=function(_Base23){"use strict";function Index(index1){var _this40;return _classCallCheck(this,Index),_this40=_possibleConstructorReturn(this,_getPrototypeOf(Index).call(this)),_this40.index=index1,_this40}return _inherits(Index,_Base23),_createClass(Index,[{key:"compileToFragments",value:function compileToFragments(o){return[].concat(this.makeCode("["),this.index.compileToFragments(o,LEVEL_PAREN),this.makeCode("]"))}},{key:"shouldCache",value:function shouldCache(){return this.index.shouldCache()}},{key:"astNode",value:function astNode(o){return this.index.ast(o)}}]),Index}(Base);return Index.prototype.children=["index"],Index}.call(this),exports.Range=Range=function(){var Range=function(_Base24){"use strict";function Range(from1,to1,tag){var _this41;return _classCallCheck(this,Range),_this41=_possibleConstructorReturn(this,_getPrototypeOf(Range).call(this)),_this41.from=from1,_this41.to=to1,_this41.exclusive="exclusive"===tag,_this41.equals=_this41.exclusive?"":"=",_this41}return _inherits(Range,_Base24),_createClass(Range,[{key:"compileVariables",value:function compileVariables(o){var shouldCache,step;o=merge(o,{top:!0}),shouldCache=del(o,"shouldCache");var _this$cacheToCodeFrag=this.cacheToCodeFragments(this.from.cache(o,LEVEL_LIST,shouldCache)),_this$cacheToCodeFrag2=_slicedToArray(_this$cacheToCodeFrag,2);this.fromC=_this$cacheToCodeFrag2[0],this.fromVar=_this$cacheToCodeFrag2[1];var _this$cacheToCodeFrag3=this.cacheToCodeFragments(this.to.cache(o,LEVEL_LIST,shouldCache)),_this$cacheToCodeFrag4=_slicedToArray(_this$cacheToCodeFrag3,2);if(this.toC=_this$cacheToCodeFrag4[0],this.toVar=_this$cacheToCodeFrag4[1],step=del(o,"step")){var _this$cacheToCodeFrag5=this.cacheToCodeFragments(step.cache(o,LEVEL_LIST,shouldCache)),_this$cacheToCodeFrag6=_slicedToArray(_this$cacheToCodeFrag5,2);this.step=_this$cacheToCodeFrag6[0],this.stepVar=_this$cacheToCodeFrag6[1]}return this.fromNum=this.from.isNumber()?parseNumber(this.fromVar):null,this.toNum=this.to.isNumber()?parseNumber(this.toVar):null,this.stepNum=(null==step?void 0:step.isNumber())?parseNumber(this.stepVar):null}},{key:"compileNode",value:function compileNode(o){var cond,condPart,from,gt,idx,idxName,known,lowerBound,lt,namedIndex,ref1,ref2,stepCond,stepNotZero,stepPart,to,upperBound,varPart;if(this.fromVar||this.compileVariables(o),!o.index)return this.compileArray(o);known=null!=this.fromNum&&null!=this.toNum,idx=del(o,"index"),idxName=del(o,"name"),namedIndex=idxName&&idxName!==idx,varPart=known&&!namedIndex?"var ".concat(idx," = ").concat(this.fromC):"".concat(idx," = ").concat(this.fromC),this.toC!==this.toVar&&(varPart+=", ".concat(this.toC)),this.step!==this.stepVar&&(varPart+=", ".concat(this.step)),lt="".concat(idx," <").concat(this.equals),gt="".concat(idx," >").concat(this.equals);var _ref39=[this.fromNum,this.toNum];return from=_ref39[0],to=_ref39[1],stepNotZero="".concat(null==(ref1=this.stepNum)?this.stepVar:ref1," !== 0"),stepCond="".concat(null==(ref2=this.stepNum)?this.stepVar:ref2," > 0"),lowerBound="".concat(lt," ").concat(known?to:this.toVar),upperBound="".concat(gt," ").concat(known?to:this.toVar),condPart=null==this.step?known?"".concat(from<=to?lt:gt," ").concat(to):"(".concat(this.fromVar," <= ").concat(this.toVar," ? ").concat(lowerBound," : ").concat(upperBound,")"):null!=this.stepNum&&0!==this.stepNum?0<this.stepNum?"".concat(lowerBound):"".concat(upperBound):"".concat(stepNotZero," && (").concat(stepCond," ? ").concat(lowerBound," : ").concat(upperBound,")"),cond=this.stepVar?"".concat(this.stepVar," > 0"):"".concat(this.fromVar," <= ").concat(this.toVar),stepPart=this.stepVar?"".concat(idx," += ").concat(this.stepVar):known?namedIndex?from<=to?"++".concat(idx):"--".concat(idx):from<=to?"".concat(idx,"++"):"".concat(idx,"--"):namedIndex?"".concat(cond," ? ++").concat(idx," : --").concat(idx):"".concat(cond," ? ").concat(idx,"++ : ").concat(idx,"--"),namedIndex&&(varPart="".concat(idxName," = ").concat(varPart)),namedIndex&&(stepPart="".concat(idxName," = ").concat(stepPart)),[this.makeCode("".concat(varPart,"; ").concat(condPart,"; ").concat(stepPart))]}},{key:"compileArray",value:function compileArray(o){var args,body,cond,hasArgs,i,idt,known,post,pre,range,ref1,result,vars;return(known=null!=this.fromNum&&null!=this.toNum,known&&20>=_Mathabs(this.fromNum-this.toNum))?(range=function(){for(var results1=[],j=ref1=this.fromNum,ref2=this.toNum;ref1<=ref2?j<=ref2:j>=ref2;ref1<=ref2?j++:j--)results1.push(j);return results1}.apply(this),this.exclusive&&range.pop(),[this.makeCode("[".concat(range.join(", "),"]"))]):(idt=this.tab+TAB,i=o.scope.freeVariable("i",{single:!0,reserve:!1}),result=o.scope.freeVariable("results",{reserve:!1}),pre="\n".concat(idt,"var ").concat(result," = [];"),known?(o.index=i,body=fragmentsToText(this.compileNode(o))):(vars="".concat(i," = ").concat(this.fromC)+(this.toC===this.toVar?"":", ".concat(this.toC)),cond="".concat(this.fromVar," <= ").concat(this.toVar),body="var ".concat(vars,"; ").concat(cond," ? ").concat(i," <").concat(this.equals," ").concat(this.toVar," : ").concat(i," >").concat(this.equals," ").concat(this.toVar,"; ").concat(cond," ? ").concat(i,"++ : ").concat(i,"--")),post="{ ".concat(result,".push(").concat(i,"); }\n").concat(idt,"return ").concat(result,";\n").concat(o.indent),hasArgs=function(node){return null==node?void 0:node.contains(isLiteralArguments)},(hasArgs(this.from)||hasArgs(this.to))&&(args=", arguments"),[this.makeCode("(function() {".concat(pre,"\n").concat(idt,"for (").concat(body,")").concat(post,"}).apply(this").concat(null==args?"":args,")"))])}},{key:"astProperties",value:function astProperties(o){var ref1,ref2,ref3,ref4;return{from:null==(ref1=null==(ref2=this.from)?void 0:ref2.ast(o))?null:ref1,to:null==(ref3=null==(ref4=this.to)?void 0:ref4.ast(o))?null:ref3,exclusive:this.exclusive}}}]),Range}(Base);return Range.prototype.children=["from","to"],Range}.call(this),exports.Slice=Slice=function(){var Slice=function(_Base25){"use strict";function Slice(range1){var _this42;return _classCallCheck(this,Slice),_this42=_possibleConstructorReturn(this,_getPrototypeOf(Slice).call(this)),_this42.range=range1,_this42}return _inherits(Slice,_Base25),_createClass(Slice,[{key:"compileNode",value:function compileNode(o){var _this$range=this.range,compiled,compiledText,from,fromCompiled,to,toStr;return to=_this$range.to,from=_this$range.from,(null==from?void 0:from.shouldCache())&&(from=new Value(new Parens(from))),(null==to?void 0:to.shouldCache())&&(to=new Value(new Parens(to))),fromCompiled=(null==from?void 0:from.compileToFragments(o,LEVEL_PAREN))||[this.makeCode("0")],to&&(compiled=to.compileToFragments(o,LEVEL_PAREN),compiledText=fragmentsToText(compiled),(this.range.exclusive||-1!=+compiledText)&&(toStr=", "+(this.range.exclusive?compiledText:to.isNumber()?"".concat(+compiledText+1):(compiled=to.compileToFragments(o,LEVEL_ACCESS),"+".concat(fragmentsToText(compiled)," + 1 || 9e9"))))),[this.makeCode(".slice(".concat(fragmentsToText(fromCompiled)).concat(toStr||"",")"))]}},{key:"astNode",value:function astNode(o){return this.range.ast(o)}}]),Slice}(Base);return Slice.prototype.children=["range"],Slice}.call(this),exports.Obj=Obj=function(){var Obj=function(_Base26){"use strict";function Obj(props){var generated=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],_this43;return _classCallCheck(this,Obj),_this43=_possibleConstructorReturn(this,_getPrototypeOf(Obj).call(this)),_this43.generated=generated,_this43.objects=_this43.properties=props||[],_this43}return _inherits(Obj,_Base26),_createClass(Obj,[{key:"isAssignable",value:function isAssignable(opts){var j,len1,message,prop,ref1,ref2;for(ref1=this.properties,j=0,len1=ref1.length;j<len1;j++)if(prop=ref1[j],message=isUnassignable(prop.unwrapAll().value),message&&prop.error(message),prop instanceof Assign&&"object"===prop.context&&!((null==(ref2=prop.value)?void 0:ref2.base)instanceof Arr)&&(prop=prop.value),!prop.isAssignable(opts))return!1;return!0}},{key:"shouldCache",value:function shouldCache(){return!this.isAssignable()}},{key:"hasSplat",value:function hasSplat(){var j,len1,prop,ref1;for(ref1=this.properties,j=0,len1=ref1.length;j<len1;j++)if(prop=ref1[j],prop instanceof Splat)return!0;return!1}},{key:"reorderProperties",value:function reorderProperties(){var props,splatProp,splatProps;return props=this.properties,splatProps=this.getAndCheckSplatProps(),splatProp=props.splice(splatProps[0],1),this.objects=this.properties=[].concat(props,splatProp)}},{key:"compileNode",value:function compileNode(o){var answer,i,idt,indent,isCompact,j,join,k,key,l,lastNode,len1,len2,len3,node,prop,props,ref1,value;if(this.hasSplat()&&this.lhs&&this.reorderProperties(),props=this.properties,this.generated)for(j=0,len1=props.length;j<len1;j++)node=props[j],node instanceof Value&&node.error("cannot have an implicit value in an implicit object");for(idt=o.indent+=TAB,lastNode=this.lastNode(this.properties),this.propagateLhs(),isCompact=!0,ref1=this.properties,(k=0,len2=ref1.length);k<len2;k++)prop=ref1[k],prop instanceof Assign&&"object"===prop.context&&(isCompact=!1);for(answer=[],answer.push(this.makeCode(isCompact?"":"\n")),(i=l=0,len3=props.length);l<len3;i=++l){var _answer;if(prop=props[i],join=i===props.length-1?"":isCompact?", ":prop===lastNode?"\n":",\n",indent=isCompact?"":idt,key=prop instanceof Assign&&"object"===prop.context?prop.variable:prop instanceof Assign?(this.lhs?void 0:prop.operatorToken.error("unexpected ".concat(prop.operatorToken.value)),prop.variable):prop,key instanceof Value&&key.hasProperties()&&(("object"===prop.context||!key["this"])&&key.error("invalid object key"),key=key.properties[0].name,prop=new Assign(key,prop,"object")),key===prop)if(prop.shouldCache()){var _prop$base$cache=prop.base.cache(o),_prop$base$cache2=_slicedToArray(_prop$base$cache,2);key=_prop$base$cache2[0],value=_prop$base$cache2[1],key instanceof IdentifierLiteral&&(key=new PropertyName(key.value)),prop=new Assign(key,value,"object")}else if(!(key instanceof Value&&key.base instanceof ComputedPropertyName))"function"==typeof prop.bareLiteral&&prop.bareLiteral(IdentifierLiteral)||prop instanceof Splat||(prop=new Assign(prop,prop,"object"));else if(prop.base.value.shouldCache()){var _prop$base$value$cach=prop.base.value.cache(o),_prop$base$value$cach2=_slicedToArray(_prop$base$value$cach,2);key=_prop$base$value$cach2[0],value=_prop$base$value$cach2[1],key instanceof IdentifierLiteral&&(key=new ComputedPropertyName(key.value)),prop=new Assign(key,value,"object")}else prop=new Assign(key,prop.base.value,"object");indent&&answer.push(this.makeCode(indent)),(_answer=answer).push.apply(_answer,_toConsumableArray(prop.compileToFragments(o,LEVEL_TOP))),join&&answer.push(this.makeCode(join))}return answer.push(this.makeCode(isCompact?"":"\n".concat(this.tab))),answer=this.wrapInBraces(answer),this.front?this.wrapInParentheses(answer):answer}},{key:"getAndCheckSplatProps",value:function getAndCheckSplatProps(){var i,prop,props,splatProps;if(this.hasSplat()&&this.lhs)return props=this.properties,splatProps=function(){var j,len1,results1;for(results1=[],i=j=0,len1=props.length;j<len1;i=++j)prop=props[i],prop instanceof Splat&&results1.push(i);return results1}(),1<(null==splatProps?void 0:splatProps.length)&&props[splatProps[1]].error("multiple spread elements are disallowed"),splatProps}},{key:"assigns",value:function assigns(name){var j,len1,prop,ref1;for(ref1=this.properties,j=0,len1=ref1.length;j<len1;j++)if(prop=ref1[j],prop.assigns(name))return!0;return!1}},{key:"eachName",value:function eachName(iterator){var j,len1,prop,ref1,results1;for(ref1=this.properties,results1=[],(j=0,len1=ref1.length);j<len1;j++)prop=ref1[j],prop instanceof Assign&&"object"===prop.context&&(prop=prop.value),prop=prop.unwrapAll(),null==prop.eachName?results1.push(void 0):results1.push(prop.eachName(iterator));return results1}},{key:"expandProperty",value:function expandProperty(property){var context,key,operatorToken,variable;return variable=property.variable,context=property.context,operatorToken=property.operatorToken,key=property instanceof Assign&&"object"===context?variable:property instanceof Assign?(this.lhs?void 0:operatorToken.error("unexpected ".concat(operatorToken.value)),variable):property,key instanceof Value&&key.hasProperties()?("object"!==context&&key["this"]||key.error("invalid object key"),property instanceof Assign?new ObjectProperty({fromAssign:property}):new ObjectProperty({key:property})):key===property?property instanceof Splat?property:new ObjectProperty({key:property}):new ObjectProperty({fromAssign:property})}},{key:"expandProperties",value:function expandProperties(){var j,len1,property,ref1,results1;for(ref1=this.properties,results1=[],(j=0,len1=ref1.length);j<len1;j++)property=ref1[j],results1.push(this.expandProperty(property));return results1}},{key:"propagateLhs",value:function propagateLhs(setLhs){var j,len1,property,ref1,results1,unwrappedValue,value;if(setLhs&&(this.lhs=!0),!!this.lhs){for(ref1=this.properties,results1=[],(j=0,len1=ref1.length);j<len1;j++)if(property=ref1[j],property instanceof Assign&&"object"===property.context){var _property2=property;value=_property2.value,unwrappedValue=value.unwrapAll(),unwrappedValue instanceof Arr||unwrappedValue instanceof Obj?results1.push(unwrappedValue.propagateLhs(!0)):unwrappedValue instanceof Assign?results1.push(unwrappedValue.nestedLhs=!0):results1.push(void 0)}else property instanceof Assign?results1.push(property.nestedLhs=!0):property instanceof Splat?results1.push(property.propagateLhs(!0)):results1.push(void 0);return results1}}},{key:"astNode",value:function astNode(o){return this.getAndCheckSplatProps(),_get(_getPrototypeOf(Obj.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(){return this.lhs?"ObjectPattern":"ObjectExpression"}},{key:"astProperties",value:function astProperties(o){var property;return{implicit:!!this.generated,properties:function(){var j,len1,ref1,results1;for(ref1=this.expandProperties(),results1=[],(j=0,len1=ref1.length);j<len1;j++)property=ref1[j],results1.push(property.ast(o));return results1}.call(this)}}}]),Obj}(Base);return Obj.prototype.children=["properties"],Obj}.call(this),exports.ObjectProperty=ObjectProperty=function(_Base27){"use strict";function ObjectProperty(_ref40){var key=_ref40.key,fromAssign=_ref40.fromAssign,_this44;_classCallCheck(this,ObjectProperty);var context,value;return _this44=_possibleConstructorReturn(this,_getPrototypeOf(ObjectProperty).call(this)),fromAssign?(_this44.key=fromAssign.variable,value=fromAssign.value,context=fromAssign.context,"object"===context?_this44.value=value:(_this44.value=fromAssign,_this44.shorthand=!0),_this44.locationData=fromAssign.locationData):(_this44.key=key,_this44.shorthand=!0,_this44.locationData=key.locationData),_this44}return _inherits(ObjectProperty,_Base27),_createClass(ObjectProperty,[{key:"astProperties",value:function astProperties(o){var isComputedPropertyName,keyAst,ref1,ref2;return isComputedPropertyName=this.key instanceof Value&&this.key.base instanceof ComputedPropertyName||this.key.unwrap()instanceof StringWithInterpolations,keyAst=this.key.ast(o,LEVEL_LIST),{key:(null==keyAst?void 0:keyAst.declaration)?Object.assign({},keyAst,{declaration:!1}):keyAst,value:null==(ref1=null==(ref2=this.value)?void 0:ref2.ast(o,LEVEL_LIST))?keyAst:ref1,shorthand:!!this.shorthand,computed:!!isComputedPropertyName,method:!1}}}]),ObjectProperty}(Base),exports.Arr=Arr=function(){var Arr=function(_Base28){"use strict";function Arr(objs){var lhs1=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],_this45;return _classCallCheck(this,Arr),_this45=_possibleConstructorReturn(this,_getPrototypeOf(Arr).call(this)),_this45.lhs=lhs1,_this45.objects=objs||[],_this45.propagateLhs(),_this45}return _inherits(Arr,_Base28),_createClass(Arr,[{key:"hasElision",value:function hasElision(){var j,len1,obj,ref1;for(ref1=this.objects,j=0,len1=ref1.length;j<len1;j++)if(obj=ref1[j],obj instanceof Elision)return!0;return!1}},{key:"isAssignable",value:function isAssignable(opts){var _ref41=null==opts?{}:opts,allowEmptyArray,allowExpansion,allowNontrailingSplat,i,j,len1,obj,ref1;allowExpansion=_ref41.allowExpansion,allowNontrailingSplat=_ref41.allowNontrailingSplat;var _ref41$allowEmptyArra=_ref41.allowEmptyArray;if(allowEmptyArray=void 0!==_ref41$allowEmptyArra&&_ref41$allowEmptyArra,!this.objects.length)return allowEmptyArray;for(ref1=this.objects,i=j=0,len1=ref1.length;j<len1;i=++j){if(obj=ref1[i],!allowNontrailingSplat&&obj instanceof Splat&&i+1!==this.objects.length)return!1;if(!(allowExpansion&&obj instanceof Expansion||obj.isAssignable(opts)&&(!obj.isAtomic||obj.isAtomic())))return!1}return!0}},{key:"shouldCache",value:function shouldCache(){return!this.isAssignable()}},{key:"compileNode",value:function compileNode(o){var answer,compiledObjs,fragment,fragmentIndex,fragmentIsElision,fragments,includesLineCommentsOnNonFirstElement,index,j,k,l,len1,len2,len3,len4,len5,obj,objIndex,olen,p,passedElision,q,ref1,ref2,unwrappedObj;if(!this.objects.length)return[this.makeCode("[]")];for(o.indent+=TAB,fragmentIsElision=function(_ref42){var _ref43=_slicedToArray(_ref42,1),fragment=_ref43[0];return"Elision"===fragment.type&&","===fragment.code.trim()},passedElision=!1,answer=[],ref1=this.objects,(objIndex=j=0,len1=ref1.length);j<len1;objIndex=++j)obj=ref1[objIndex],unwrappedObj=obj.unwrapAll(),unwrappedObj.comments&&0===unwrappedObj.comments.filter(function(comment){return!comment.here}).length&&(unwrappedObj.includeCommentFragments=YES);for(compiledObjs=function(){var k,len2,ref2,results1;for(ref2=this.objects,results1=[],(k=0,len2=ref2.length);k<len2;k++)obj=ref2[k],results1.push(obj.compileToFragments(o,LEVEL_LIST));return results1}.call(this),olen=compiledObjs.length,includesLineCommentsOnNonFirstElement=!1,(index=k=0,len2=compiledObjs.length);k<len2;index=++k){var _answer2;for(fragments=compiledObjs[index],l=0,len3=fragments.length;l<len3;l++)fragment=fragments[l],fragment.isHereComment?fragment.code=fragment.code.trim():0!==index&&!1===includesLineCommentsOnNonFirstElement&&hasLineComments(fragment)&&(includesLineCommentsOnNonFirstElement=!0);0!==index&&passedElision&&(!fragmentIsElision(fragments)||index===olen-1)&&answer.push(this.makeCode(", ")),passedElision=passedElision||!fragmentIsElision(fragments),(_answer2=answer).push.apply(_answer2,_toConsumableArray(fragments))}if(includesLineCommentsOnNonFirstElement||0<=indexOf.call(fragmentsToText(answer),"\n")){for(fragmentIndex=p=0,len4=answer.length;p<len4;fragmentIndex=++p)fragment=answer[fragmentIndex],fragment.isHereComment?fragment.code="".concat(multident(fragment.code,o.indent,!1),"\n").concat(o.indent):", "===fragment.code&&(null==fragment||!fragment.isElision)&&"StringLiteral"!==(ref2=fragment.type)&&"StringWithInterpolations"!==ref2&&(fragment.code=",\n".concat(o.indent));answer.unshift(this.makeCode("[\n".concat(o.indent))),answer.push(this.makeCode("\n".concat(this.tab,"]")))}else{for(q=0,len5=answer.length;q<len5;q++)fragment=answer[q],fragment.isHereComment&&(fragment.code="".concat(fragment.code," "));answer.unshift(this.makeCode("[")),answer.push(this.makeCode("]"))}return answer}},{key:"assigns",value:function assigns(name){var j,len1,obj,ref1;for(ref1=this.objects,j=0,len1=ref1.length;j<len1;j++)if(obj=ref1[j],obj.assigns(name))return!0;return!1}},{key:"eachName",value:function eachName(iterator){var j,len1,obj,ref1,results1;for(ref1=this.objects,results1=[],(j=0,len1=ref1.length);j<len1;j++)obj=ref1[j],obj=obj.unwrapAll(),results1.push(obj.eachName(iterator));return results1}},{key:"propagateLhs",value:function propagateLhs(setLhs){var j,len1,object,ref1,results1,unwrappedObject;if(setLhs&&(this.lhs=!0),!!this.lhs){for(ref1=this.objects,results1=[],(j=0,len1=ref1.length);j<len1;j++)object=ref1[j],(object instanceof Splat||object instanceof Expansion)&&(object.lhs=!0),unwrappedObject=object.unwrapAll(),unwrappedObject instanceof Arr||unwrappedObject instanceof Obj?results1.push(unwrappedObject.propagateLhs(!0)):unwrappedObject instanceof Assign?results1.push(unwrappedObject.nestedLhs=!0):results1.push(void 0);return results1}}},{key:"astType",value:function astType(){return this.lhs?"ArrayPattern":"ArrayExpression"}},{key:"astProperties",value:function astProperties(o){var object;return{elements:function(){var j,len1,ref1,results1;for(ref1=this.objects,results1=[],(j=0,len1=ref1.length);j<len1;j++)object=ref1[j],results1.push(object.ast(o,LEVEL_LIST));return results1}.call(this)}}}]),Arr}(Base);return Arr.prototype.children=["objects"],Arr}.call(this),exports.Class=Class=function(){var Class=function(_Base29){"use strict";function Class(variable1,parent1,body1){var _this46;return _classCallCheck(this,Class),_this46=_possibleConstructorReturn(this,_getPrototypeOf(Class).call(this)),_this46.variable=variable1,_this46.parent=parent1,_this46.body=body1,null==_this46.body&&(_this46.body=new Block,_this46.hasGeneratedBody=!0),_this46}return _inherits(Class,_Base29),_createClass(Class,[{key:"compileNode",value:function compileNode(o){var executableBody,node,parentName;if(this.name=this.determineName(),executableBody=this.walkBody(o),this.parent instanceof Value&&!this.parent.hasProperties()&&(parentName=this.parent.base.value),this.hasNameClash=null!=this.name&&this.name===parentName,node=this,executableBody||this.hasNameClash?node=new ExecutableClassBody(node,executableBody):null==this.name&&o.level===LEVEL_TOP&&(node=new Parens(node)),this.boundMethods.length&&this.parent&&(null==this.variable&&(this.variable=new IdentifierLiteral(o.scope.freeVariable("_class"))),null==this.variableRef)){var _this$variable$cache=this.variable.cache(o),_this$variable$cache2=_slicedToArray(_this$variable$cache,2);this.variable=_this$variable$cache2[0],this.variableRef=_this$variable$cache2[1]}this.variable&&(node=new Assign(this.variable,node,null,{moduleDeclaration:this.moduleDeclaration})),this.compileNode=this.compileClassDeclaration;try{return node.compileToFragments(o)}finally{delete this.compileNode}}},{key:"compileClassDeclaration",value:function compileClassDeclaration(o){var ref1,ref2,result;if((this.externalCtor||this.boundMethods.length)&&null==this.ctor&&(this.ctor=this.makeDefaultConstructor()),null!=(ref1=this.ctor)&&(ref1.noReturn=!0),this.boundMethods.length&&this.proxyBoundMethods(),o.indent+=TAB,result=[],result.push(this.makeCode("class ")),this.name&&result.push(this.makeCode(this.name)),null!=(null==(ref2=this.variable)?void 0:ref2.comments)&&this.compileCommentFragments(o,this.variable,result),this.name&&result.push(this.makeCode(" ")),this.parent){var _result;(_result=result).push.apply(_result,[this.makeCode("extends ")].concat(_toConsumableArray(this.parent.compileToFragments(o)),[this.makeCode(" ")]))}if(result.push(this.makeCode("{")),!this.body.isEmpty()){var _result2;this.body.spaced=!0,result.push(this.makeCode("\n")),(_result2=result).push.apply(_result2,_toConsumableArray(this.body.compileToFragments(o,LEVEL_TOP))),result.push(this.makeCode("\n".concat(this.tab)))}return result.push(this.makeCode("}")),result}},{key:"determineName",value:function determineName(){var _slice1$call13,_slice1$call14,message,name,node,ref1,tail;return this.variable?(ref1=this.variable.properties,_slice1$call13=slice1.call(ref1,-1),_slice1$call14=_slicedToArray(_slice1$call13,1),tail=_slice1$call14[0],_slice1$call13,node=tail?tail instanceof Access&&tail.name:this.variable.base,!(node instanceof IdentifierLiteral||node instanceof PropertyName))?null:(name=node.value,tail||(message=isUnassignable(name),message&&this.variable.error(message)),0<=indexOf.call(JS_FORBIDDEN,name)?"_".concat(name):name):null}},{key:"walkBody",value:function walkBody(o){var assign,end,executableBody,expression,expressions,exprs,i,initializer,initializerExpression,j,k,len1,len2,method,properties,pushSlice,ref1,start;for(this.ctor=null,this.boundMethods=[],executableBody=null,initializer=[],expressions=this.body.expressions,i=0,ref1=expressions.slice(),(j=0,len1=ref1.length);j<len1;j++)if(expression=ref1[j],expression instanceof Value&&expression.isObject(!0)){for(properties=expression.base.properties,exprs=[],end=0,start=0,pushSlice=function(){if(end>start)return exprs.push(new Value(new Obj(properties.slice(start,end),!0)))};assign=properties[end];)(initializerExpression=this.addInitializerExpression(assign,o))&&(pushSlice(),exprs.push(initializerExpression),initializer.push(initializerExpression),start=end+1),end++;pushSlice(),splice.apply(expressions,[i,i-i+1].concat(exprs)),exprs,i+=exprs.length}else(initializerExpression=this.addInitializerExpression(expression,o))&&(initializer.push(initializerExpression),expressions[i]=initializerExpression),i+=1;for(k=0,len2=initializer.length;k<len2;k++)method=initializer[k],method instanceof Code&&(method.ctor?(this.ctor&&method.error("Cannot define more than one constructor in a class"),this.ctor=method):method.isStatic&&method.bound?method.context=this.name:method.bound&&this.boundMethods.push(method));return o.compiling?initializer.length===expressions.length?void 0:(this.body.expressions=function(){var l,len3,results1;for(results1=[],l=0,len3=initializer.length;l<len3;l++)expression=initializer[l],results1.push(expression.hoist());return results1}(),new Block(expressions)):void 0}},{key:"addInitializerExpression",value:function addInitializerExpression(node,o){return node.unwrapAll()instanceof PassthroughLiteral?node:this.validInitializerMethod(node)?this.addInitializerMethod(node):!o.compiling&&this.validClassProperty(node)?this.addClassProperty(node):!o.compiling&&this.validClassPrototypeProperty(node)?this.addClassPrototypeProperty(node):null}},{key:"validInitializerMethod",value:function validInitializerMethod(node){return!!(node instanceof Assign&&node.value instanceof Code)&&(!("object"!==node.context||node.variable.hasProperties())||node.variable.looksStatic(this.name)&&(this.name||!node.value.bound))}},{key:"addInitializerMethod",value:function addInitializerMethod(assign){var isConstructor,method,methodName,operatorToken,variable;return variable=assign.variable,method=assign.value,operatorToken=assign.operatorToken,method.isMethod=!0,method.isStatic=variable.looksStatic(this.name),method.isStatic?method.name=variable.properties[0]:(methodName=variable.base,method.name=new(methodName.shouldCache()?Index:Access)(methodName),method.name.updateLocationDataIfMissing(methodName.locationData),isConstructor=methodName instanceof StringLiteral?"constructor"===methodName.originalValue:"constructor"===methodName.value,isConstructor&&(method.ctor=this.parent?"derived":"base"),method.bound&&method.ctor&&method.error("Cannot define a constructor as a bound (fat arrow) function")),method.operatorToken=operatorToken,method}},{key:"validClassProperty",value:function validClassProperty(node){return!!(node instanceof Assign)&&node.variable.looksStatic(this.name)}},{key:"addClassProperty",value:function addClassProperty(assign){var operatorToken,staticClassName,value,variable;variable=assign.variable,value=assign.value,operatorToken=assign.operatorToken;var _variable$looksStatic=variable.looksStatic(this.name);return staticClassName=_variable$looksStatic.staticClassName,new ClassProperty({name:variable.properties[0],isStatic:!0,staticClassName:staticClassName,value:value,operatorToken:operatorToken}).withLocationDataFrom(assign)}},{key:"validClassPrototypeProperty",value:function validClassPrototypeProperty(node){return!!(node instanceof Assign)&&"object"===node.context&&!node.variable.hasProperties()}},{key:"addClassPrototypeProperty",value:function addClassPrototypeProperty(assign){var value,variable;return variable=assign.variable,value=assign.value,new ClassPrototypeProperty({name:variable.base,value:value}).withLocationDataFrom(assign)}},{key:"makeDefaultConstructor",value:function makeDefaultConstructor(){var applyArgs,applyCtor,ctor;return ctor=this.addInitializerMethod(new Assign(new Value(new PropertyName("constructor")),new Code())),this.body.unshift(ctor),this.parent&&ctor.body.push(new SuperCall(new Super(),[new Splat(new IdentifierLiteral("arguments"))])),this.externalCtor&&(applyCtor=new Value(this.externalCtor,[new Access(new PropertyName("apply"))]),applyArgs=[new ThisLiteral,new IdentifierLiteral("arguments")],ctor.body.push(new Call(applyCtor,applyArgs)),ctor.body.makeReturn()),ctor}},{key:"proxyBoundMethods",value:function proxyBoundMethods(){var method,name;return this.ctor.thisAssignments=function(){var j,len1,ref1,results1;for(ref1=this.boundMethods,results1=[],(j=0,len1=ref1.length);j<len1;j++)method=ref1[j],this.parent&&(method.classVariable=this.variableRef),name=new Value(new ThisLiteral(),[method.name]),results1.push(new Assign(name,new Call(new Value(name,[new Access(new PropertyName("bind"))]),[new ThisLiteral])));return results1}.call(this),null}},{key:"declareName",value:function declareName(o){var alreadyDeclared,name,ref1;if((name=null==(ref1=this.variable)?void 0:ref1.unwrap())instanceof IdentifierLiteral)return alreadyDeclared=o.scope.find(name.value),name.isDeclaration=!alreadyDeclared}},{key:"isStatementAst",value:function isStatementAst(){return!0}},{key:"astNode",value:function astNode(o){var argumentsNode,jumpNode,ref1;return(jumpNode=this.body.jumps())&&jumpNode.error("Class bodies cannot contain pure statements"),(argumentsNode=this.body.contains(isLiteralArguments))&&argumentsNode.error("Class bodies shouldn't reference arguments"),this.declareName(o),this.name=this.determineName(),this.body.isClassBody=!0,this.hasGeneratedBody&&(this.body.locationData=zeroWidthLocationDataFromEndLocation(this.locationData)),this.walkBody(o),sniffDirectives(this.body.expressions),null!=(ref1=this.ctor)&&(ref1.noReturn=!0),_get(_getPrototypeOf(Class.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(o){return o.level===LEVEL_TOP?"ClassDeclaration":"ClassExpression"}},{key:"astProperties",value:function astProperties(o){var ref1,ref2,ref3,ref4;return{id:null==(ref1=null==(ref2=this.variable)?void 0:ref2.ast(o))?null:ref1,superClass:null==(ref3=null==(ref4=this.parent)?void 0:ref4.ast(o,LEVEL_PAREN))?null:ref3,body:this.body.ast(o,LEVEL_TOP)}}}]),Class}(Base);return Class.prototype.children=["variable","parent","body"],Class}.call(this),exports.ExecutableClassBody=ExecutableClassBody=function(){var ExecutableClassBody=function(_Base30){"use strict";function ExecutableClassBody(_class){var body1=1<arguments.length&&void 0!==arguments[1]?arguments[1]:new Block,_this47;return _classCallCheck(this,ExecutableClassBody),_this47=_possibleConstructorReturn(this,_getPrototypeOf(ExecutableClassBody).call(this)),_this47["class"]=_class,_this47.body=body1,_this47}return _inherits(ExecutableClassBody,_Base30),_createClass(ExecutableClassBody,[{key:"compileNode",value:function compileNode(o){var _this$body$expression,args,argumentsNode,directives,externalCtor,ident,jumpNode,klass,params,parent,ref1,wrapper;return(jumpNode=this.body.jumps())&&jumpNode.error("Class bodies cannot contain pure statements"),(argumentsNode=this.body.contains(isLiteralArguments))&&argumentsNode.error("Class bodies shouldn't reference arguments"),params=[],args=[new ThisLiteral],wrapper=new Code(params,this.body),klass=new Parens(new Call(new Value(wrapper,[new Access(new PropertyName("call"))]),args)),this.body.spaced=!0,o.classScope=wrapper.makeScope(o.scope),this.name=null==(ref1=this["class"].name)?o.classScope.freeVariable(this.defaultClassVariableName):ref1,ident=new IdentifierLiteral(this.name),directives=this.walkBody(),this.setContext(),this["class"].hasNameClash&&(parent=new IdentifierLiteral(o.classScope.freeVariable("superClass")),wrapper.params.push(new Param(parent)),args.push(this["class"].parent),this["class"].parent=parent),this.externalCtor&&(externalCtor=new IdentifierLiteral(o.classScope.freeVariable("ctor",{reserve:!1})),this["class"].externalCtor=externalCtor,this.externalCtor.variable.base=externalCtor),this.name===this["class"].name?this.body.expressions.unshift(this["class"]):this.body.expressions.unshift(new Assign(new IdentifierLiteral(this.name),this["class"])),(_this$body$expression=this.body.expressions).unshift.apply(_this$body$expression,_toConsumableArray(directives)),this.body.push(ident),klass.compileToFragments(o)}},{key:"walkBody",value:function walkBody(){var _this48=this,directives,expr,index;for(directives=[],index=0;(expr=this.body.expressions[index])&&!!(expr instanceof Value&&expr.isString());)if(expr.hoisted)index++;else{var _directives;(_directives=directives).push.apply(_directives,_toConsumableArray(this.body.expressions.splice(index,1)))}return this.traverseChildren(!1,function(child){var cont,i,j,len1,node,ref1;if(child instanceof Class||child instanceof HoistTarget)return!1;if(cont=!0,child instanceof Block){for(ref1=child.expressions,i=j=0,len1=ref1.length;j<len1;i=++j)node=ref1[i],node instanceof Value&&node.isObject(!0)?(cont=!1,child.expressions[i]=_this48.addProperties(node.base.properties)):node instanceof Assign&&node.variable.looksStatic(_this48.name)&&(node.value.isStatic=!0);child.expressions=flatten(child.expressions)}return cont}),directives}},{key:"setContext",value:function setContext(){var _this49=this;return this.body.traverseChildren(!1,function(node){return node instanceof ThisLiteral?node.value=_this49.name:node instanceof Code&&node.bound&&(node.isStatic||!node.name)?node.context=_this49.name:void 0})}},{key:"addProperties",value:function addProperties(assigns){var assign,base,name,prototype,result,value,variable;return result=function(){var j,len1,results1;for(results1=[],j=0,len1=assigns.length;j<len1;j++)assign=assigns[j],variable=assign.variable,base=null==variable?void 0:variable.base,value=assign.value,delete assign.context,"constructor"===base.value?(value instanceof Code&&base.error("constructors must be defined at the top level of a class body"),assign=this.externalCtor=new Assign(new Value(),value)):assign.variable["this"]?assign.value instanceof Code&&(assign.value.isStatic=!0):(name=base instanceof ComputedPropertyName?new Index(base.value):new(base.shouldCache()?Index:Access)(base),prototype=new Access(new PropertyName("prototype")),variable=new Value(new ThisLiteral(),[prototype,name]),assign.variable=variable),results1.push(assign);return results1}.call(this),compact(result)}}]),ExecutableClassBody}(Base);return ExecutableClassBody.prototype.children=["class","body"],ExecutableClassBody.prototype.defaultClassVariableName="_Class",ExecutableClassBody}.call(this),exports.ClassProperty=ClassProperty=function(){var ClassProperty=function(_Base31){"use strict";function ClassProperty(_ref44){var name1=_ref44.name,isStatic=_ref44.isStatic,staticClassName1=_ref44.staticClassName,value1=_ref44.value,operatorToken1=_ref44.operatorToken,_this50;return _classCallCheck(this,ClassProperty),_this50=_possibleConstructorReturn(this,_getPrototypeOf(ClassProperty).call(this)),_this50.name=name1,_this50.isStatic=isStatic,_this50.staticClassName=staticClassName1,_this50.value=value1,_this50.operatorToken=operatorToken1,_this50}return _inherits(ClassProperty,_Base31),_createClass(ClassProperty,[{key:"astProperties",value:function astProperties(o){var ref1,ref2,ref3,ref4;return{key:this.name.ast(o,LEVEL_LIST),value:this.value.ast(o,LEVEL_LIST),static:!!this.isStatic,computed:this.name instanceof Index||this.name instanceof ComputedPropertyName,operator:null==(ref1=null==(ref2=this.operatorToken)?void 0:ref2.value)?"=":ref1,staticClassName:null==(ref3=null==(ref4=this.staticClassName)?void 0:ref4.ast(o))?null:ref3}}}]),ClassProperty}(Base);return ClassProperty.prototype.children=["name","value","staticClassName"],ClassProperty.prototype.isStatement=YES,ClassProperty}.call(this),exports.ClassPrototypeProperty=ClassPrototypeProperty=function(){var ClassPrototypeProperty=function(_Base32){"use strict";function ClassPrototypeProperty(_ref45){var name1=_ref45.name,value1=_ref45.value,_this51;return _classCallCheck(this,ClassPrototypeProperty),_this51=_possibleConstructorReturn(this,_getPrototypeOf(ClassPrototypeProperty).call(this)),_this51.name=name1,_this51.value=value1,_this51}return _inherits(ClassPrototypeProperty,_Base32),_createClass(ClassPrototypeProperty,[{key:"astProperties",value:function astProperties(o){return{key:this.name.ast(o,LEVEL_LIST),value:this.value.ast(o,LEVEL_LIST),computed:this.name instanceof ComputedPropertyName||this.name instanceof StringWithInterpolations}}}]),ClassPrototypeProperty}(Base);return ClassPrototypeProperty.prototype.children=["name","value"],ClassPrototypeProperty.prototype.isStatement=YES,ClassPrototypeProperty}.call(this),exports.ModuleDeclaration=ModuleDeclaration=function(){var ModuleDeclaration=function(_Base33){"use strict";function ModuleDeclaration(clause,source1){var _this52;return _classCallCheck(this,ModuleDeclaration),_this52=_possibleConstructorReturn(this,_getPrototypeOf(ModuleDeclaration).call(this)),_this52.clause=clause,_this52.source=source1,_this52.checkSource(),_this52}return _inherits(ModuleDeclaration,_Base33),_createClass(ModuleDeclaration,[{key:"checkSource",value:function checkSource(){if(null!=this.source&&this.source instanceof StringWithInterpolations)return this.source.error("the name of the module to be imported from must be an uninterpolated string")}},{key:"checkScope",value:function checkScope(o,moduleDeclarationType){if(0!==o.indent.length)return this.error("".concat(moduleDeclarationType," statements must be at top-level scope"))}}]),ModuleDeclaration}(Base);return ModuleDeclaration.prototype.children=["clause","source"],ModuleDeclaration.prototype.isStatement=YES,ModuleDeclaration.prototype.jumps=THIS,ModuleDeclaration.prototype.makeReturn=THIS,ModuleDeclaration}.call(this),exports.ImportDeclaration=ImportDeclaration=function(_ModuleDeclaration){"use strict";function ImportDeclaration(){return _classCallCheck(this,ImportDeclaration),_possibleConstructorReturn(this,_getPrototypeOf(ImportDeclaration).apply(this,arguments))}return _inherits(ImportDeclaration,_ModuleDeclaration),_createClass(ImportDeclaration,[{key:"compileNode",value:function compileNode(o){var code,ref1;if(this.checkScope(o,"import"),o.importedSymbols=[],code=[],code.push(this.makeCode("".concat(this.tab,"import "))),null!=this.clause){var _code;(_code=code).push.apply(_code,_toConsumableArray(this.clause.compileNode(o)))}return null!=(null==(ref1=this.source)?void 0:ref1.value)&&(null!==this.clause&&code.push(this.makeCode(" from ")),code.push(this.makeCode(this.source.value))),code.push(this.makeCode(";")),code}},{key:"astNode",value:function astNode(o){return o.importedSymbols=[],_get(_getPrototypeOf(ImportDeclaration.prototype),"astNode",this).call(this,o)}},{key:"astProperties",value:function astProperties(o){var ref1,ref2,ret;return ret={specifiers:null==(ref1=null==(ref2=this.clause)?void 0:ref2.ast(o))?[]:ref1,source:this.source.ast(o)},this.clause&&(ret.importKind="value"),ret}}]),ImportDeclaration}(ModuleDeclaration),exports.ImportClause=ImportClause=function(){var ImportClause=function(_Base34){"use strict";function ImportClause(defaultBinding,namedImports){var _this53;return _classCallCheck(this,ImportClause),_this53=_possibleConstructorReturn(this,_getPrototypeOf(ImportClause).call(this)),_this53.defaultBinding=defaultBinding,_this53.namedImports=namedImports,_this53}return _inherits(ImportClause,_Base34),_createClass(ImportClause,[{key:"compileNode",value:function compileNode(o){var code;if(code=[],null!=this.defaultBinding){var _code2;(_code2=code).push.apply(_code2,_toConsumableArray(this.defaultBinding.compileNode(o))),null!=this.namedImports&&code.push(this.makeCode(", "))}if(null!=this.namedImports){var _code3;(_code3=code).push.apply(_code3,_toConsumableArray(this.namedImports.compileNode(o)))}return code}},{key:"astNode",value:function astNode(o){var ref1,ref2;return compact(flatten([null==(ref1=this.defaultBinding)?void 0:ref1.ast(o),null==(ref2=this.namedImports)?void 0:ref2.ast(o)]))}}]),ImportClause}(Base);return ImportClause.prototype.children=["defaultBinding","namedImports"],ImportClause}.call(this),exports.ExportDeclaration=ExportDeclaration=function(_ModuleDeclaration2){"use strict";function ExportDeclaration(){return _classCallCheck(this,ExportDeclaration),_possibleConstructorReturn(this,_getPrototypeOf(ExportDeclaration).apply(this,arguments))}return _inherits(ExportDeclaration,_ModuleDeclaration2),_createClass(ExportDeclaration,[{key:"compileNode",value:function compileNode(o){var code,ref1;return this.checkScope(o,"export"),this.checkForAnonymousClassExport(),code=[],code.push(this.makeCode("".concat(this.tab,"export "))),this instanceof ExportDefaultDeclaration&&code.push(this.makeCode("default ")),!(this instanceof ExportDefaultDeclaration)&&(this.clause instanceof Assign||this.clause instanceof Class)&&(code.push(this.makeCode("var ")),this.clause.moduleDeclaration="export"),code=null!=this.clause.body&&this.clause.body instanceof Block?code.concat(this.clause.compileToFragments(o,LEVEL_TOP)):code.concat(this.clause.compileNode(o)),null!=(null==(ref1=this.source)?void 0:ref1.value)&&code.push(this.makeCode(" from ".concat(this.source.value))),code.push(this.makeCode(";")),code}},{key:"checkForAnonymousClassExport",value:function checkForAnonymousClassExport(){if(!(this instanceof ExportDefaultDeclaration)&&this.clause instanceof Class&&!this.clause.variable)return this.clause.error("anonymous classes cannot be exported")}},{key:"astNode",value:function astNode(o){return this.checkForAnonymousClassExport(),_get(_getPrototypeOf(ExportDeclaration.prototype),"astNode",this).call(this,o)}}]),ExportDeclaration}(ModuleDeclaration),exports.ExportNamedDeclaration=ExportNamedDeclaration=function(_ExportDeclaration){"use strict";function ExportNamedDeclaration(){return _classCallCheck(this,ExportNamedDeclaration),_possibleConstructorReturn(this,_getPrototypeOf(ExportNamedDeclaration).apply(this,arguments))}return _inherits(ExportNamedDeclaration,_ExportDeclaration),_createClass(ExportNamedDeclaration,[{key:"astProperties",value:function astProperties(o){var clauseAst,ref1,ref2,ret;return ret={source:null==(ref1=null==(ref2=this.source)?void 0:ref2.ast(o))?null:ref1,exportKind:"value"},clauseAst=this.clause.ast(o),this.clause instanceof ExportSpecifierList?(ret.specifiers=clauseAst,ret.declaration=null):(ret.specifiers=[],ret.declaration=clauseAst),ret}}]),ExportNamedDeclaration}(ExportDeclaration),exports.ExportDefaultDeclaration=ExportDefaultDeclaration=function(_ExportDeclaration2){"use strict";function ExportDefaultDeclaration(){return _classCallCheck(this,ExportDefaultDeclaration),_possibleConstructorReturn(this,_getPrototypeOf(ExportDefaultDeclaration).apply(this,arguments))}return _inherits(ExportDefaultDeclaration,_ExportDeclaration2),_createClass(ExportDefaultDeclaration,[{key:"astProperties",value:function astProperties(o){return{declaration:this.clause.ast(o)}}}]),ExportDefaultDeclaration}(ExportDeclaration),exports.ExportAllDeclaration=ExportAllDeclaration=function(_ExportDeclaration3){"use strict";function ExportAllDeclaration(){return _classCallCheck(this,ExportAllDeclaration),_possibleConstructorReturn(this,_getPrototypeOf(ExportAllDeclaration).apply(this,arguments))}return _inherits(ExportAllDeclaration,_ExportDeclaration3),_createClass(ExportAllDeclaration,[{key:"astProperties",value:function astProperties(o){return{source:this.source.ast(o),exportKind:"value"}}}]),ExportAllDeclaration}(ExportDeclaration),exports.ModuleSpecifierList=ModuleSpecifierList=function(){var ModuleSpecifierList=function(_Base35){"use strict";function ModuleSpecifierList(specifiers){var _this54;return _classCallCheck(this,ModuleSpecifierList),_this54=_possibleConstructorReturn(this,_getPrototypeOf(ModuleSpecifierList).call(this)),_this54.specifiers=specifiers,_this54}return _inherits(ModuleSpecifierList,_Base35),_createClass(ModuleSpecifierList,[{key:"compileNode",value:function compileNode(o){var code,compiledList,fragments,index,j,len1,specifier;if(code=[],o.indent+=TAB,compiledList=function(){var j,len1,ref1,results1;for(ref1=this.specifiers,results1=[],(j=0,len1=ref1.length);j<len1;j++)specifier=ref1[j],results1.push(specifier.compileToFragments(o,LEVEL_LIST));return results1}.call(this),0!==this.specifiers.length){for(code.push(this.makeCode("{\n".concat(o.indent))),index=j=0,len1=compiledList.length;j<len1;index=++j){var _code4;fragments=compiledList[index],index&&code.push(this.makeCode(",\n".concat(o.indent))),(_code4=code).push.apply(_code4,_toConsumableArray(fragments))}code.push(this.makeCode("\n}"))}else code.push(this.makeCode("{}"));return code}},{key:"astNode",value:function astNode(o){var j,len1,ref1,results1,specifier;for(ref1=this.specifiers,results1=[],(j=0,len1=ref1.length);j<len1;j++)specifier=ref1[j],results1.push(specifier.ast(o));return results1}}]),ModuleSpecifierList}(Base);return ModuleSpecifierList.prototype.children=["specifiers"],ModuleSpecifierList}.call(this),exports.ImportSpecifierList=ImportSpecifierList=function(_ModuleSpecifierList){"use strict";function ImportSpecifierList(){return _classCallCheck(this,ImportSpecifierList),_possibleConstructorReturn(this,_getPrototypeOf(ImportSpecifierList).apply(this,arguments))}return _inherits(ImportSpecifierList,_ModuleSpecifierList),ImportSpecifierList}(ModuleSpecifierList),exports.ExportSpecifierList=ExportSpecifierList=function(_ModuleSpecifierList2){"use strict";function ExportSpecifierList(){return _classCallCheck(this,ExportSpecifierList),_possibleConstructorReturn(this,_getPrototypeOf(ExportSpecifierList).apply(this,arguments))}return _inherits(ExportSpecifierList,_ModuleSpecifierList2),ExportSpecifierList}(ModuleSpecifierList),exports.ModuleSpecifier=ModuleSpecifier=function(){var ModuleSpecifier=function(_Base36){"use strict";function ModuleSpecifier(original,alias,moduleDeclarationType1){var _this55;_classCallCheck(this,ModuleSpecifier);var ref1,ref2;if(_this55=_possibleConstructorReturn(this,_getPrototypeOf(ModuleSpecifier).call(this)),_this55.original=original,_this55.alias=alias,_this55.moduleDeclarationType=moduleDeclarationType1,_this55.original.comments||(null==(ref1=_this55.alias)?void 0:ref1.comments)){if(_this55.comments=[],_this55.original.comments){var _this55$comments;(_this55$comments=_this55.comments).push.apply(_this55$comments,_toConsumableArray(_this55.original.comments))}if(null==(ref2=_this55.alias)?void 0:ref2.comments){var _this55$comments2;(_this55$comments2=_this55.comments).push.apply(_this55$comments2,_toConsumableArray(_this55.alias.comments))}}return _this55.identifier=null==_this55.alias?_this55.original.value:_this55.alias.value,_this55}return _inherits(ModuleSpecifier,_Base36),_createClass(ModuleSpecifier,[{key:"compileNode",value:function compileNode(o){var code;return this.addIdentifierToScope(o),code=[],code.push(this.makeCode(this.original.value)),null!=this.alias&&code.push(this.makeCode(" as ".concat(this.alias.value))),code}},{key:"addIdentifierToScope",value:function addIdentifierToScope(o){return o.scope.find(this.identifier,this.moduleDeclarationType)}},{key:"astNode",value:function astNode(o){return this.addIdentifierToScope(o),_get(_getPrototypeOf(ModuleSpecifier.prototype),"astNode",this).call(this,o)}}]),ModuleSpecifier}(Base);return ModuleSpecifier.prototype.children=["original","alias"],ModuleSpecifier}.call(this),exports.ImportSpecifier=ImportSpecifier=function(_ModuleSpecifier){"use strict";function ImportSpecifier(imported,local){return _classCallCheck(this,ImportSpecifier),_possibleConstructorReturn(this,_getPrototypeOf(ImportSpecifier).call(this,imported,local,"import"))}return _inherits(ImportSpecifier,_ModuleSpecifier),_createClass(ImportSpecifier,[{key:"addIdentifierToScope",value:function addIdentifierToScope(o){var ref1;return(ref1=this.identifier,0<=indexOf.call(o.importedSymbols,ref1))||o.scope.check(this.identifier)?this.error("'".concat(this.identifier,"' has already been declared")):o.importedSymbols.push(this.identifier),_get(_getPrototypeOf(ImportSpecifier.prototype),"addIdentifierToScope",this).call(this,o)}},{key:"astProperties",value:function astProperties(o){var originalAst,ref1,ref2;return originalAst=this.original.ast(o),{imported:originalAst,local:null==(ref1=null==(ref2=this.alias)?void 0:ref2.ast(o))?originalAst:ref1,importKind:null}}}]),ImportSpecifier}(ModuleSpecifier),exports.ImportDefaultSpecifier=ImportDefaultSpecifier=function(_ImportSpecifier){"use strict";function ImportDefaultSpecifier(){return _classCallCheck(this,ImportDefaultSpecifier),_possibleConstructorReturn(this,_getPrototypeOf(ImportDefaultSpecifier).apply(this,arguments))}return _inherits(ImportDefaultSpecifier,_ImportSpecifier),_createClass(ImportDefaultSpecifier,[{key:"astProperties",value:function astProperties(o){return{local:this.original.ast(o)}}}]),ImportDefaultSpecifier}(ImportSpecifier),exports.ImportNamespaceSpecifier=ImportNamespaceSpecifier=function(_ImportSpecifier2){"use strict";function ImportNamespaceSpecifier(){return _classCallCheck(this,ImportNamespaceSpecifier),_possibleConstructorReturn(this,_getPrototypeOf(ImportNamespaceSpecifier).apply(this,arguments))}return _inherits(ImportNamespaceSpecifier,_ImportSpecifier2),_createClass(ImportNamespaceSpecifier,[{key:"astProperties",value:function astProperties(o){return{local:this.alias.ast(o)}}}]),ImportNamespaceSpecifier}(ImportSpecifier),exports.ExportSpecifier=ExportSpecifier=function(_ModuleSpecifier2){"use strict";function ExportSpecifier(local,exported){return _classCallCheck(this,ExportSpecifier),_possibleConstructorReturn(this,_getPrototypeOf(ExportSpecifier).call(this,local,exported,"export"))}return _inherits(ExportSpecifier,_ModuleSpecifier2),_createClass(ExportSpecifier,[{key:"astProperties",value:function astProperties(o){var originalAst,ref1,ref2;return originalAst=this.original.ast(o),{local:originalAst,exported:null==(ref1=null==(ref2=this.alias)?void 0:ref2.ast(o))?originalAst:ref1}}}]),ExportSpecifier}(ModuleSpecifier),exports.DynamicImport=DynamicImport=function(_Base37){"use strict";function DynamicImport(){return _classCallCheck(this,DynamicImport),_possibleConstructorReturn(this,_getPrototypeOf(DynamicImport).apply(this,arguments))}return _inherits(DynamicImport,_Base37),_createClass(DynamicImport,[{key:"compileNode",value:function compileNode(){return[this.makeCode("import")]}},{key:"astType",value:function astType(){return"Import"}}]),DynamicImport}(Base),exports.DynamicImportCall=DynamicImportCall=function(_Call3){"use strict";function DynamicImportCall(){return _classCallCheck(this,DynamicImportCall),_possibleConstructorReturn(this,_getPrototypeOf(DynamicImportCall).apply(this,arguments))}return _inherits(DynamicImportCall,_Call3),_createClass(DynamicImportCall,[{key:"compileNode",value:function compileNode(o){return this.checkArguments(),_get(_getPrototypeOf(DynamicImportCall.prototype),"compileNode",this).call(this,o)}},{key:"checkArguments",value:function checkArguments(){if(1!==this.args.length)return this.error("import() requires exactly one argument")}},{key:"astNode",value:function astNode(o){return this.checkArguments(),_get(_getPrototypeOf(DynamicImportCall.prototype),"astNode",this).call(this,o)}}]),DynamicImportCall}(Call),exports.Assign=Assign=function(){var Assign=function(_Base38){"use strict";function Assign(variable1,value1,context1){var options=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{},_this56;_classCallCheck(this,Assign),_this56=_possibleConstructorReturn(this,_getPrototypeOf(Assign).call(this)),_this56.variable=variable1,_this56.value=value1,_this56.context=context1,_this56.param=options.param,_this56.subpattern=options.subpattern,_this56.operatorToken=options.operatorToken,_this56.moduleDeclaration=options.moduleDeclaration;var _options$originalCont=options.originalContext;return _this56.originalContext=void 0===_options$originalCont?_this56.context:_options$originalCont,_this56.propagateLhs(),_this56}return _inherits(Assign,_Base38),_createClass(Assign,[{key:"isStatement",value:function isStatement(o){return(null==o?void 0:o.level)===LEVEL_TOP&&null!=this.context&&(this.moduleDeclaration||0<=indexOf.call(this.context,"?"))}},{key:"checkNameAssignability",value:function checkNameAssignability(o,varBase){if("import"===o.scope.type(varBase.value))return varBase.error("'".concat(varBase.value,"' is read-only"))}},{key:"assigns",value:function assigns(name){return this["object"===this.context?"value":"variable"].assigns(name)}},{key:"unfoldSoak",value:function unfoldSoak(o){return _unfoldSoak(o,this,"variable")}},{key:"addScopeVariables",value:function addScopeVariables(o){var _this57=this,_ref46=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_ref46$allowAssignmen=_ref46.allowAssignmentToExpansion,_ref46$allowAssignmen2=_ref46.allowAssignmentToNontrailingSplat,_ref46$allowAssignmen3=_ref46.allowAssignmentToEmptyArray,_ref46$allowAssignmen4=_ref46.allowAssignmentToComplexSplat,varBase;if(!(this.context&&"**="!==this.context))return varBase=this.variable.unwrapAll(),varBase.isAssignable({allowExpansion:void 0!==_ref46$allowAssignmen&&_ref46$allowAssignmen,allowNontrailingSplat:void 0!==_ref46$allowAssignmen2&&_ref46$allowAssignmen2,allowEmptyArray:void 0!==_ref46$allowAssignmen3&&_ref46$allowAssignmen3,allowComplexSplat:void 0!==_ref46$allowAssignmen4&&_ref46$allowAssignmen4})||this.variable.error("'".concat(this.variable.compile(o),"' can't be assigned")),varBase.eachName(function(name){var alreadyDeclared,commentFragments,commentsNode,message;if("function"!=typeof name.hasProperties||!name.hasProperties())return(message=isUnassignable(name.value),message&&name.error(message),_this57.checkNameAssignability(o,name),_this57.moduleDeclaration)?(o.scope.add(name.value,_this57.moduleDeclaration),name.isDeclaration=!0):_this57.param?o.scope.add(name.value,"alwaysDeclare"===_this57.param?"var":"param"):(alreadyDeclared=o.scope.find(name.value),null==name.isDeclaration&&(name.isDeclaration=!alreadyDeclared),name.comments&&!o.scope.comments[name.value]&&!(_this57.value instanceof Class)&&name.comments.every(function(comment){return comment.here&&!comment.multiline}))?(commentsNode=new IdentifierLiteral(name.value),commentsNode.comments=name.comments,commentFragments=[],_this57.compileCommentFragments(o,commentsNode,commentFragments),o.scope.comments[name.value]=commentFragments):void 0})}},{key:"compileNode",value:function compileNode(o){var answer,compiledName,isValue,name,properties,prototype,ref1,ref2,ref3,ref4,val;if(isValue=this.variable instanceof Value,isValue){if((this.variable.isArray()||this.variable.isObject())&&!this.variable.isAssignable())return this.variable.isObject()&&this.variable.base.hasSplat()?this.compileObjectDestruct(o):this.compileDestructuring(o);if(this.variable.isSplice())return this.compileSplice(o);if(this.isConditional())return this.compileConditional(o);if("//="===(ref1=this.context)||"%%="===ref1)return this.compileSpecialMath(o)}if(this.addScopeVariables(o),this.value instanceof Code)if(this.value.isStatic)this.value.name=this.variable.properties[0];else if(2<=(null==(ref2=this.variable.properties)?void 0:ref2.length)){var _ref47,_ref48,_splice$call,_splice$call2;ref3=this.variable.properties,_ref47=ref3,_ref48=_toArray(_ref47),properties=_ref48.slice(0),_ref47,_splice$call=splice.call(properties,-2),_splice$call2=_slicedToArray(_splice$call,2),prototype=_splice$call2[0],name=_splice$call2[1],_splice$call,"prototype"===(null==(ref4=prototype.name)?void 0:ref4.value)&&(this.value.name=name)}return(val=this.value.compileToFragments(o,LEVEL_LIST),compiledName=this.variable.compileToFragments(o,LEVEL_LIST),"object"===this.context)?(this.variable.shouldCache()&&(compiledName.unshift(this.makeCode("[")),compiledName.push(this.makeCode("]"))),compiledName.concat(this.makeCode(": "),val)):(answer=compiledName.concat(this.makeCode(" ".concat(this.context||"="," ")),val),o.level>LEVEL_LIST||isValue&&this.variable.base instanceof Obj&&!this.nestedLhs&&!0!==this.param?this.wrapInParentheses(answer):answer)}},{key:"compileObjectDestruct",value:function compileObjectDestruct(o){var assigns,props,refVal,splat,splatProp;this.variable.base.reorderProperties(),props=this.variable.base.properties;var _slice1$call15=slice1.call(props,-1),_slice1$call16=_slicedToArray(_slice1$call15,1);return splat=_slice1$call16[0],splatProp=splat.name,assigns=[],refVal=new Value(new IdentifierLiteral(o.scope.freeVariable("ref"))),props.splice(-1,1,new Splat(refVal)),assigns.push(new Assign(new Value(new Obj(props)),this.value).compileToFragments(o,LEVEL_LIST)),assigns.push(new Assign(new Value(splatProp),refVal).compileToFragments(o,LEVEL_LIST)),this.joinFragmentArrays(assigns,", ")}},{key:"compileDestructuring",value:function compileDestructuring(o){var _this58=this,assignObjects,assigns,code,compSlice,compSplice,complexObjects,expIdx,expans,fragments,hasObjAssigns,isExpans,isSplat,leftObjs,loopObjects,obj,objIsUnassignable,objects,olen,processObjects,pushAssign,ref,refExp,restVar,rightObjs,slicer,splatVar,splatVarAssign,splatVarRef,splats,splatsAndExpans,top,value,vvar,vvarText;if(top=o.level===LEVEL_TOP,value=this.value,objects=this.variable.base.objects,olen=objects.length,0===olen)return code=value.compileToFragments(o),o.level>=LEVEL_OP?this.wrapInParentheses(code):code;var _objects=objects,_objects2=_slicedToArray(_objects,1);obj=_objects2[0],this.disallowLoneExpansion();var _this$getAndCheckSpla=this.getAndCheckSplatsAndExpansions();return splats=_this$getAndCheckSpla.splats,expans=_this$getAndCheckSpla.expans,splatsAndExpans=_this$getAndCheckSpla.splatsAndExpans,isSplat=0<(null==splats?void 0:splats.length),isExpans=0<(null==expans?void 0:expans.length),vvar=value.compileToFragments(o,LEVEL_LIST),vvarText=fragmentsToText(vvar),assigns=[],pushAssign=function(variable,val){return assigns.push(new Assign(variable,val,null,{param:_this58.param,subpattern:!0}).compileToFragments(o,LEVEL_LIST))},isSplat&&(splatVar=objects[splats[0]].name.unwrap(),(splatVar instanceof Arr||splatVar instanceof Obj)&&(splatVarRef=new IdentifierLiteral(o.scope.freeVariable("ref")),objects[splats[0]].name=splatVarRef,splatVarAssign=function(){return pushAssign(new Value(splatVar),splatVarRef)})),(!(value.unwrap()instanceof IdentifierLiteral)||this.variable.assigns(vvarText))&&(ref=o.scope.freeVariable("ref"),assigns.push([this.makeCode(ref+" = ")].concat(_toConsumableArray(vvar))),vvar=[this.makeCode(ref)],vvarText=ref),slicer=function(type){return function(vvar,start){var end=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],args,slice;return vvar instanceof Value||(vvar=new IdentifierLiteral(vvar)),args=[vvar,new NumberLiteral(start)],end&&args.push(new NumberLiteral(end)),slice=new Value(new IdentifierLiteral(utility(type,o)),[new Access(new PropertyName("call"))]),new Value(new Call(slice,args))}},compSlice=slicer("slice"),compSplice=slicer("splice"),hasObjAssigns=function(objs){var i,j,len1,results1;for(results1=[],i=j=0,len1=objs.length;j<len1;i=++j)obj=objs[i],obj instanceof Assign&&"object"===obj.context&&results1.push(i);return results1},objIsUnassignable=function(objs){var j,len1;for(j=0,len1=objs.length;j<len1;j++)if(obj=objs[j],!obj.isAssignable())return!0;return!1},complexObjects=function(objs){return hasObjAssigns(objs).length||objIsUnassignable(objs)||1===olen},loopObjects=function(objs,vvar,vvarTxt){var acc,i,idx,j,len1,message,results1,vval;for(results1=[],i=j=0,len1=objs.length;j<len1;i=++j)if(obj=objs[i],!(obj instanceof Elision)){if(obj instanceof Assign&&"object"===obj.context){var _obj=obj;if(idx=_obj.variable.base,vvar=_obj.value,vvar instanceof Assign){var _vvar=vvar;vvar=_vvar.variable}idx=vvar["this"]?vvar.properties[0].name:new PropertyName(vvar.unwrap().value),acc=idx.unwrap()instanceof PropertyName,vval=new Value(value,[new(acc?Access:Index)(idx)])}else vvar=function(){switch(!1){case!(obj instanceof Splat):return new Value(obj.name);default:return obj;}}(),vval=function(){switch(!1){case!(obj instanceof Splat):return compSlice(vvarTxt,i);default:return new Value(new Literal(vvarTxt),[new Index(new NumberLiteral(i))]);}}();message=isUnassignable(vvar.unwrap().value),message&&vvar.error(message),results1.push(pushAssign(vvar,vval))}return results1},assignObjects=function(objs,vvar,vvarTxt){var vval;return vvar=new Value(new Arr(objs,!0)),vval=vvarTxt instanceof Value?vvarTxt:new Value(new Literal(vvarTxt)),pushAssign(vvar,vval)},processObjects=function(objs,vvar,vvarTxt){return complexObjects(objs)?loopObjects(objs,vvar,vvarTxt):assignObjects(objs,vvar,vvarTxt)},splatsAndExpans.length?(expIdx=splatsAndExpans[0],leftObjs=objects.slice(0,expIdx+(isSplat?1:0)),rightObjs=objects.slice(expIdx+1),0!==leftObjs.length&&processObjects(leftObjs,vvar,vvarText),0!==rightObjs.length&&(refExp=function(){switch(!1){case!isSplat:return compSplice(new Value(objects[expIdx].name),-1*rightObjs.length);case!isExpans:return compSlice(vvarText,-1*rightObjs.length);}}(),complexObjects(rightObjs)&&(restVar=refExp,refExp=o.scope.freeVariable("ref"),assigns.push([this.makeCode(refExp+" = ")].concat(_toConsumableArray(restVar.compileToFragments(o,LEVEL_LIST))))),processObjects(rightObjs,vvar,refExp))):processObjects(objects,vvar,vvarText),"function"==typeof splatVarAssign&&splatVarAssign(),top||this.subpattern||assigns.push(vvar),fragments=this.joinFragmentArrays(assigns,", "),o.level<LEVEL_LIST?fragments:this.wrapInParentheses(fragments)}},{key:"disallowLoneExpansion",value:function disallowLoneExpansion(){var loneObject,objects;if(this.variable.base instanceof Arr&&(objects=this.variable.base.objects,1===(null==objects?void 0:objects.length))){var _objects3=objects,_objects4=_slicedToArray(_objects3,1);if(loneObject=_objects4[0],loneObject instanceof Expansion)return loneObject.error("Destructuring assignment has no target")}}},{key:"getAndCheckSplatsAndExpansions",value:function getAndCheckSplatsAndExpansions(){var expans,i,obj,objects,splats,splatsAndExpans;return this.variable.base instanceof Arr?(objects=this.variable.base.objects,splats=function(){var j,len1,results1;for(results1=[],i=j=0,len1=objects.length;j<len1;i=++j)obj=objects[i],obj instanceof Splat&&results1.push(i);return results1}(),expans=function(){var j,len1,results1;for(results1=[],i=j=0,len1=objects.length;j<len1;i=++j)obj=objects[i],obj instanceof Expansion&&results1.push(i);return results1}(),splatsAndExpans=[].concat(_toConsumableArray(splats),_toConsumableArray(expans)),1<splatsAndExpans.length&&objects[splatsAndExpans.sort()[1]].error("multiple splats/expansions are disallowed in an assignment"),{splats:splats,expans:expans,splatsAndExpans:splatsAndExpans}):{splats:[],expans:[],splatsAndExpans:[]}}},{key:"compileConditional",value:function compileConditional(o){var _this$variable$cacheR=this.variable.cacheReference(o),_this$variable$cacheR2=_slicedToArray(_this$variable$cacheR,2),fragments,left,right;return left=_this$variable$cacheR2[0],right=_this$variable$cacheR2[1],left.properties.length||!(left.base instanceof Literal)||left.base instanceof ThisLiteral||o.scope.check(left.base.value)||this.throwUnassignableConditionalError(left.base.value),0<=indexOf.call(this.context,"?")?(o.isExistentialEquals=!0,new If(new Existence(left),right,{type:"if"}).addElse(new Assign(right,this.value,"=")).compileToFragments(o)):(fragments=new Op(this.context.slice(0,-1),left,new Assign(right,this.value,"=")).compileToFragments(o),o.level<=LEVEL_LIST?fragments:this.wrapInParentheses(fragments))}},{key:"compileSpecialMath",value:function compileSpecialMath(o){var _this$variable$cacheR3=this.variable.cacheReference(o),_this$variable$cacheR4=_slicedToArray(_this$variable$cacheR3,2),left,right;return left=_this$variable$cacheR4[0],right=_this$variable$cacheR4[1],new Assign(left,new Op(this.context.slice(0,-1),right,this.value)).compileToFragments(o)}},{key:"compileSplice",value:function compileSplice(o){var _this$variable$proper=this.variable.properties.pop(),_this$variable$proper2=_this$variable$proper.range,answer,exclusive,from,fromDecl,fromRef,name,to,unwrappedVar,valDef,valRef;if(from=_this$variable$proper2.from,to=_this$variable$proper2.to,exclusive=_this$variable$proper2.exclusive,unwrappedVar=this.variable.unwrapAll(),unwrappedVar.comments&&(moveComments(unwrappedVar,this),delete this.variable.comments),name=this.variable.compile(o),from){var _this$cacheToCodeFrag7=this.cacheToCodeFragments(from.cache(o,LEVEL_OP)),_this$cacheToCodeFrag8=_slicedToArray(_this$cacheToCodeFrag7,2);fromDecl=_this$cacheToCodeFrag8[0],fromRef=_this$cacheToCodeFrag8[1]}else fromDecl=fromRef="0";to?(null==from?void 0:from.isNumber())&&to.isNumber()?(to=to.compile(o)-fromRef,!exclusive&&(to+=1)):(to=to.compile(o,LEVEL_ACCESS)+" - "+fromRef,!exclusive&&(to+=" + 1")):to="9e9";var _this$value$cache=this.value.cache(o,LEVEL_LIST),_this$value$cache2=_slicedToArray(_this$value$cache,2);return valDef=_this$value$cache2[0],valRef=_this$value$cache2[1],answer=[].concat(this.makeCode("".concat(utility("splice",o),".apply(").concat(name,", [").concat(fromDecl,", ").concat(to,"].concat(")),valDef,this.makeCode(")), "),valRef),o.level>LEVEL_TOP?this.wrapInParentheses(answer):answer}},{key:"eachName",value:function eachName(iterator){return this.variable.unwrapAll().eachName(iterator)}},{key:"isDefaultAssignment",value:function isDefaultAssignment(){return this.param||this.nestedLhs}},{key:"propagateLhs",value:function propagateLhs(){var ref1,ref2;return(null==(ref1=this.variable)?void 0:"function"==typeof ref1.isArray?ref1.isArray():void 0)||(null==(ref2=this.variable)?void 0:"function"==typeof ref2.isObject?ref2.isObject():void 0)?this.variable.base.propagateLhs(!0):void 0}},{key:"throwUnassignableConditionalError",value:function throwUnassignableConditionalError(name){return this.variable.error("the variable \"".concat(name,"\" can't be assigned with ").concat(this.context," because it has not been declared before"))}},{key:"isConditional",value:function isConditional(){var ref1;return"||="===(ref1=this.context)||"&&="===ref1||"?="===ref1}},{key:"astNode",value:function astNode(o){var variable;return this.disallowLoneExpansion(),this.getAndCheckSplatsAndExpansions(),this.isConditional()&&(variable=this.variable.unwrap(),variable instanceof IdentifierLiteral&&!o.scope.check(variable.value)&&this.throwUnassignableConditionalError(variable.value)),this.addScopeVariables(o,{allowAssignmentToExpansion:!0,allowAssignmentToNontrailingSplat:!0,allowAssignmentToEmptyArray:!0,allowAssignmentToComplexSplat:!0}),_get(_getPrototypeOf(Assign.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(){return this.isDefaultAssignment()?"AssignmentPattern":"AssignmentExpression"}},{key:"astProperties",value:function astProperties(o){var ref1,ret;return ret={right:this.value.ast(o,LEVEL_LIST),left:this.variable.ast(o,LEVEL_LIST)},this.isDefaultAssignment()||(ret.operator=null==(ref1=this.originalContext)?"=":ref1),ret}}]),Assign}(Base);return Assign.prototype.children=["variable","value"],Assign.prototype.isAssignable=YES,Assign.prototype.isStatementAst=NO,Assign}.call(this),exports.FuncGlyph=FuncGlyph=function(_Base39){"use strict";function FuncGlyph(glyph){var _this59;return _classCallCheck(this,FuncGlyph),_this59=_possibleConstructorReturn(this,_getPrototypeOf(FuncGlyph).call(this)),_this59.glyph=glyph,_this59}return _inherits(FuncGlyph,_Base39),FuncGlyph}(Base),exports.Code=Code=function(){var Code=function(_Base40){"use strict";function Code(params,body,funcGlyph,paramStart){var _this60;_classCallCheck(this,Code);var ref1;return _this60=_possibleConstructorReturn(this,_getPrototypeOf(Code).call(this)),_this60.funcGlyph=funcGlyph,_this60.paramStart=paramStart,_this60.params=params||[],_this60.body=body||new Block,_this60.bound="=>"===(null==(ref1=_this60.funcGlyph)?void 0:ref1.glyph),_this60.isGenerator=!1,_this60.isAsync=!1,_this60.isMethod=!1,_this60.body.traverseChildren(!1,function(node){if((node instanceof Op&&node.isYield()||node instanceof YieldReturn)&&(_this60.isGenerator=!0),(node instanceof Op&&node.isAwait()||node instanceof AwaitReturn)&&(_this60.isAsync=!0),node instanceof For&&node.isAwait())return _this60.isAsync=!0}),_this60.propagateLhs(),_this60}return _inherits(Code,_Base40),_createClass(Code,[{key:"isStatement",value:function isStatement(){return this.isMethod}},{key:"makeScope",value:function makeScope(parentScope){return new Scope(parentScope,this.body,this)}},{key:"compileNode",value:function compileNode(o){var _this$body$expression3,_answer4,answer,body,boundMethodCheck,comment,condition,exprs,generatedVariables,haveBodyParam,haveSplatParam,i,ifTrue,j,k,l,len1,len2,len3,m,methodScope,modifiers,name,param,paramToAddToScope,params,paramsAfterSplat,ref,ref1,ref2,ref3,ref4,ref5,ref6,ref7,ref8,scopeVariablesCount,signature,splatParamName,thisAssignments,wasEmpty,yieldNode;for(this.checkForAsyncOrGeneratorConstructor(),this.bound&&((null==(ref1=o.scope.method)?void 0:ref1.bound)&&(this.context=o.scope.method.context),!this.context&&(this.context="this")),this.updateOptions(o),params=[],exprs=[],thisAssignments=null==(ref2=null==(ref3=this.thisAssignments)?void 0:ref3.slice())?[]:ref2,paramsAfterSplat=[],haveSplatParam=!1,haveBodyParam=!1,this.checkForDuplicateParams(),this.disallowLoneExpansionAndMultipleSplats(),this.eachParamName(function(name,node,param,obj){var replacement,target;if(node["this"])return name=node.properties[0].name.value,0<=indexOf.call(JS_FORBIDDEN,name)&&(name="_".concat(name)),target=new IdentifierLiteral(o.scope.freeVariable(name,{reserve:!1})),replacement=param.name instanceof Obj&&obj instanceof Assign&&"="===obj.operatorToken.value?new Assign(new IdentifierLiteral(name),target,"object"):target,param.renameParam(node,replacement),thisAssignments.push(new Assign(node,target))}),ref4=this.params,(i=j=0,len1=ref4.length);j<len1;i=++j)param=ref4[i],param.splat||param instanceof Expansion?(haveSplatParam=!0,param.splat?(param.name instanceof Arr||param.name instanceof Obj?(splatParamName=o.scope.freeVariable("arg"),params.push(ref=new Value(new IdentifierLiteral(splatParamName))),exprs.push(new Assign(new Value(param.name),ref))):(params.push(ref=param.asReference(o)),splatParamName=fragmentsToText(ref.compileNodeWithoutComments(o))),param.shouldCache()&&exprs.push(new Assign(new Value(param.name),ref))):(splatParamName=o.scope.freeVariable("args"),params.push(new Value(new IdentifierLiteral(splatParamName)))),o.scope.parameter(splatParamName)):((param.shouldCache()||haveBodyParam)&&(param.assignedInBody=!0,haveBodyParam=!0,null==param.value?exprs.push(new Assign(new Value(param.name),param.asReference(o),null,{param:"alwaysDeclare"})):(condition=new Op("===",param,new UndefinedLiteral()),ifTrue=new Assign(new Value(param.name),param.value),exprs.push(new If(condition,ifTrue)))),haveSplatParam?(paramsAfterSplat.push(param),null!=param.value&&!param.shouldCache()&&(condition=new Op("===",param,new UndefinedLiteral()),ifTrue=new Assign(new Value(param.name),param.value),exprs.push(new If(condition,ifTrue))),null!=(null==(ref5=param.name)?void 0:ref5.value)&&o.scope.add(param.name.value,"var",!0)):(ref=param.shouldCache()?param.asReference(o):null==param.value||param.assignedInBody?param:new Assign(new Value(param.name),param.value,null,{param:!0}),param.name instanceof Arr||param.name instanceof Obj?(param.name.lhs=!0,!param.shouldCache()&&param.name.eachName(function(prop){return o.scope.parameter(prop.value)})):(paramToAddToScope=null==param.value?ref:param,o.scope.parameter(fragmentsToText(paramToAddToScope.compileToFragmentsWithoutComments(o)))),params.push(ref)));if(0!==paramsAfterSplat.length&&exprs.unshift(new Assign(new Value(new Arr([new Splat(new IdentifierLiteral(splatParamName))].concat(_toConsumableArray(function(){var k,len2,results1;for(results1=[],k=0,len2=paramsAfterSplat.length;k<len2;k++)param=paramsAfterSplat[k],results1.push(param.asReference(o));return results1}())))),new Value(new IdentifierLiteral(splatParamName)))),wasEmpty=this.body.isEmpty(),this.disallowSuperInParamDefaults(),this.checkSuperCallsInConstructorBody(),!this.expandCtorSuper(thisAssignments)){var _this$body$expression2;(_this$body$expression2=this.body.expressions).unshift.apply(_this$body$expression2,_toConsumableArray(thisAssignments))}for((_this$body$expression3=this.body.expressions).unshift.apply(_this$body$expression3,_toConsumableArray(exprs)),this.isMethod&&this.bound&&!this.isStatic&&this.classVariable&&(boundMethodCheck=new Value(new Literal(utility("boundMethodCheck",o))),this.body.expressions.unshift(new Call(boundMethodCheck,[new Value(new ThisLiteral()),this.classVariable]))),wasEmpty||this.noReturn||this.body.makeReturn(),this.bound&&this.isGenerator&&(yieldNode=this.body.contains(function(node){return node instanceof Op&&"yield"===node.operator}),(yieldNode||this).error("yield cannot occur inside bound (fat arrow) functions")),modifiers=[],this.isMethod&&this.isStatic&&modifiers.push("static"),this.isAsync&&modifiers.push("async"),this.isMethod||this.bound?this.isGenerator&&modifiers.push("*"):modifiers.push("function".concat(this.isGenerator?"*":"")),signature=[this.makeCode("(")],null!=(null==(ref6=this.paramStart)?void 0:ref6.comments)&&this.compileCommentFragments(o,this.paramStart,signature),(i=k=0,len2=params.length);k<len2;i=++k){var _signature;if(param=params[i],0!==i&&signature.push(this.makeCode(", ")),haveSplatParam&&i===params.length-1&&signature.push(this.makeCode("...")),scopeVariablesCount=o.scope.variables.length,(_signature=signature).push.apply(_signature,_toConsumableArray(param.compileToFragments(o,LEVEL_PAREN))),scopeVariablesCount!==o.scope.variables.length){var _o$scope$parent$varia;generatedVariables=o.scope.variables.splice(scopeVariablesCount),(_o$scope$parent$varia=o.scope.parent.variables).push.apply(_o$scope$parent$varia,_toConsumableArray(generatedVariables))}}if(signature.push(this.makeCode(")")),null!=(null==(ref7=this.funcGlyph)?void 0:ref7.comments)){for(ref8=this.funcGlyph.comments,l=0,len3=ref8.length;l<len3;l++)comment=ref8[l],comment.unshift=!1;this.compileCommentFragments(o,this.funcGlyph,signature)}if(this.body.isEmpty()||(body=this.body.compileWithDeclarations(o)),this.isMethod){var _ref49=[o.scope,o.scope.parent];methodScope=_ref49[0],o.scope=_ref49[1],name=this.name.compileToFragments(o),"."===name[0].code&&name.shift(),o.scope=methodScope}if(answer=this.joinFragmentArrays(function(){var len4,p,results1;for(results1=[],p=0,len4=modifiers.length;p<len4;p++)m=modifiers[p],results1.push(this.makeCode(m));return results1}.call(this)," "),modifiers.length&&name&&answer.push(this.makeCode(" ")),name){var _answer3;(_answer3=answer).push.apply(_answer3,_toConsumableArray(name))}if((_answer4=answer).push.apply(_answer4,_toConsumableArray(signature)),this.bound&&!this.isMethod&&answer.push(this.makeCode(" =>")),answer.push(this.makeCode(" {")),null==body?void 0:body.length){var _answer5;(_answer5=answer).push.apply(_answer5,[this.makeCode("\n")].concat(_toConsumableArray(body),[this.makeCode("\n".concat(this.tab))]))}return answer.push(this.makeCode("}")),this.isMethod?indentInitial(answer,this):this.front||o.level>=LEVEL_ACCESS?this.wrapInParentheses(answer):answer}},{key:"updateOptions",value:function updateOptions(o){return o.scope=del(o,"classScope")||this.makeScope(o.scope),o.scope.shared=del(o,"sharedScope"),o.indent+=TAB,delete o.bare,delete o.isExistentialEquals}},{key:"checkForDuplicateParams",value:function checkForDuplicateParams(){var paramNames;return paramNames=[],this.eachParamName(function(name,node){return 0<=indexOf.call(paramNames,name)&&node.error("multiple parameters named '".concat(name,"'")),paramNames.push(name)})}},{key:"eachParamName",value:function eachParamName(iterator){var j,len1,param,ref1,results1;for(ref1=this.params,results1=[],(j=0,len1=ref1.length);j<len1;j++)param=ref1[j],results1.push(param.eachName(iterator));return results1}},{key:"traverseChildren",value:function traverseChildren(crossScope,func){if(crossScope)return _get(_getPrototypeOf(Code.prototype),"traverseChildren",this).call(this,crossScope,func)}},{key:"replaceInContext",value:function replaceInContext(child,replacement){return!!this.bound&&_get(_getPrototypeOf(Code.prototype),"replaceInContext",this).call(this,child,replacement)}},{key:"disallowSuperInParamDefaults",value:function disallowSuperInParamDefaults(){var _ref50=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},forAst=_ref50.forAst;return!!this.ctor&&this.eachSuperCall(Block.wrap(this.params),function(superCall){return superCall.error("'super' is not allowed in constructor parameter defaults")},{checkForThisBeforeSuper:!forAst})}},{key:"checkSuperCallsInConstructorBody",value:function checkSuperCallsInConstructorBody(){var _this61=this,seenSuper;return!!this.ctor&&(seenSuper=this.eachSuperCall(this.body,function(superCall){if("base"===_this61.ctor)return superCall.error("'super' is only allowed in derived class constructors")}),seenSuper)}},{key:"flagThisParamInDerivedClassConstructorWithoutCallingSuper",value:function flagThisParamInDerivedClassConstructorWithoutCallingSuper(param){return param.error("Can't use @params in derived class constructors without calling super")}},{key:"checkForAsyncOrGeneratorConstructor",value:function checkForAsyncOrGeneratorConstructor(){if(this.ctor&&(this.isAsync&&this.name.error("Class constructor may not be async"),this.isGenerator))return this.name.error("Class constructor may not be a generator")}},{key:"disallowLoneExpansionAndMultipleSplats",value:function disallowLoneExpansionAndMultipleSplats(){var j,len1,param,ref1,results1,seenSplatParam;for(seenSplatParam=!1,ref1=this.params,results1=[],(j=0,len1=ref1.length);j<len1;j++)param=ref1[j],param.splat||param instanceof Expansion?(seenSplatParam?param.error("only one splat or expansion parameter is allowed per function definition"):param instanceof Expansion&&1===this.params.length&&param.error("an expansion parameter cannot be the only parameter in a function definition"),results1.push(seenSplatParam=!0)):results1.push(void 0);return results1}},{key:"expandCtorSuper",value:function expandCtorSuper(thisAssignments){var haveThisParam,param,ref1,seenSuper;return!!this.ctor&&(seenSuper=this.eachSuperCall(this.body,function(superCall){return superCall.expressions=thisAssignments}),haveThisParam=thisAssignments.length&&thisAssignments.length!==(null==(ref1=this.thisAssignments)?void 0:ref1.length),"derived"===this.ctor&&!seenSuper&&haveThisParam&&(param=thisAssignments[0].variable,this.flagThisParamInDerivedClassConstructorWithoutCallingSuper(param)),seenSuper)}},{key:"eachSuperCall",value:function eachSuperCall(context,iterator){var _this62=this,_ref51=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},_ref51$checkForThisBe=_ref51.checkForThisBeforeSuper,seenSuper;return seenSuper=!1,context.traverseChildren(!0,function(child){var childArgs;return child instanceof SuperCall?(!child.variable.accessor&&(childArgs=child.args.filter(function(arg){return!(arg instanceof Class)&&(!(arg instanceof Code)||arg.bound)}),Block.wrap(childArgs).traverseChildren(!0,function(node){if(node["this"])return node.error("Can't call super with @params in derived class constructors")})),seenSuper=!0,iterator(child)):(void 0===_ref51$checkForThisBe||_ref51$checkForThisBe)&&child instanceof ThisLiteral&&"derived"===_this62.ctor&&!seenSuper&&child.error("Can't reference 'this' before calling super in derived class constructors"),!(child instanceof SuperCall)&&(!(child instanceof Code)||child.bound)}),seenSuper}},{key:"propagateLhs",value:function propagateLhs(){var j,len1,name,param,ref1,results1;for(ref1=this.params,results1=[],(j=0,len1=ref1.length);j<len1;j++){param=ref1[j];var _param=param;name=_param.name,name instanceof Arr||name instanceof Obj?results1.push(name.propagateLhs(!0)):param instanceof Expansion?results1.push(param.lhs=!0):results1.push(void 0)}return results1}},{key:"astAddParamsToScope",value:function astAddParamsToScope(o){return this.eachParamName(function(name){return o.scope.add(name,"param")})}},{key:"astNode",value:function astNode(o){var _this63=this,seenSuper;return this.updateOptions(o),this.checkForAsyncOrGeneratorConstructor(),this.checkForDuplicateParams(),this.disallowSuperInParamDefaults({forAst:!0}),this.disallowLoneExpansionAndMultipleSplats(),seenSuper=this.checkSuperCallsInConstructorBody(),"derived"!==this.ctor||seenSuper||this.eachParamName(function(name,node){if(node["this"])return _this63.flagThisParamInDerivedClassConstructorWithoutCallingSuper(node)}),this.astAddParamsToScope(o),this.body.isEmpty()||this.noReturn||this.body.makeReturn(null,!0),_get(_getPrototypeOf(Code.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(){return this.isMethod?"ClassMethod":this.bound?"ArrowFunctionExpression":"FunctionExpression"}},{key:"paramForAst",value:function paramForAst(param){var name,splat,value;return param instanceof Expansion?param:(name=param.name,value=param.value,splat=param.splat,splat?new Splat(name,{lhs:!0,postfix:splat.postfix}).withLocationDataFrom(param):null==value?name:new Assign(name,value,null,{param:!0}).withLocationDataFrom({locationData:mergeLocationData(name.locationData,value.locationData)}))}},{key:"methodAstProperties",value:function methodAstProperties(o){var _this64=this,getIsComputed,ref1,ref2,ref3,ref4;return getIsComputed=function(){return!!(_this64.name instanceof Index)||!!(_this64.name instanceof ComputedPropertyName)||!!(_this64.name.name instanceof ComputedPropertyName)},{static:!!this.isStatic,key:this.name.ast(o),computed:getIsComputed(),kind:this.ctor?"constructor":"method",operator:null==(ref1=null==(ref2=this.operatorToken)?void 0:ref2.value)?"=":ref1,staticClassName:null==(ref3=null==(ref4=this.isStatic.staticClassName)?void 0:ref4.ast(o))?null:ref3,bound:!!this.bound}}},{key:"astProperties",value:function astProperties(o){var param,ref1;return Object.assign({params:function(){var j,len1,ref1,results1;for(ref1=this.params,results1=[],(j=0,len1=ref1.length);j<len1;j++)param=ref1[j],results1.push(this.paramForAst(param).ast(o));return results1}.call(this),body:this.body.ast(Object.assign({},o,{checkForDirectives:!0}),LEVEL_TOP),generator:!!this.isGenerator,async:!!this.isAsync,id:null,hasIndentedBody:this.body.locationData.first_line>(null==(ref1=this.funcGlyph)?void 0:ref1.locationData.first_line)},this.isMethod?this.methodAstProperties(o):{})}},{key:"astLocationData",value:function(){var astLocationData,functionLocationData;return(functionLocationData=_get(_getPrototypeOf(Code.prototype),"astLocationData",this).call(this),!this.isMethod)?functionLocationData:(astLocationData=mergeAstLocationData(this.name.astLocationData(),functionLocationData),null!=this.isStatic.staticClassName&&(astLocationData=mergeAstLocationData(this.isStatic.staticClassName.astLocationData(),astLocationData)),astLocationData)}}]),Code}(Base);return Code.prototype.children=["params","body"],Code.prototype.jumps=NO,Code}.call(this),exports.Param=Param=function(){var Param=function(_Base41){"use strict";function Param(name1,value1,splat1){var _this65;_classCallCheck(this,Param);var message,token;return _this65=_possibleConstructorReturn(this,_getPrototypeOf(Param).call(this)),_this65.name=name1,_this65.value=value1,_this65.splat=splat1,message=isUnassignable(_this65.name.unwrapAll().value),message&&_this65.name.error(message),_this65.name instanceof Obj&&_this65.name.generated&&(token=_this65.name.objects[0].operatorToken,token.error("unexpected ".concat(token.value))),_this65}return _inherits(Param,_Base41),_createClass(Param,[{key:"compileToFragments",value:function compileToFragments(o){return this.name.compileToFragments(o,LEVEL_LIST)}},{key:"compileToFragmentsWithoutComments",value:function compileToFragmentsWithoutComments(o){return this.name.compileToFragmentsWithoutComments(o,LEVEL_LIST)}},{key:"asReference",value:function asReference(o){var name,node;return this.reference?this.reference:(node=this.name,node["this"]?(name=node.properties[0].name.value,0<=indexOf.call(JS_FORBIDDEN,name)&&(name="_".concat(name)),node=new IdentifierLiteral(o.scope.freeVariable(name))):node.shouldCache()&&(node=new IdentifierLiteral(o.scope.freeVariable("arg"))),node=new Value(node),node.updateLocationDataIfMissing(this.locationData),this.reference=node)}},{key:"shouldCache",value:function shouldCache(){return this.name.shouldCache()}},{key:"eachName",value:function eachName(iterator){var _this66=this,name=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.name,atParam,checkAssignabilityOfLiteral,j,len1,nObj,node,obj,ref1,ref2;if(checkAssignabilityOfLiteral=function(literal){var message;if(message=isUnassignable(literal.value),message&&literal.error(message),!literal.isAssignable())return literal.error("'".concat(literal.value,"' can't be assigned"))},atParam=function(obj){var originalObj=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;return iterator("@".concat(obj.properties[0].name.value),obj,_this66,originalObj)},name instanceof Call&&name.error("Function invocation can't be assigned"),name instanceof Literal)return checkAssignabilityOfLiteral(name),iterator(name.value,name,this);if(name instanceof Value)return atParam(name);for(ref2=null==(ref1=name.objects)?[]:ref1,j=0,len1=ref2.length;j<len1;j++)obj=ref2[j],nObj=obj,obj instanceof Assign&&null==obj.context&&(obj=obj.variable),obj instanceof Assign?(obj=obj.value instanceof Assign?obj.value.variable:obj.value,this.eachName(iterator,obj.unwrap())):obj instanceof Splat?(node=obj.name.unwrap(),iterator(node.value,node,this)):obj instanceof Value?obj.isArray()||obj.isObject()?this.eachName(iterator,obj.base):obj["this"]?atParam(obj,nObj):(checkAssignabilityOfLiteral(obj.base),iterator(obj.base.value,obj.base,this)):obj instanceof Elision?obj:!(obj instanceof Expansion)&&obj.error("illegal parameter ".concat(obj.compile()))}},{key:"renameParam",value:function renameParam(node,newNode){var isNode,replacement;return isNode=function(candidate){return candidate===node},replacement=function(node,parent){var key;return parent instanceof Obj?(key=node,node["this"]&&(key=node.properties[0].name),node["this"]&&key.value===newNode.value?new Value(newNode):new Assign(new Value(key),newNode,"object")):newNode},this.replaceInContext(isNode,replacement)}}]),Param}(Base);return Param.prototype.children=["name","value"],Param}.call(this),exports.Splat=Splat=function(){var Splat=function(_Base42){"use strict";function Splat(name){var _ref52=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},lhs1=_ref52.lhs,_ref52$postfix=_ref52.postfix,_this67;return _classCallCheck(this,Splat),_this67=_possibleConstructorReturn(this,_getPrototypeOf(Splat).call(this)),_this67.lhs=lhs1,_this67.postfix=void 0===_ref52$postfix||_ref52$postfix,_this67.name=name.compile?name:new Literal(name),_this67}return _inherits(Splat,_Base42),_createClass(Splat,[{key:"shouldCache",value:function shouldCache(){return!1}},{key:"isAssignable",value:function isAssignable(){var _ref53=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},_ref53$allowComplexSp=_ref53.allowComplexSplat;return this.name instanceof Obj||this.name instanceof Parens?void 0!==_ref53$allowComplexSp&&_ref53$allowComplexSp:this.name.isAssignable()&&(!this.name.isAtomic||this.name.isAtomic())}},{key:"assigns",value:function assigns(name){return this.name.assigns(name)}},{key:"compileNode",value:function compileNode(o){var compiledSplat;return compiledSplat=[this.makeCode("...")].concat(_toConsumableArray(this.name.compileToFragments(o,LEVEL_OP))),this.jsx?[this.makeCode("{")].concat(_toConsumableArray(compiledSplat),[this.makeCode("}")]):compiledSplat}},{key:"unwrap",value:function unwrap(){return this.name}},{key:"propagateLhs",value:function propagateLhs(setLhs){var base1;return setLhs&&(this.lhs=!0),this.lhs?"function"==typeof(base1=this.name).propagateLhs?base1.propagateLhs(!0):void 0:void 0}},{key:"astType",value:function astType(){return this.jsx?"JSXSpreadAttribute":this.lhs?"RestElement":"SpreadElement"}},{key:"astProperties",value:function astProperties(o){return{argument:this.name.ast(o,LEVEL_OP),postfix:this.postfix}}}]),Splat}(Base);return Splat.prototype.children=["name"],Splat}.call(this),exports.Expansion=Expansion=function(){var Expansion=function(_Base43){"use strict";function Expansion(){return _classCallCheck(this,Expansion),_possibleConstructorReturn(this,_getPrototypeOf(Expansion).apply(this,arguments))}return _inherits(Expansion,_Base43),_createClass(Expansion,[{key:"compileNode",value:function compileNode(){return this.throwLhsError()}},{key:"asReference",value:function asReference(){return this}},{key:"eachName",value:function eachName(){}},{key:"throwLhsError",value:function throwLhsError(){return this.error("Expansion must be used inside a destructuring assignment or parameter list")}},{key:"astNode",value:function astNode(o){return this.lhs||this.throwLhsError(),_get(_getPrototypeOf(Expansion.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(){return"RestElement"}},{key:"astProperties",value:function astProperties(){return{argument:null}}}]),Expansion}(Base);return Expansion.prototype.shouldCache=NO,Expansion}.call(this),exports.Elision=Elision=function(){var Elision=function(_Base44){"use strict";function Elision(){return _classCallCheck(this,Elision),_possibleConstructorReturn(this,_getPrototypeOf(Elision).apply(this,arguments))}return _inherits(Elision,_Base44),_createClass(Elision,[{key:"compileToFragments",value:function compileToFragments(o,level){var fragment;return fragment=_get(_getPrototypeOf(Elision.prototype),"compileToFragments",this).call(this,o,level),fragment.isElision=!0,fragment}},{key:"compileNode",value:function compileNode(){return[this.makeCode(", ")]}},{key:"asReference",value:function asReference(){return this}},{key:"eachName",value:function eachName(){}},{key:"astNode",value:function astNode(){return null}}]),Elision}(Base);return Elision.prototype.isAssignable=YES,Elision.prototype.shouldCache=NO,Elision}.call(this),exports.While=While=function(){var While=function(_Base45){"use strict";function While(condition1){var _ref54=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},invert=_ref54.invert,guard=_ref54.guard,isLoop=_ref54.isLoop,_this68;return _classCallCheck(this,While),_this68=_possibleConstructorReturn(this,_getPrototypeOf(While).call(this)),_this68.condition=condition1,_this68.invert=invert,_this68.guard=guard,_this68.isLoop=isLoop,_this68}return _inherits(While,_Base45),_createClass(While,[{key:"makeReturn",value:function makeReturn(results,mark){return results?_get(_getPrototypeOf(While.prototype),"makeReturn",this).call(this,results,mark):(this.returns=!this.jumps(),mark?void(this.returns&&this.body.makeReturn(results,mark)):this)}},{key:"addBody",value:function addBody(body1){return this.body=body1,this}},{key:"jumps",value:function jumps(){var expressions,j,jumpNode,len1,node;if(expressions=this.body.expressions,!expressions.length)return!1;for(j=0,len1=expressions.length;j<len1;j++)if(node=expressions[j],jumpNode=node.jumps({loop:!0}))return jumpNode;return!1}},{key:"compileNode",value:function compileNode(o){var answer,body,rvar,set;return o.indent+=TAB,set="",body=this.body,body.isEmpty()?body=this.makeCode(""):(this.returns&&(body.makeReturn(rvar=o.scope.freeVariable("results")),set="".concat(this.tab).concat(rvar," = [];\n")),this.guard&&(1<body.expressions.length?body.expressions.unshift(new If(new Parens(this.guard).invert(),new StatementLiteral("continue"))):this.guard&&(body=Block.wrap([new If(this.guard,body)]))),body=[].concat(this.makeCode("\n"),body.compileToFragments(o,LEVEL_TOP),this.makeCode("\n".concat(this.tab)))),answer=[].concat(this.makeCode(set+this.tab+"while ("),this.processedCondition().compileToFragments(o,LEVEL_PAREN),this.makeCode(") {"),body,this.makeCode("}")),this.returns&&answer.push(this.makeCode("\n".concat(this.tab,"return ").concat(rvar,";"))),answer}},{key:"processedCondition",value:function processedCondition(){return null==this.processedConditionCache?this.processedConditionCache=this.invert?this.condition.invert():this.condition:this.processedConditionCache}},{key:"astType",value:function astType(){return"WhileStatement"}},{key:"astProperties",value:function astProperties(o){var ref1,ref2;return{test:this.condition.ast(o,LEVEL_PAREN),body:this.body.ast(o,LEVEL_TOP),guard:null==(ref1=null==(ref2=this.guard)?void 0:ref2.ast(o))?null:ref1,inverted:!!this.invert,postfix:!!this.postfix,loop:!!this.isLoop}}}]),While}(Base);return While.prototype.children=["condition","guard","body"],While.prototype.isStatement=YES,While}.call(this),exports.Op=Op=function(){var Op=function(_Base46){"use strict";function Op(op,first,second,flip){var _ref55=4<arguments.length&&void 0!==arguments[4]?arguments[4]:{},invertOperator=_ref55.invertOperator,_ref55$originalOperat=_ref55.originalOperator,originalOperator=void 0===_ref55$originalOperat?op:_ref55$originalOperat,_this69;_classCallCheck(this,Op);var call,firstCall,message,ref1,unwrapped;return(_this69=_possibleConstructorReturn(this,_getPrototypeOf(Op).call(this)),_this69.invertOperator=invertOperator,_this69.originalOperator=originalOperator,"new"===op)?((firstCall=unwrapped=first.unwrap())instanceof Call||(firstCall=unwrapped.base)instanceof Call)&&!firstCall["do"]&&!firstCall.isNew?_possibleConstructorReturn(_this69,new Value(firstCall.newInstance(),firstCall===unwrapped?[]:unwrapped.properties)):(first instanceof Parens||first.unwrap()instanceof IdentifierLiteral||("function"==typeof first.hasProperties?first.hasProperties():void 0)||(first=new Parens(first)),call=new Call(first,[]),call.locationData=_this69.locationData,call.isNew=!0,_possibleConstructorReturn(_this69,call)):(_this69.operator=CONVERSIONS[op]||op,_this69.first=first,_this69.second=second,_this69.flip=!!flip,("--"===(ref1=_this69.operator)||"++"===ref1)&&(message=isUnassignable(_this69.first.unwrapAll().value),message&&_this69.first.error(message)),_possibleConstructorReturn(_this69,_assertThisInitialized(_this69)))}return _inherits(Op,_Base46),_createClass(Op,[{key:"isNumber",value:function(){var ref1;return this.isUnary()&&("+"===(ref1=this.operator)||"-"===ref1)&&this.first instanceof Value&&this.first.isNumber()}},{key:"isAwait",value:function isAwait(){return"await"===this.operator}},{key:"isYield",value:function isYield(){var ref1;return"yield"===(ref1=this.operator)||"yield*"===ref1}},{key:"isUnary",value:function isUnary(){return!this.second}},{key:"shouldCache",value:function shouldCache(){return!this.isNumber()}},{key:"isChainable",value:function isChainable(){var ref1;return"<"===(ref1=this.operator)||">"===ref1||">="===ref1||"<="===ref1||"==="===ref1||"!=="===ref1}},{key:"isChain",value:function isChain(){return this.isChainable()&&this.first.isChainable()}},{key:"invert",value:function invert(){var allInvertable,curr,fst,op,ref1;if(this.isInOperator())return this.invertOperator="!",this;if(this.isChain()){for(allInvertable=!0,curr=this;curr&&curr.operator;)allInvertable&&(allInvertable=curr.operator in INVERSIONS),curr=curr.first;if(!allInvertable)return new Parens(this).invert();for(curr=this;curr&&curr.operator;)curr.invert=!curr.invert,curr.operator=INVERSIONS[curr.operator],curr=curr.first;return this}return(op=INVERSIONS[this.operator])?(this.operator=op,this.first.unwrap()instanceof Op&&this.first.invert(),this):this.second?new Parens(this).invert():"!"===this.operator&&(fst=this.first.unwrap())instanceof Op&&("!"===(ref1=fst.operator)||"in"===ref1||"instanceof"===ref1)?fst:new Op("!",this)}},{key:"unfoldSoak",value:function unfoldSoak(o){var ref1;return("++"===(ref1=this.operator)||"--"===ref1||"delete"===ref1)&&_unfoldSoak(o,this,"first")}},{key:"generateDo",value:function generateDo(exp){var call,func,j,len1,param,passedParams,ref,ref1;for(passedParams=[],func=exp instanceof Assign&&(ref=exp.value.unwrap())instanceof Code?ref:exp,ref1=func.params||[],(j=0,len1=ref1.length);j<len1;j++)param=ref1[j],param.value?(passedParams.push(param.value),delete param.value):passedParams.push(param);return call=new Call(exp,passedParams),call["do"]=!0,call}},{key:"isInOperator",value:function isInOperator(){return"in"===this.originalOperator}},{key:"compileNode",value:function compileNode(o){var answer,inNode,isChain,lhs,rhs;if(this.isInOperator())return inNode=new In(this.first,this.second),(this.invertOperator?inNode.invert():inNode).compileNode(o);if(this.invertOperator)return this.invertOperator=null,this.invert().compileNode(o);if("do"===this.operator)return Op.prototype.generateDo(this.first).compileNode(o);if(isChain=this.isChain(),isChain||(this.first.front=this.front),this.checkDeleteOperand(o),this.isYield()||this.isAwait())return this.compileContinuation(o);if(this.isUnary())return this.compileUnary(o);if(isChain)return this.compileChain(o);switch(this.operator){case"?":return this.compileExistence(o,this.second.isDefaultValue);case"//":return this.compileFloorDivision(o);case"%%":return this.compileModulo(o);default:return lhs=this.first.compileToFragments(o,LEVEL_OP),rhs=this.second.compileToFragments(o,LEVEL_OP),answer=[].concat(lhs,this.makeCode(" ".concat(this.operator," ")),rhs),o.level<=LEVEL_OP?answer:this.wrapInParentheses(answer);}}},{key:"compileChain",value:function compileChain(o){var _this$first$second$ca=this.first.second.cache(o),_this$first$second$ca2=_slicedToArray(_this$first$second$ca,2),fragments,fst,shared;return this.first.second=_this$first$second$ca2[0],shared=_this$first$second$ca2[1],fst=this.first.compileToFragments(o,LEVEL_OP),fragments=fst.concat(this.makeCode(" ".concat(this.invert?"&&":"||"," ")),shared.compileToFragments(o),this.makeCode(" ".concat(this.operator," ")),this.second.compileToFragments(o,LEVEL_OP)),this.wrapInParentheses(fragments)}},{key:"compileExistence",value:function compileExistence(o,checkOnlyUndefined){var fst,ref;return this.first.shouldCache()?(ref=new IdentifierLiteral(o.scope.freeVariable("ref")),fst=new Parens(new Assign(ref,this.first))):(fst=this.first,ref=fst),new If(new Existence(fst,checkOnlyUndefined),ref,{type:"if"}).addElse(this.second).compileToFragments(o)}},{key:"compileUnary",value:function compileUnary(o){var op,parts,plusMinus;return(parts=[],op=this.operator,parts.push([this.makeCode(op)]),"!"===op&&this.first instanceof Existence)?(this.first.negated=!this.first.negated,this.first.compileToFragments(o)):o.level>=LEVEL_ACCESS?new Parens(this).compileToFragments(o):(plusMinus="+"===op||"-"===op,("typeof"===op||"delete"===op||plusMinus&&this.first instanceof Op&&this.first.operator===op)&&parts.push([this.makeCode(" ")]),plusMinus&&this.first instanceof Op&&(this.first=new Parens(this.first)),parts.push(this.first.compileToFragments(o,LEVEL_OP)),this.flip&&parts.reverse(),this.joinFragmentArrays(parts,""))}},{key:"compileContinuation",value:function compileContinuation(o){var op,parts,ref1;return parts=[],op=this.operator,this.checkContinuation(o),0<=indexOf.call(Object.keys(this.first),"expression")&&!(this.first instanceof Throw)?null!=this.first.expression&&parts.push(this.first.expression.compileToFragments(o,LEVEL_OP)):(o.level>=LEVEL_PAREN&&parts.push([this.makeCode("(")]),parts.push([this.makeCode(op)]),""!==(null==(ref1=this.first.base)?void 0:ref1.value)&&parts.push([this.makeCode(" ")]),parts.push(this.first.compileToFragments(o,LEVEL_OP)),o.level>=LEVEL_PAREN&&parts.push([this.makeCode(")")])),this.joinFragmentArrays(parts,"")}},{key:"checkContinuation",value:function checkContinuation(o){var ref1;if(null==o.scope.parent&&this.error("".concat(this.operator," can only occur inside functions")),(null==(ref1=o.scope.method)?void 0:ref1.bound)&&o.scope.method.isGenerator)return this.error("yield cannot occur inside bound (fat arrow) functions")}},{key:"compileFloorDivision",value:function compileFloorDivision(o){var div,floor,second;return floor=new Value(new IdentifierLiteral("Math"),[new Access(new PropertyName("floor"))]),second=this.second.shouldCache()?new Parens(this.second):this.second,div=new Op("/",this.first,second),new Call(floor,[div]).compileToFragments(o)}},{key:"compileModulo",value:function compileModulo(o){var mod;return mod=new Value(new Literal(utility("modulo",o))),new Call(mod,[this.first,this.second]).compileToFragments(o)}},{key:"toString",value:function toString(idt){return _get(_getPrototypeOf(Op.prototype),"toString",this).call(this,idt,this.constructor.name+" "+this.operator)}},{key:"checkDeleteOperand",value:function checkDeleteOperand(o){if("delete"===this.operator&&o.scope.check(this.first.unwrapAll().value))return this.error("delete operand may not be argument or var")}},{key:"astNode",value:function astNode(o){return(this.isYield()||this.isAwait())&&this.checkContinuation(o),this.checkDeleteOperand(o),_get(_getPrototypeOf(Op.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(){if(this.isAwait())return"AwaitExpression";if(this.isYield())return"YieldExpression";if(this.isChain())return"ChainedComparison";switch(this.operator){case"||":case"&&":case"?":return"LogicalExpression";case"++":case"--":return"UpdateExpression";default:return this.isUnary()?"UnaryExpression":"BinaryExpression";}}},{key:"operatorAst",value:function operatorAst(){return"".concat(this.invertOperator?"".concat(this.invertOperator," "):"").concat(this.originalOperator)}},{key:"chainAstProperties",value:function chainAstProperties(o){var currentOp,operand,operands,operators;for(operators=[this.operatorAst()],operands=[this.second],currentOp=this.first;;)if(operators.unshift(currentOp.operatorAst()),operands.unshift(currentOp.second),currentOp=currentOp.first,!currentOp.isChainable()){operands.unshift(currentOp);break}return{operators:operators,operands:function(){var j,len1,results1;for(results1=[],j=0,len1=operands.length;j<len1;j++)operand=operands[j],results1.push(operand.ast(o,LEVEL_OP));return results1}()}}},{key:"astProperties",value:function astProperties(o){var argument,firstAst,operatorAst,ref1,secondAst;if(this.isChain())return this.chainAstProperties(o);switch(firstAst=this.first.ast(o,LEVEL_OP),secondAst=null==(ref1=this.second)?void 0:ref1.ast(o,LEVEL_OP),operatorAst=this.operatorAst(),!1){case!this.isUnary():return argument=this.isYield()&&""===this.first.unwrap().value?null:firstAst,this.isAwait()?{argument:argument}:this.isYield()?{argument:argument,delegate:"yield*"===this.operator}:{argument:argument,operator:operatorAst,prefix:!this.flip};default:return{left:firstAst,right:secondAst,operator:operatorAst};}}}]),Op}(Base),CONVERSIONS,INVERSIONS;return CONVERSIONS={"==":"===","!=":"!==",of:"in",yieldfrom:"yield*"},INVERSIONS={"!==":"===","===":"!=="},Op.prototype.children=["first","second"],Op}.call(this),exports.In=In=function(){var In=function(_Base47){"use strict";function In(object1,array){var _this70;return _classCallCheck(this,In),_this70=_possibleConstructorReturn(this,_getPrototypeOf(In).call(this)),_this70.object=object1,_this70.array=array,_this70}return _inherits(In,_Base47),_createClass(In,[{key:"compileNode",value:function compileNode(o){var hasSplat,j,len1,obj,ref1;if(this.array instanceof Value&&this.array.isArray()&&this.array.base.objects.length){for(ref1=this.array.base.objects,j=0,len1=ref1.length;j<len1;j++)if(obj=ref1[j],!!(obj instanceof Splat)){hasSplat=!0;break}if(!hasSplat)return this.compileOrTest(o)}return this.compileLoopTest(o)}},{key:"compileOrTest",value:function compileOrTest(o){var _this$object$cache=this.object.cache(o,LEVEL_OP),_this$object$cache2=_slicedToArray(_this$object$cache,2),cmp,cnj,i,item,j,len1,ref,ref1,sub,tests;sub=_this$object$cache2[0],ref=_this$object$cache2[1];var _ref56=this.negated?[" !== "," && "]:[" === "," || "],_ref57=_slicedToArray(_ref56,2);for(cmp=_ref57[0],cnj=_ref57[1],tests=[],ref1=this.array.base.objects,(i=j=0,len1=ref1.length);j<len1;i=++j)item=ref1[i],i&&tests.push(this.makeCode(cnj)),tests=tests.concat(i?ref:sub,this.makeCode(cmp),item.compileToFragments(o,LEVEL_ACCESS));return o.level<LEVEL_OP?tests:this.wrapInParentheses(tests)}},{key:"compileLoopTest",value:function compileLoopTest(o){var _this$object$cache3=this.object.cache(o,LEVEL_LIST),_this$object$cache4=_slicedToArray(_this$object$cache3,2),fragments,ref,sub;return(sub=_this$object$cache4[0],ref=_this$object$cache4[1],fragments=[].concat(this.makeCode(utility("indexOf",o)+".call("),this.array.compileToFragments(o,LEVEL_LIST),this.makeCode(", "),ref,this.makeCode(") "+(this.negated?"< 0":">= 0"))),fragmentsToText(sub)===fragmentsToText(ref))?fragments:(fragments=sub.concat(this.makeCode(", "),fragments),o.level<LEVEL_LIST?fragments:this.wrapInParentheses(fragments))}},{key:"toString",value:function toString(idt){return _get(_getPrototypeOf(In.prototype),"toString",this).call(this,idt,this.constructor.name+(this.negated?"!":""))}}]),In}(Base);return In.prototype.children=["object","array"],In.prototype.invert=NEGATE,In}.call(this),exports.Try=Try=function(){var Try=function(_Base48){"use strict";function Try(attempt,_catch,ensure,finallyTag){var _this71;return _classCallCheck(this,Try),_this71=_possibleConstructorReturn(this,_getPrototypeOf(Try).call(this)),_this71.attempt=attempt,_this71["catch"]=_catch,_this71.ensure=ensure,_this71.finallyTag=finallyTag,_this71}return _inherits(Try,_Base48),_createClass(Try,[{key:"jumps",value:function jumps(o){var ref1;return this.attempt.jumps(o)||(null==(ref1=this["catch"])?void 0:ref1.jumps(o))}},{key:"makeReturn",value:function makeReturn(results,mark){var ref1,ref2;return mark?(null!=(ref1=this.attempt)&&ref1.makeReturn(results,mark),void(null!=(ref2=this["catch"])&&ref2.makeReturn(results,mark))):(this.attempt&&(this.attempt=this.attempt.makeReturn(results)),this["catch"]&&(this["catch"]=this["catch"].makeReturn(results)),this)}},{key:"compileNode",value:function compileNode(o){var catchPart,ensurePart,generatedErrorVariableName,originalIndent,tryPart;return originalIndent=o.indent,o.indent+=TAB,tryPart=this.attempt.compileToFragments(o,LEVEL_TOP),catchPart=this["catch"]?this["catch"].compileToFragments(merge(o,{indent:originalIndent}),LEVEL_TOP):this.ensure||this["catch"]?[]:(generatedErrorVariableName=o.scope.freeVariable("error",{reserve:!1}),[this.makeCode(" catch (".concat(generatedErrorVariableName,") {}"))]),ensurePart=this.ensure?[].concat(this.makeCode(" finally {\n"),this.ensure.compileToFragments(o,LEVEL_TOP),this.makeCode("\n".concat(this.tab,"}"))):[],[].concat(this.makeCode("".concat(this.tab,"try {\n")),tryPart,this.makeCode("\n".concat(this.tab,"}")),catchPart,ensurePart)}},{key:"astType",value:function astType(){return"TryStatement"}},{key:"astProperties",value:function astProperties(o){var ref1,ref2;return{block:this.attempt.ast(o,LEVEL_TOP),handler:null==(ref1=null==(ref2=this["catch"])?void 0:ref2.ast(o))?null:ref1,finalizer:null==this.ensure?null:Object.assign(this.ensure.ast(o,LEVEL_TOP),mergeAstLocationData(jisonLocationDataToAstLocationData(this.finallyTag.locationData),this.ensure.astLocationData()))}}}]),Try}(Base);return Try.prototype.children=["attempt","catch","ensure"],Try.prototype.isStatement=YES,Try}.call(this),exports.Catch=Catch=function(){var Catch=function(_Base49){"use strict";function Catch(recovery,errorVariable){var _this72;_classCallCheck(this,Catch);var base1,ref1;return _this72=_possibleConstructorReturn(this,_getPrototypeOf(Catch).call(this)),_this72.recovery=recovery,_this72.errorVariable=errorVariable,null!=(ref1=_this72.errorVariable)&&"function"==typeof(base1=ref1.unwrap()).propagateLhs&&base1.propagateLhs(!0),_this72}return _inherits(Catch,_Base49),_createClass(Catch,[{key:"jumps",value:function jumps(o){return this.recovery.jumps(o)}},{key:"makeReturn",value:function makeReturn(results,mark){var ret;if(ret=this.recovery.makeReturn(results,mark),!mark)return this.recovery=ret,this}},{key:"compileNode",value:function compileNode(o){var generatedErrorVariableName,placeholder;return o.indent+=TAB,generatedErrorVariableName=o.scope.freeVariable("error",{reserve:!1}),placeholder=new IdentifierLiteral(generatedErrorVariableName),this.checkUnassignable(),this.errorVariable&&this.recovery.unshift(new Assign(this.errorVariable,placeholder)),[].concat(this.makeCode(" catch ("),placeholder.compileToFragments(o),this.makeCode(") {\n"),this.recovery.compileToFragments(o,LEVEL_TOP),this.makeCode("\n".concat(this.tab,"}")))}},{key:"checkUnassignable",value:function checkUnassignable(){var message;if(this.errorVariable&&(message=isUnassignable(this.errorVariable.unwrapAll().value),message))return this.errorVariable.error(message)}},{key:"astNode",value:function astNode(o){var ref1;return this.checkUnassignable(),null!=(ref1=this.errorVariable)&&ref1.eachName(function(name){var alreadyDeclared;return alreadyDeclared=o.scope.find(name.value),name.isDeclaration=!alreadyDeclared}),_get(_getPrototypeOf(Catch.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(){return"CatchClause"}},{key:"astProperties",value:function astProperties(o){var ref1,ref2;return{param:null==(ref1=null==(ref2=this.errorVariable)?void 0:ref2.ast(o))?null:ref1,body:this.recovery.ast(o,LEVEL_TOP)}}}]),Catch}(Base);return Catch.prototype.children=["recovery","errorVariable"],Catch.prototype.isStatement=YES,Catch}.call(this),exports.Throw=Throw=function(){var Throw=function(_Base50){"use strict";function Throw(expression1){var _this73;return _classCallCheck(this,Throw),_this73=_possibleConstructorReturn(this,_getPrototypeOf(Throw).call(this)),_this73.expression=expression1,_this73}return _inherits(Throw,_Base50),_createClass(Throw,[{key:"compileNode",value:function compileNode(o){var fragments;return fragments=this.expression.compileToFragments(o,LEVEL_LIST),unshiftAfterComments(fragments,this.makeCode("throw ")),fragments.unshift(this.makeCode(this.tab)),fragments.push(this.makeCode(";")),fragments}},{key:"astType",value:function astType(){return"ThrowStatement"}},{key:"astProperties",value:function astProperties(o){return{argument:this.expression.ast(o,LEVEL_LIST)}}}]),Throw}(Base);return Throw.prototype.children=["expression"],Throw.prototype.isStatement=YES,Throw.prototype.jumps=NO,Throw.prototype.makeReturn=THIS,Throw}.call(this),exports.Existence=Existence=function(){var Existence=function(_Base51){"use strict";function Existence(expression1){var onlyNotUndefined=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],_this74;_classCallCheck(this,Existence);var salvagedComments;return _this74=_possibleConstructorReturn(this,_getPrototypeOf(Existence).call(this)),_this74.expression=expression1,_this74.comparisonTarget=onlyNotUndefined?"undefined":"null",salvagedComments=[],_this74.expression.traverseChildren(!0,function(child){var comment,j,len1,ref1;if(child.comments){for(ref1=child.comments,j=0,len1=ref1.length;j<len1;j++)comment=ref1[j],0>indexOf.call(salvagedComments,comment)&&salvagedComments.push(comment);return delete child.comments}}),attachCommentsToNode(salvagedComments,_assertThisInitialized(_this74)),moveComments(_this74.expression,_assertThisInitialized(_this74)),_this74}return _inherits(Existence,_Base51),_createClass(Existence,[{key:"compileNode",value:function compileNode(o){var cmp,cnj,code;if(this.expression.front=this.front,code=this.expression.compile(o,LEVEL_OP),this.expression.unwrap()instanceof IdentifierLiteral&&!o.scope.check(code)){var _ref58=this.negated?["===","||"]:["!==","&&"],_ref59=_slicedToArray(_ref58,2);cmp=_ref59[0],cnj=_ref59[1],code="typeof ".concat(code," ").concat(cmp," \"undefined\"")+("undefined"===this.comparisonTarget?"":" ".concat(cnj," ").concat(code," ").concat(cmp," ").concat(this.comparisonTarget))}else cmp="null"===this.comparisonTarget?this.negated?"==":"!=":this.negated?"===":"!==",code="".concat(code," ").concat(cmp," ").concat(this.comparisonTarget);return[this.makeCode(o.level<=LEVEL_COND?code:"(".concat(code,")"))]}},{key:"astType",value:function astType(){return"UnaryExpression"}},{key:"astProperties",value:function astProperties(o){return{argument:this.expression.ast(o),operator:"?",prefix:!1}}}]),Existence}(Base);return Existence.prototype.children=["expression"],Existence.prototype.invert=NEGATE,Existence}.call(this),exports.Parens=Parens=function(){var Parens=function(_Base52){"use strict";function Parens(body1){var _this75;return _classCallCheck(this,Parens),_this75=_possibleConstructorReturn(this,_getPrototypeOf(Parens).call(this)),_this75.body=body1,_this75}return _inherits(Parens,_Base52),_createClass(Parens,[{key:"unwrap",value:function unwrap(){return this.body}},{key:"shouldCache",value:function shouldCache(){return this.body.shouldCache()}},{key:"compileNode",value:function compileNode(o){var bare,expr,fragments,ref1,shouldWrapComment;return(expr=this.body.unwrap(),shouldWrapComment=null==(ref1=expr.comments)?void 0:ref1.some(function(comment){return comment.here&&!comment.unshift&&!comment.newLine}),expr instanceof Value&&expr.isAtomic()&&!this.jsxAttribute&&!shouldWrapComment)?(expr.front=this.front,expr.compileToFragments(o)):(fragments=expr.compileToFragments(o,LEVEL_PAREN),bare=o.level<LEVEL_OP&&!shouldWrapComment&&(expr instanceof Op&&!expr.isInOperator()||expr.unwrap()instanceof Call||expr instanceof For&&expr.returns)&&(o.level<LEVEL_COND||3>=fragments.length),this.jsxAttribute?this.wrapInBraces(fragments):bare?fragments:this.wrapInParentheses(fragments))}},{key:"astNode",value:function astNode(o){return this.body.unwrap().ast(o,LEVEL_PAREN)}}]),Parens}(Base);return Parens.prototype.children=["body"],Parens}.call(this),exports.StringWithInterpolations=StringWithInterpolations=function(){var StringWithInterpolations=function(_Base53){"use strict";function StringWithInterpolations(body1){var _ref60=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},quote=_ref60.quote,startQuote=_ref60.startQuote,_this76;return _classCallCheck(this,StringWithInterpolations),_this76=_possibleConstructorReturn(this,_getPrototypeOf(StringWithInterpolations).call(this)),_this76.body=body1,_this76.quote=quote,_this76.startQuote=startQuote,_this76}return _inherits(StringWithInterpolations,_Base53),_createClass(StringWithInterpolations,[{key:"unwrap",value:function unwrap(){return this}},{key:"shouldCache",value:function shouldCache(){return this.body.shouldCache()}},{key:"extractElements",value:function extractElements(o){var _ref61=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},includeInterpolationWrappers=_ref61.includeInterpolationWrappers,isJsx=_ref61.isJsx,elements,expr,salvagedComments;return expr=this.body.unwrap(),elements=[],salvagedComments=[],expr.traverseChildren(!1,function(node){var comment,commentPlaceholder,empty,j,k,len1,len2,ref1,ref2,ref3,unwrapped;if(node instanceof StringLiteral){if(node.comments){var _salvagedComments;(_salvagedComments=salvagedComments).push.apply(_salvagedComments,_toConsumableArray(node.comments)),delete node.comments}return elements.push(node),!0}if(node instanceof Interpolation){if(0!==salvagedComments.length){for(j=0,len1=salvagedComments.length;j<len1;j++)comment=salvagedComments[j],comment.unshift=!0,comment.newLine=!0;attachCommentsToNode(salvagedComments,node)}if((unwrapped=null==(ref1=node.expression)?void 0:ref1.unwrapAll())instanceof PassthroughLiteral&&unwrapped.generated&&!(isJsx&&o.compiling)){if(o.compiling){if(commentPlaceholder=new StringLiteral("").withLocationDataFrom(node),commentPlaceholder.comments=unwrapped.comments,node.comments){var _ref62;(_ref62=null==commentPlaceholder.comments?commentPlaceholder.comments=[]:commentPlaceholder.comments).push.apply(_ref62,_toConsumableArray(node.comments))}elements.push(new Value(commentPlaceholder))}else empty=new Interpolation().withLocationDataFrom(node),empty.comments=node.comments,elements.push(empty);}else if(node.expression||includeInterpolationWrappers){if(node.comments){var _ref63;(_ref63=null==(ref2=node.expression)?void 0:null==ref2.comments?ref2.comments=[]:ref2.comments).push.apply(_ref63,_toConsumableArray(node.comments))}elements.push(includeInterpolationWrappers?node:node.expression)}return!1}if(node.comments){if(0!==elements.length&&!(elements[elements.length-1]instanceof StringLiteral)){for(ref3=node.comments,k=0,len2=ref3.length;k<len2;k++)comment=ref3[k],comment.unshift=!1,comment.newLine=!0;attachCommentsToNode(node.comments,elements[elements.length-1])}else{var _salvagedComments2;(_salvagedComments2=salvagedComments).push.apply(_salvagedComments2,_toConsumableArray(node.comments))}delete node.comments}return!0}),elements}},{key:"compileNode",value:function compileNode(o){var code,element,elements,fragments,j,len1,ref1,unquotedElementValue,wrapped;if(null==this.comments&&(this.comments=null==(ref1=this.startQuote)?void 0:ref1.comments),this.jsxAttribute)return wrapped=new Parens(new StringWithInterpolations(this.body)),wrapped.jsxAttribute=!0,wrapped.compileNode(o);for(elements=this.extractElements(o,{isJsx:this.jsx}),fragments=[],this.jsx||fragments.push(this.makeCode("`")),(j=0,len1=elements.length);j<len1;j++)if(element=elements[j],element instanceof StringLiteral)unquotedElementValue=this.jsx?element.unquotedValueForJSX:element.unquotedValueForTemplateLiteral,fragments.push(this.makeCode(unquotedElementValue));else{var _fragments12;this.jsx||fragments.push(this.makeCode("$")),code=element.compileToFragments(o,LEVEL_PAREN),(!this.isNestedTag(element)||code.some(function(fragment){var ref2;return null==(ref2=fragment.comments)?void 0:ref2.some(function(comment){return!1===comment.here})}))&&(code=this.wrapInBraces(code),code[0].isStringWithInterpolations=!0,code[code.length-1].isStringWithInterpolations=!0),(_fragments12=fragments).push.apply(_fragments12,_toConsumableArray(code))}return this.jsx||fragments.push(this.makeCode("`")),fragments}},{key:"isNestedTag",value:function isNestedTag(element){var call;return call="function"==typeof element.unwrapAll?element.unwrapAll():void 0,this.jsx&&call instanceof JSXElement}},{key:"astType",value:function astType(){return"TemplateLiteral"}},{key:"astProperties",value:function astProperties(o){var element,elements,emptyInterpolation,expression,expressions,index,j,last,len1,node,quasis;elements=this.extractElements(o,{includeInterpolationWrappers:!0});var _slice1$call17=slice1.call(elements,-1),_slice1$call18=_slicedToArray(_slice1$call17,1);for(last=_slice1$call18[0],quasis=[],expressions=[],(index=j=0,len1=elements.length);j<len1;index=++j)if(element=elements[index],element instanceof StringLiteral)quasis.push(new TemplateElement(element.originalValue,{tail:element===last}).withLocationDataFrom(element).ast(o));else{var _element2=element;expression=_element2.expression,node=null==expression?(emptyInterpolation=new EmptyInterpolation,emptyInterpolation.locationData=emptyExpressionLocationData({interpolationNode:element,openingBrace:"#{",closingBrace:"}"}),emptyInterpolation):expression.unwrapAll(),expressions.push(astAsBlockIfNeeded(node,o))}return{expressions:expressions,quasis:quasis,quote:this.quote}}}],[{key:"fromStringLiteral",value:function fromStringLiteral(stringLiteral){var updatedString,updatedStringValue;return updatedString=stringLiteral.withoutQuotesInLocationData(),updatedStringValue=new Value(updatedString).withLocationDataFrom(updatedString),new StringWithInterpolations(Block.wrap([updatedStringValue]),{quote:stringLiteral.quote}).withLocationDataFrom(stringLiteral)}}]),StringWithInterpolations}(Base);return StringWithInterpolations.prototype.children=["body"],StringWithInterpolations}.call(this),exports.TemplateElement=TemplateElement=function(_Base54){"use strict";function TemplateElement(value1){var _ref64=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},tail1=_ref64.tail,_this77;return _classCallCheck(this,TemplateElement),_this77=_possibleConstructorReturn(this,_getPrototypeOf(TemplateElement).call(this)),_this77.value=value1,_this77.tail=tail1,_this77}return _inherits(TemplateElement,_Base54),_createClass(TemplateElement,[{key:"astProperties",value:function astProperties(){return{value:{raw:this.value},tail:!!this.tail}}}]),TemplateElement}(Base),exports.Interpolation=Interpolation=function(){var Interpolation=function(_Base55){"use strict";function Interpolation(expression1){var _this78;return _classCallCheck(this,Interpolation),_this78=_possibleConstructorReturn(this,_getPrototypeOf(Interpolation).call(this)),_this78.expression=expression1,_this78}return _inherits(Interpolation,_Base55),Interpolation}(Base);return Interpolation.prototype.children=["expression"],Interpolation}.call(this),exports.EmptyInterpolation=EmptyInterpolation=function(_Base56){"use strict";function EmptyInterpolation(){return _classCallCheck(this,EmptyInterpolation),_possibleConstructorReturn(this,_getPrototypeOf(EmptyInterpolation).call(this))}return _inherits(EmptyInterpolation,_Base56),EmptyInterpolation}(Base),exports.For=For=function(){var For=function(_While){"use strict";function For(body,source){var _this79;return _classCallCheck(this,For),_this79=_possibleConstructorReturn(this,_getPrototypeOf(For).call(this)),_this79.addBody(body),_this79.addSource(source),_this79}return _inherits(For,_While),_createClass(For,[{key:"isAwait",value:function isAwait(){var ref1;return null!=(ref1=this["await"])&&ref1}},{key:"addBody",value:function addBody(body){var base1,expressions;return this.body=Block.wrap([body]),expressions=this.body.expressions,expressions.length&&null==(base1=this.body).locationData&&(base1.locationData=mergeLocationData(expressions[0].locationData,expressions[expressions.length-1].locationData)),this}},{key:"addSource",value:function addSource(source){var _this80=this,_source$source=source.source,attr,attribs,attribute,base1,j,k,len1,len2,ref1,ref2,ref3,ref4;for(this.source=void 0!==_source$source&&_source$source,attribs=["name","index","guard","step","own","ownTag","await","awaitTag","object","from"],(j=0,len1=attribs.length);j<len1;j++)attr=attribs[j],this[attr]=null==(ref1=source[attr])?this[attr]:ref1;if(!this.source)return this;if(this.from&&this.index&&this.index.error("cannot use index with for-from"),this.own&&!this.object&&this.ownTag.error("cannot use own with for-".concat(this.from?"from":"in")),this.object){var _ref65=[this.index,this.name];this.name=_ref65[0],this.index=_ref65[1]}for(((null==(ref2=this.index)?void 0:"function"==typeof ref2.isArray?ref2.isArray():void 0)||(null==(ref3=this.index)?void 0:"function"==typeof ref3.isObject?ref3.isObject():void 0))&&this.index.error("index cannot be a pattern matching expression"),this["await"]&&!this.from&&this.awaitTag.error("await must be used with for-from"),this.range=this.source instanceof Value&&this.source.base instanceof Range&&!this.source.properties.length&&!this.from,this.pattern=this.name instanceof Value,this.pattern&&"function"==typeof(base1=this.name.unwrap()).propagateLhs&&base1.propagateLhs(!0),this.range&&this.index&&this.index.error("indexes do not apply to range loops"),this.range&&this.pattern&&this.name.error("cannot pattern match over range loops"),this.returns=!1,ref4=["source","guard","step","name","index"],(k=0,len2=ref4.length);k<len2;k++)(attribute=ref4[k],!!this[attribute])&&(this[attribute].traverseChildren(!0,function(node){var comment,l,len3,ref5;if(node.comments){for(ref5=node.comments,l=0,len3=ref5.length;l<len3;l++)comment=ref5[l],comment.newLine=comment.unshift=!0;return moveComments(node,_this80[attribute])}}),moveComments(this[attribute],this));return this}},{key:"compileNode",value:function compileNode(o){var _slice1$call19,_slice1$call20,body,bodyFragments,compare,compareDown,declare,declareDown,defPart,down,forClose,forCode,forPartFragments,fragments,guardPart,idt1,increment,index,ivar,kvar,kvarAssign,last,lvar,name,namePart,ref,ref1,resultPart,returnResult,rvar,scope,source,step,stepNum,stepVar,svar,varPart;if(body=Block.wrap([this.body]),ref1=body.expressions,_slice1$call19=slice1.call(ref1,-1),_slice1$call20=_slicedToArray(_slice1$call19,1),last=_slice1$call20[0],_slice1$call19,(null==last?void 0:last.jumps())instanceof Return&&(this.returns=!1),source=this.range?this.source.base:this.source,scope=o.scope,this.pattern||(name=this.name&&this.name.compile(o,LEVEL_LIST)),index=this.index&&this.index.compile(o,LEVEL_LIST),name&&!this.pattern&&scope.find(name),index&&!(this.index instanceof Value)&&scope.find(index),this.returns&&(rvar=scope.freeVariable("results")),this.from?this.pattern&&(ivar=scope.freeVariable("x",{single:!0})):ivar=this.object&&index||scope.freeVariable("i",{single:!0}),kvar=(this.range||this.from)&&name||index||ivar,kvarAssign=kvar===ivar?"":"".concat(kvar," = "),this.step&&!this.range){var _this$cacheToCodeFrag9=this.cacheToCodeFragments(this.step.cache(o,LEVEL_LIST,shouldCacheOrIsAssignable)),_this$cacheToCodeFrag10=_slicedToArray(_this$cacheToCodeFrag9,2);step=_this$cacheToCodeFrag10[0],stepVar=_this$cacheToCodeFrag10[1],this.step.isNumber()&&(stepNum=parseNumber(stepVar))}return this.pattern&&(name=ivar),varPart="",guardPart="",defPart="",idt1=this.tab+TAB,this.range?forPartFragments=source.compileToFragments(merge(o,{index:ivar,name:name,step:this.step,shouldCache:shouldCacheOrIsAssignable})):(svar=this.source.compile(o,LEVEL_LIST),(name||this.own)&&!(this.source.unwrap()instanceof IdentifierLiteral)&&(defPart+="".concat(this.tab).concat(ref=scope.freeVariable("ref")," = ").concat(svar,";\n"),svar=ref),name&&!this.pattern&&!this.from&&(namePart="".concat(name," = ").concat(svar,"[").concat(kvar,"]")),!this.object&&!this.from&&(step!==stepVar&&(defPart+="".concat(this.tab).concat(step,";\n")),down=0>stepNum,!(this.step&&null!=stepNum&&down)&&(lvar=scope.freeVariable("len")),declare="".concat(kvarAssign).concat(ivar," = 0, ").concat(lvar," = ").concat(svar,".length"),declareDown="".concat(kvarAssign).concat(ivar," = ").concat(svar,".length - 1"),compare="".concat(ivar," < ").concat(lvar),compareDown="".concat(ivar," >= 0"),this.step?(null==stepNum?(compare="".concat(stepVar," > 0 ? ").concat(compare," : ").concat(compareDown),declare="(".concat(stepVar," > 0 ? (").concat(declare,") : ").concat(declareDown,")")):down&&(compare=compareDown,declare=declareDown),increment="".concat(ivar," += ").concat(stepVar)):increment="".concat(kvar===ivar?"".concat(ivar,"++"):"++".concat(ivar)),forPartFragments=[this.makeCode("".concat(declare,"; ").concat(compare,"; ").concat(kvarAssign).concat(increment))])),this.returns&&(resultPart="".concat(this.tab).concat(rvar," = [];\n"),returnResult="\n".concat(this.tab,"return ").concat(rvar,";"),body.makeReturn(rvar)),this.guard&&(1<body.expressions.length?body.expressions.unshift(new If(new Parens(this.guard).invert(),new StatementLiteral("continue"))):this.guard&&(body=Block.wrap([new If(this.guard,body)]))),this.pattern&&body.expressions.unshift(new Assign(this.name,this.from?new IdentifierLiteral(kvar):new Literal("".concat(svar,"[").concat(kvar,"]")))),namePart&&(varPart="\n".concat(idt1).concat(namePart,";")),this.object?(forPartFragments=[this.makeCode("".concat(kvar," in ").concat(svar))],this.own&&(guardPart="\n".concat(idt1,"if (!").concat(utility("hasProp",o),".call(").concat(svar,", ").concat(kvar,")) continue;"))):this.from&&(this["await"]?(forPartFragments=new Op("await",new Parens(new Literal("".concat(kvar," of ").concat(svar)))),forPartFragments=forPartFragments.compileToFragments(o,LEVEL_TOP)):forPartFragments=[this.makeCode("".concat(kvar," of ").concat(svar))]),bodyFragments=body.compileToFragments(merge(o,{indent:idt1}),LEVEL_TOP),bodyFragments&&0<bodyFragments.length&&(bodyFragments=[].concat(this.makeCode("\n"),bodyFragments,this.makeCode("\n"))),fragments=[this.makeCode(defPart)],resultPart&&fragments.push(this.makeCode(resultPart)),forCode=this["await"]?"for ":"for (",forClose=this["await"]?"":")",fragments=fragments.concat(this.makeCode(this.tab),this.makeCode(forCode),forPartFragments,this.makeCode("".concat(forClose," {").concat(guardPart).concat(varPart)),bodyFragments,this.makeCode(this.tab),this.makeCode("}")),returnResult&&fragments.push(this.makeCode(returnResult)),fragments}},{key:"astNode",value:function astNode(o){var addToScope,ref1,ref2;return addToScope=function(name){var alreadyDeclared;return alreadyDeclared=o.scope.find(name.value),name.isDeclaration=!alreadyDeclared},null!=(ref1=this.name)&&ref1.eachName(addToScope,{checkAssignability:!1}),null!=(ref2=this.index)&&ref2.eachName(addToScope,{checkAssignability:!1}),_get(_getPrototypeOf(For.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(){return"For"}},{key:"astProperties",value:function astProperties(o){var ref1,ref2,ref3,ref4,ref5,ref6,ref7,ref8,ref9;return{source:null==(ref1=this.source)?void 0:ref1.ast(o),body:this.body.ast(o,LEVEL_TOP),guard:null==(ref2=null==(ref3=this.guard)?void 0:ref3.ast(o))?null:ref2,name:null==(ref4=null==(ref5=this.name)?void 0:ref5.ast(o))?null:ref4,index:null==(ref6=null==(ref7=this.index)?void 0:ref7.ast(o))?null:ref6,step:null==(ref8=null==(ref9=this.step)?void 0:ref9.ast(o))?null:ref8,postfix:!!this.postfix,own:!!this.own,await:!!this["await"],style:function(){switch(!1){case!this.from:return"from";case!this.object:return"of";case!this.name:return"in";default:return"range";}}.call(this)}}}]),For}(While);return For.prototype.children=["body","source","guard","step"],For}.call(this),exports.Switch=Switch=function(){var Switch=function(_Base57){"use strict";function Switch(subject,cases1,otherwise){var _this81;return _classCallCheck(this,Switch),_this81=_possibleConstructorReturn(this,_getPrototypeOf(Switch).call(this)),_this81.subject=subject,_this81.cases=cases1,_this81.otherwise=otherwise,_this81}return _inherits(Switch,_Base57),_createClass(Switch,[{key:"jumps",value:function jumps(){var o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{block:!0},block,j,jumpNode,len1,ref1,ref2;for(ref1=this.cases,j=0,len1=ref1.length;j<len1;j++)if(block=ref1[j].block,jumpNode=block.jumps(o))return jumpNode;return null==(ref2=this.otherwise)?void 0:ref2.jumps(o)}},{key:"makeReturn",value:function makeReturn(results,mark){var block,j,len1,ref1,ref2;for(ref1=this.cases,j=0,len1=ref1.length;j<len1;j++)block=ref1[j].block,block.makeReturn(results,mark);return results&&(this.otherwise||(this.otherwise=new Block([new Literal("void 0")]))),null!=(ref2=this.otherwise)&&ref2.makeReturn(results,mark),this}},{key:"compileNode",value:function compileNode(o){var block,body,cond,conditions,expr,fragments,i,idt1,idt2,j,k,len1,len2,ref1,ref2;for(idt1=o.indent+TAB,idt2=o.indent=idt1+TAB,fragments=[].concat(this.makeCode(this.tab+"switch ("),this.subject?this.subject.compileToFragments(o,LEVEL_PAREN):this.makeCode("false"),this.makeCode(") {\n")),ref1=this.cases,(i=j=0,len1=ref1.length);j<len1;i=++j){var _ref1$i=ref1[i];for(conditions=_ref1$i.conditions,block=_ref1$i.block,ref2=flatten([conditions]),(k=0,len2=ref2.length);k<len2;k++)cond=ref2[k],this.subject||(cond=cond.invert()),fragments=fragments.concat(this.makeCode(idt1+"case "),cond.compileToFragments(o,LEVEL_PAREN),this.makeCode(":\n"));if(0<(body=block.compileToFragments(o,LEVEL_TOP)).length&&(fragments=fragments.concat(body,this.makeCode("\n"))),i===this.cases.length-1&&!this.otherwise)break;(expr=this.lastNode(block.expressions),!(expr instanceof Return||expr instanceof Throw||expr instanceof Literal&&expr.jumps()&&"debugger"!==expr.value))&&fragments.push(cond.makeCode(idt2+"break;\n"))}if(this.otherwise&&this.otherwise.expressions.length){var _fragments13;(_fragments13=fragments).push.apply(_fragments13,[this.makeCode(idt1+"default:\n")].concat(_toConsumableArray(this.otherwise.compileToFragments(o,LEVEL_TOP)),[this.makeCode("\n")]))}return fragments.push(this.makeCode(this.tab+"}")),fragments}},{key:"astType",value:function astType(){return"SwitchStatement"}},{key:"casesAst",value:function casesAst(o){var caseIndex,caseLocationData,cases,consequent,j,k,kase,l,lastTestIndex,len1,len2,len3,ref1,ref2,results1,test,testConsequent,testIndex,tests;for(cases=[],ref1=this.cases,(caseIndex=j=0,len1=ref1.length);j<len1;caseIndex=++j){kase=ref1[caseIndex];var _kase=kase;for(tests=_kase.conditions,consequent=_kase.block,tests=flatten([tests]),lastTestIndex=tests.length-1,(testIndex=k=0,len2=tests.length);k<len2;testIndex=++k)test=tests[testIndex],testConsequent=testIndex===lastTestIndex?consequent:null,caseLocationData=test.locationData,(null==testConsequent?void 0:testConsequent.expressions.length)&&(caseLocationData=mergeLocationData(caseLocationData,testConsequent.expressions[testConsequent.expressions.length-1].locationData)),0===testIndex&&(caseLocationData=mergeLocationData(caseLocationData,kase.locationData,{justLeading:!0})),testIndex===lastTestIndex&&(caseLocationData=mergeLocationData(caseLocationData,kase.locationData,{justEnding:!0})),cases.push(new SwitchCase(test,testConsequent,{trailing:testIndex===lastTestIndex}).withLocationDataFrom({locationData:caseLocationData}))}for((null==(ref2=this.otherwise)?void 0:ref2.expressions.length)&&cases.push(new SwitchCase(null,this.otherwise).withLocationDataFrom(this.otherwise)),results1=[],(l=0,len3=cases.length);l<len3;l++)kase=cases[l],results1.push(kase.ast(o));return results1}},{key:"astProperties",value:function astProperties(o){var ref1,ref2;return{discriminant:null==(ref1=null==(ref2=this.subject)?void 0:ref2.ast(o,LEVEL_PAREN))?null:ref1,cases:this.casesAst(o)}}}]),Switch}(Base);return Switch.prototype.children=["subject","cases","otherwise"],Switch.prototype.isStatement=YES,Switch}.call(this),SwitchCase=function(){var SwitchCase=function(_Base58){"use strict";function SwitchCase(test1,block1){var _ref66=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},trailing=_ref66.trailing,_this82;return _classCallCheck(this,SwitchCase),_this82=_possibleConstructorReturn(this,_getPrototypeOf(SwitchCase).call(this)),_this82.test=test1,_this82.block=block1,_this82.trailing=trailing,_this82}return _inherits(SwitchCase,_Base58),_createClass(SwitchCase,[{key:"astProperties",value:function astProperties(o){var ref1,ref2,ref3,ref4;return{test:null==(ref1=null==(ref2=this.test)?void 0:ref2.ast(o,LEVEL_PAREN))?null:ref1,consequent:null==(ref3=null==(ref4=this.block)?void 0:ref4.ast(o,LEVEL_TOP).body)?[]:ref3,trailing:!!this.trailing}}}]),SwitchCase}(Base);return SwitchCase.prototype.children=["test","block"],SwitchCase}.call(this),exports.SwitchWhen=SwitchWhen=function(){var SwitchWhen=function(_Base59){"use strict";function SwitchWhen(conditions1,block1){var _this83;return _classCallCheck(this,SwitchWhen),_this83=_possibleConstructorReturn(this,_getPrototypeOf(SwitchWhen).call(this)),_this83.conditions=conditions1,_this83.block=block1,_this83}return _inherits(SwitchWhen,_Base59),SwitchWhen}(Base);return SwitchWhen.prototype.children=["conditions","block"],SwitchWhen}.call(this),exports.If=If=function(){var If=function(_Base60){"use strict";function If(condition1,body1){var options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},_this84;return _classCallCheck(this,If),_this84=_possibleConstructorReturn(this,_getPrototypeOf(If).call(this)),_this84.condition=condition1,_this84.body=body1,_this84.elseBody=null,_this84.isChain=!1,_this84.soak=options.soak,_this84.postfix=options.postfix,_this84.type=options.type,_this84.condition.comments&&moveComments(_this84.condition,_assertThisInitialized(_this84)),_this84}return _inherits(If,_Base60),_createClass(If,[{key:"bodyNode",value:function bodyNode(){var ref1;return null==(ref1=this.body)?void 0:ref1.unwrap()}},{key:"elseBodyNode",value:function elseBodyNode(){var ref1;return null==(ref1=this.elseBody)?void 0:ref1.unwrap()}},{key:"addElse",value:function addElse(elseBody){return this.isChain?(this.elseBodyNode().addElse(elseBody),this.locationData=mergeLocationData(this.locationData,this.elseBodyNode().locationData)):(this.isChain=elseBody instanceof If,this.elseBody=this.ensureBlock(elseBody),this.elseBody.updateLocationDataIfMissing(elseBody.locationData),null!=this.locationData&&null!=this.elseBody.locationData&&(this.locationData=mergeLocationData(this.locationData,this.elseBody.locationData))),this}},{key:"isStatement",value:function isStatement(o){var ref1;return(null==o?void 0:o.level)===LEVEL_TOP||this.bodyNode().isStatement(o)||(null==(ref1=this.elseBodyNode())?void 0:ref1.isStatement(o))}},{key:"jumps",value:function jumps(o){var ref1;return this.body.jumps(o)||(null==(ref1=this.elseBody)?void 0:ref1.jumps(o))}},{key:"compileNode",value:function compileNode(o){return this.isStatement(o)?this.compileStatement(o):this.compileExpression(o)}},{key:"makeReturn",value:function makeReturn(results,mark){var ref1,ref2;return mark?(null!=(ref1=this.body)&&ref1.makeReturn(results,mark),void(null!=(ref2=this.elseBody)&&ref2.makeReturn(results,mark))):(results&&(this.elseBody||(this.elseBody=new Block([new Literal("void 0")]))),this.body&&(this.body=new Block([this.body.makeReturn(results)])),this.elseBody&&(this.elseBody=new Block([this.elseBody.makeReturn(results)])),this)}},{key:"ensureBlock",value:function ensureBlock(node){return node instanceof Block?node:new Block([node])}},{key:"compileStatement",value:function compileStatement(o){var answer,body,child,cond,exeq,ifPart,indent;return(child=del(o,"chainChild"),exeq=del(o,"isExistentialEquals"),exeq)?new If(this.processedCondition().invert(),this.elseBodyNode(),{type:"if"}).compileToFragments(o):(indent=o.indent+TAB,cond=this.processedCondition().compileToFragments(o,LEVEL_PAREN),body=this.ensureBlock(this.body).compileToFragments(merge(o,{indent:indent})),ifPart=[].concat(this.makeCode("if ("),cond,this.makeCode(") {\n"),body,this.makeCode("\n".concat(this.tab,"}"))),child||ifPart.unshift(this.makeCode(this.tab)),!this.elseBody)?ifPart:(answer=ifPart.concat(this.makeCode(" else ")),this.isChain?(o.chainChild=!0,answer=answer.concat(this.elseBody.unwrap().compileToFragments(o,LEVEL_TOP))):answer=answer.concat(this.makeCode("{\n"),this.elseBody.compileToFragments(merge(o,{indent:indent}),LEVEL_TOP),this.makeCode("\n".concat(this.tab,"}"))),answer)}},{key:"compileExpression",value:function compileExpression(o){var alt,body,cond,fragments;return cond=this.processedCondition().compileToFragments(o,LEVEL_COND),body=this.bodyNode().compileToFragments(o,LEVEL_LIST),alt=this.elseBodyNode()?this.elseBodyNode().compileToFragments(o,LEVEL_LIST):[this.makeCode("void 0")],fragments=cond.concat(this.makeCode(" ? "),body,this.makeCode(" : "),alt),o.level>=LEVEL_COND?this.wrapInParentheses(fragments):fragments}},{key:"unfoldSoak",value:function unfoldSoak(){return this.soak&&this}},{key:"processedCondition",value:function processedCondition(){return null==this.processedConditionCache?this.processedConditionCache="unless"===this.type?this.condition.invert():this.condition:this.processedConditionCache}},{key:"isStatementAst",value:function isStatementAst(o){return o.level===LEVEL_TOP}},{key:"astType",value:function astType(o){return this.isStatementAst(o)?"IfStatement":"ConditionalExpression"}},{key:"astProperties",value:function astProperties(o){var isStatement,ref1,ref2,ref3,ref4;return isStatement=this.isStatementAst(o),{test:this.condition.ast(o,isStatement?LEVEL_PAREN:LEVEL_COND),consequent:isStatement?this.body.ast(o,LEVEL_TOP):this.bodyNode().ast(o,LEVEL_TOP),alternate:this.isChain?this.elseBody.unwrap().ast(o,isStatement?LEVEL_TOP:LEVEL_COND):isStatement||1!==(null==(ref1=this.elseBody)||null==(ref2=ref1.expressions)?void 0:ref2.length)?null==(ref3=null==(ref4=this.elseBody)?void 0:ref4.ast(o,LEVEL_TOP))?null:ref3:this.elseBody.expressions[0].ast(o,LEVEL_TOP),postfix:!!this.postfix,inverted:"unless"===this.type}}}]),If}(Base);return If.prototype.children=["condition","body","elseBody"],If}.call(this),exports.Sequence=Sequence=function(){var Sequence=function(_Base61){"use strict";function Sequence(expressions1){var _this85;return _classCallCheck(this,Sequence),_this85=_possibleConstructorReturn(this,_getPrototypeOf(Sequence).call(this)),_this85.expressions=expressions1,_this85}return _inherits(Sequence,_Base61),_createClass(Sequence,[{key:"astNode",value:function astNode(o){return 1===this.expressions.length?this.expressions[0].ast(o):_get(_getPrototypeOf(Sequence.prototype),"astNode",this).call(this,o)}},{key:"astType",value:function astType(){return"SequenceExpression"}},{key:"astProperties",value:function astProperties(o){var expression;return{expressions:function(){var j,len1,ref1,results1;for(ref1=this.expressions,results1=[],(j=0,len1=ref1.length);j<len1;j++)expression=ref1[j],results1.push(expression.ast(o));return results1}.call(this)}}}]),Sequence}(Base);return Sequence.prototype.children=["expressions"],Sequence}.call(this),UTILITIES={modulo:function modulo(){return"function(a, b) { return (+a % (b = +b) + b) % b; }"},boundMethodCheck:function boundMethodCheck(){return"function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } }"},hasProp:function hasProp(){return"{}.hasOwnProperty"},indexOf:function(){return"[].indexOf"},slice:function slice(){return"[].slice"},splice:function(){return"[].splice"}},LEVEL_TOP=1,LEVEL_PAREN=2,LEVEL_LIST=3,LEVEL_COND=4,LEVEL_OP=5,LEVEL_ACCESS=6,TAB="  ",SIMPLENUM=/^[+-]?\d+$/,SIMPLE_STRING_OMIT=/\s*\n\s*/g,LEADING_BLANK_LINE=/^[^\n\S]*\n/,TRAILING_BLANK_LINE=/\n[^\n\S]*$/,STRING_OMIT=/((?:\\\\)+)|\\[^\S\n]*\n\s*/g,HEREGEX_OMIT=/((?:\\\\)+)|\\(\s)|\s+(?:#.*)?/g,utility=function(name,o){var ref,root;return root=o.scope.root,name in root.utilities?root.utilities[name]:(ref=root.freeVariable(name),root.assign(ref,UTILITIES[name](o)),root.utilities[name]=ref)},multident=function(code,tab){var includingFirstLine=!(2<arguments.length&&void 0!==arguments[2])||arguments[2],endsWithNewLine;return endsWithNewLine="\n"===code[code.length-1],code=(includingFirstLine?tab:"")+code.replace(/\n/g,"$&".concat(tab)),code=code.replace(/\s+$/,""),endsWithNewLine&&(code+="\n"),code},indentInitial=function(fragments,node){var fragment,fragmentIndex,j,len1;for(fragmentIndex=j=0,len1=fragments.length;j<len1;fragmentIndex=++j)if(fragment=fragments[fragmentIndex],fragment.isHereComment)fragment.code=multident(fragment.code,node.tab);else{fragments.splice(fragmentIndex,0,node.makeCode("".concat(node.tab)));break}return fragments},hasLineComments=function(node){var comment,j,len1,ref1;if(!node.comments)return!1;for(ref1=node.comments,j=0,len1=ref1.length;j<len1;j++)if(comment=ref1[j],!1===comment.here)return!0;return!1},moveComments=function(from,to){if(null!=from&&from.comments)return attachCommentsToNode(from.comments,to),delete from.comments},unshiftAfterComments=function(fragments,fragmentToInsert){var fragment,fragmentIndex,inserted,j,len1;for(inserted=!1,fragmentIndex=j=0,len1=fragments.length;j<len1;fragmentIndex=++j)if(fragment=fragments[fragmentIndex],!!!fragment.isComment){fragments.splice(fragmentIndex,0,fragmentToInsert),inserted=!0;break}return inserted||fragments.push(fragmentToInsert),fragments},isLiteralArguments=function(node){return node instanceof IdentifierLiteral&&"arguments"===node.value},isLiteralThis=function(node){return node instanceof ThisLiteral||node instanceof Code&&node.bound},shouldCacheOrIsAssignable=function(node){return node.shouldCache()||("function"==typeof node.isAssignable?node.isAssignable():void 0)},_unfoldSoak=function(o,parent,name){var ifn;if(ifn=parent[name].unfoldSoak(o))return parent[name]=ifn.body,ifn.body=new Value(parent),ifn},makeDelimitedLiteral=function(body){var _ref67=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},delimiterOption=_ref67.delimiter,escapeNewlines=_ref67.escapeNewlines,_double2=_ref67.double,_ref67$includeDelimit=_ref67.includeDelimiters,_ref67$escapeDelimite=_ref67.escapeDelimiter,escapeDelimiter=void 0===_ref67$escapeDelimite||_ref67$escapeDelimite,convertTrailingNullEscapes=_ref67.convertTrailingNullEscapes,escapeTemplateLiteralCurlies,printedDelimiter,regex;return""===body&&"/"===delimiterOption&&(body="(?:)"),escapeTemplateLiteralCurlies="`"===delimiterOption,regex=RegExp("(\\\\\\\\)|(\\\\0(?=\\d))".concat(convertTrailingNullEscapes?/|(\\0)$/.source:"").concat(escapeDelimiter?RegExp("|\\\\?(".concat(delimiterOption,")")).source:"").concat(escapeTemplateLiteralCurlies?/|\\?(\$\{)/.source:"","|\\\\?(?:").concat(escapeNewlines?"(\n)|":"","(\\r)|(\\u2028)|(\\u2029))|(\\\\.)"),"g"),body=body.replace(regex,function(match,backslash,nul){for(var _len2=arguments.length,args=Array(3<_len2?_len2-3:0),_key2=3,cr,delimiter,lf,ls,other,ps,templateLiteralCurly,trailingNullEscape;_key2<_len2;_key2++)args[_key2-3]=arguments[_key2];switch(trailingNullEscape=convertTrailingNullEscapes?args.shift():void 0,delimiter=escapeDelimiter?args.shift():void 0,templateLiteralCurly=escapeTemplateLiteralCurlies?args.shift():void 0,lf=escapeNewlines?args.shift():void 0,cr=args[0],ls=args[1],ps=args[2],other=args[3],!1){case!backslash:return _double2?backslash+backslash:backslash;case!nul:return"\\x00";case!trailingNullEscape:return"\\x00";case!delimiter:return"\\".concat(delimiter);case!templateLiteralCurly:return"\\${";case!lf:return"\\n";case!cr:return"\\r";case!ls:return"\\u2028";case!ps:return"\\u2029";case!other:return _double2?"\\".concat(other):other;}}),printedDelimiter=void 0===_ref67$includeDelimit||_ref67$includeDelimit?delimiterOption:"","".concat(printedDelimiter).concat(body).concat(printedDelimiter)},sniffDirectives=function(expressions){var _ref68=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},notFinalExpression=_ref68.notFinalExpression,expression,index,lastIndex,results1,unwrapped;for(index=0,lastIndex=expressions.length-1,results1=[];index<=lastIndex&&!(index===lastIndex&&notFinalExpression);){if(expression=expressions[index],(unwrapped=null==expression?void 0:"function"==typeof expression.unwrap?expression.unwrap():void 0)instanceof PassthroughLiteral&&unwrapped.generated){index++;continue}if(!(expression instanceof Value&&expression.isString()&&!expression.unwrap().shouldGenerateTemplateLiteral()))break;expressions[index]=new Directive(expression).withLocationDataFrom(expression),results1.push(index++)}return results1},astAsBlockIfNeeded=function(node,o){var unwrapped;return unwrapped=node.unwrap(),unwrapped instanceof Block&&1<unwrapped.expressions.length?(unwrapped.makeReturn(null,!0),unwrapped.ast(o,LEVEL_TOP)):node.ast(o,LEVEL_PAREN)},lesser=function(a,b){return a<b?a:b},greater=function(a,b){return a>b?a:b},isAstLocGreater=function(a,b){return!!(a.line>b.line)||a.line===b.line&&a.column>b.column},isLocationDataStartGreater=function(a,b){return!!(a.first_line>b.first_line)||a.first_line===b.first_line&&a.first_column>b.first_column},isLocationDataEndGreater=function(a,b){return!!(a.last_line>b.last_line)||a.last_line===b.last_line&&a.last_column>b.last_column},exports.mergeLocationData=mergeLocationData=function(locationDataA,locationDataB){var _ref69=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},justLeading=_ref69.justLeading,justEnding=_ref69.justEnding;return Object.assign(justEnding?{first_line:locationDataA.first_line,first_column:locationDataA.first_column}:isLocationDataStartGreater(locationDataA,locationDataB)?{first_line:locationDataB.first_line,first_column:locationDataB.first_column}:{first_line:locationDataA.first_line,first_column:locationDataA.first_column},justLeading?{last_line:locationDataA.last_line,last_column:locationDataA.last_column,last_line_exclusive:locationDataA.last_line_exclusive,last_column_exclusive:locationDataA.last_column_exclusive}:isLocationDataEndGreater(locationDataA,locationDataB)?{last_line:locationDataA.last_line,last_column:locationDataA.last_column,last_line_exclusive:locationDataA.last_line_exclusive,last_column_exclusive:locationDataA.last_column_exclusive}:{last_line:locationDataB.last_line,last_column:locationDataB.last_column,last_line_exclusive:locationDataB.last_line_exclusive,last_column_exclusive:locationDataB.last_column_exclusive},{range:[justEnding?locationDataA.range[0]:lesser(locationDataA.range[0],locationDataB.range[0]),justLeading?locationDataA.range[1]:greater(locationDataA.range[1],locationDataB.range[1])]})},exports.mergeAstLocationData=mergeAstLocationData=function(nodeA,nodeB){var _ref70=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},justLeading=_ref70.justLeading,justEnding=_ref70.justEnding;return{loc:{start:justEnding?nodeA.loc.start:isAstLocGreater(nodeA.loc.start,nodeB.loc.start)?nodeB.loc.start:nodeA.loc.start,end:justLeading?nodeA.loc.end:isAstLocGreater(nodeA.loc.end,nodeB.loc.end)?nodeA.loc.end:nodeB.loc.end},range:[justEnding?nodeA.range[0]:lesser(nodeA.range[0],nodeB.range[0]),justLeading?nodeA.range[1]:greater(nodeA.range[1],nodeB.range[1])],start:justEnding?nodeA.start:lesser(nodeA.start,nodeB.start),end:justLeading?nodeA.end:greater(nodeA.end,nodeB.end)}},exports.jisonLocationDataToAstLocationData=jisonLocationDataToAstLocationData=function(_ref71){var first_line=_ref71.first_line,first_column=_ref71.first_column,last_line_exclusive=_ref71.last_line_exclusive,last_column_exclusive=_ref71.last_column_exclusive,range=_ref71.range;return{loc:{start:{line:first_line+1,column:first_column},end:{line:last_line_exclusive+1,column:last_column_exclusive}},range:[range[0],range[1]],start:range[0],end:range[1]}},zeroWidthLocationDataFromEndLocation=function(_ref72){var _ref72$range=_slicedToArray(_ref72.range,2),endRange=_ref72$range[1],last_line_exclusive=_ref72.last_line_exclusive,last_column_exclusive=_ref72.last_column_exclusive;return{first_line:last_line_exclusive,first_column:last_column_exclusive,last_line:last_line_exclusive,last_column:last_column_exclusive,last_line_exclusive:last_line_exclusive,last_column_exclusive:last_column_exclusive,range:[endRange,endRange]}},extractSameLineLocationDataFirst=function(numChars){return function(_ref73){var _ref73$range=_slicedToArray(_ref73.range,1),startRange=_ref73$range[0],first_line=_ref73.first_line,first_column=_ref73.first_column;return{first_line:first_line,first_column:first_column,last_line:first_line,last_column:first_column+numChars-1,last_line_exclusive:first_line,last_column_exclusive:first_column+numChars,range:[startRange,startRange+numChars]}}},extractSameLineLocationDataLast=function(numChars){return function(_ref74){var _ref74$range=_slicedToArray(_ref74.range,2),endRange=_ref74$range[1],last_line=_ref74.last_line,last_column=_ref74.last_column,last_line_exclusive=_ref74.last_line_exclusive,last_column_exclusive=_ref74.last_column_exclusive;return{first_line:last_line,first_column:last_column-(numChars-1),last_line:last_line,last_column:last_column,last_line_exclusive:last_line_exclusive,last_column_exclusive:last_column_exclusive,range:[endRange-numChars,endRange]}}},emptyExpressionLocationData=function(_ref75){var element=_ref75.interpolationNode,openingBrace=_ref75.openingBrace,closingBrace=_ref75.closingBrace;return{first_line:element.locationData.first_line,first_column:element.locationData.first_column+openingBrace.length,last_line:element.locationData.last_line,last_column:element.locationData.last_column-closingBrace.length,last_line_exclusive:element.locationData.last_line,last_column_exclusive:element.locationData.last_column,range:[element.locationData.range[0]+openingBrace.length,element.locationData.range[1]-closingBrace.length]}}}.call(this),{exports:exports}.exports}(),require["./sourcemap"]=function(){var module={exports:{}};return function(){var LineMap,SourceMap;LineMap=function(){"use strict";function LineMap(line1){_classCallCheck(this,LineMap),this.line=line1,this.columns=[]}return _createClass(LineMap,[{key:"add",value:function add(column,_ref76){var _ref77=_slicedToArray(_ref76,2),sourceLine=_ref77[0],sourceColumn=_ref77[1],options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};return this.columns[column]&&options.noReplace?void 0:this.columns[column]={line:this.line,column:column,sourceLine:sourceLine,sourceColumn:sourceColumn}}},{key:"sourceLocation",value:function sourceLocation(column){for(var mapping;!((mapping=this.columns[column])||0>=column);)column--;return mapping&&[mapping.sourceLine,mapping.sourceColumn]}}]),LineMap}(),SourceMap=function(){var SourceMap=function(){"use strict";function SourceMap(){_classCallCheck(this,SourceMap),this.lines=[]}return _createClass(SourceMap,[{key:"add",value:function add(sourceLocation,generatedLocation){var options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},_generatedLocation=_slicedToArray(generatedLocation,2),base,column,line,lineMap;return line=_generatedLocation[0],column=_generatedLocation[1],lineMap=(base=this.lines)[line]||(base[line]=new LineMap(line)),lineMap.add(column,sourceLocation,options)}},{key:"sourceLocation",value:function sourceLocation(_ref78){for(var _ref79=_slicedToArray(_ref78,2),line=_ref79[0],column=_ref79[1],lineMap;!((lineMap=this.lines[line])||0>=line);)line--;return lineMap&&lineMap.sourceLocation(column)}},{key:"generate",value:function generate(){var options=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},code=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null,buffer,i,j,lastColumn,lastSourceColumn,lastSourceLine,len,len1,lineMap,lineNumber,mapping,needComma,ref,ref1,sources,v3,writingline;for(writingline=0,lastColumn=0,lastSourceLine=0,lastSourceColumn=0,needComma=!1,buffer="",ref=this.lines,(lineNumber=i=0,len=ref.length);i<len;lineNumber=++i)if(lineMap=ref[lineNumber],lineMap)for(ref1=lineMap.columns,j=0,len1=ref1.length;j<len1;j++)if(mapping=ref1[j],!!mapping){for(;writingline<mapping.line;)lastColumn=0,needComma=!1,buffer+=";",writingline++;needComma&&(buffer+=",",needComma=!1),buffer+=this.encodeVlq(mapping.column-lastColumn),lastColumn=mapping.column,buffer+=this.encodeVlq(0),buffer+=this.encodeVlq(mapping.sourceLine-lastSourceLine),lastSourceLine=mapping.sourceLine,buffer+=this.encodeVlq(mapping.sourceColumn-lastSourceColumn),lastSourceColumn=mapping.sourceColumn,needComma=!0}return sources=options.sourceFiles?options.sourceFiles:options.filename?[options.filename]:["<anonymous>"],v3={version:3,file:options.generatedFile||"",sourceRoot:options.sourceRoot||"",sources:sources,names:[],mappings:buffer},(options.sourceMap||options.inlineMap)&&(v3.sourcesContent=[code]),v3}},{key:"encodeVlq",value:function encodeVlq(value){var answer,nextChunk,signBit,valueToEncode;for(answer="",signBit=0>value?1:0,valueToEncode=(_Mathabs(value)<<1)+signBit;valueToEncode||!answer;)nextChunk=valueToEncode&VLQ_VALUE_MASK,valueToEncode>>=VLQ_SHIFT,valueToEncode&&(nextChunk|=VLQ_CONTINUATION_BIT),answer+=this.encodeBase64(nextChunk);return answer}},{key:"encodeBase64",value:function encodeBase64(value){return BASE64_CHARS[value]||function(){throw new Error("Cannot Base64 encode value: ".concat(value))}()}}]),SourceMap}(),BASE64_CHARS,VLQ_CONTINUATION_BIT,VLQ_SHIFT,VLQ_VALUE_MASK;return VLQ_SHIFT=5,VLQ_CONTINUATION_BIT=1<<VLQ_SHIFT,VLQ_VALUE_MASK=VLQ_CONTINUATION_BIT-1,BASE64_CHARS="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",SourceMap}.call(this),module.exports=SourceMap}.call(this),module.exports}(),require["./coffeescript"]=function(){var exports={};return function(){var indexOf=[].indexOf,_require7=require("./lexer"),FILE_EXTENSIONS,Lexer,SourceMap,base64encode,checkShebangLine,compile,formatSourcePosition,getSourceMap,helpers,lexer,packageJson,parser,registerCompiled,sourceMaps,sources,withPrettyErrors;Lexer=_require7.Lexer;var _require8=require("./parser");parser=_require8.parser,helpers=require("./helpers"),SourceMap=require("./sourcemap"),packageJson=require("../../package.json"),exports.VERSION=packageJson.version,exports.FILE_EXTENSIONS=FILE_EXTENSIONS=[".coffee",".litcoffee",".coffee.md"],exports.helpers=helpers,base64encode=function(src){switch(!1){case"function"!=typeof Buffer:return Buffer.from(src).toString("base64");case"function"!=typeof btoa:return btoa(encodeURIComponent(src).replace(/%([0-9A-F]{2})/g,function(match,p1){return _StringfromCharCode("0x"+p1)}));default:throw new Error("Unable to base64 encode inline sourcemap.");}},withPrettyErrors=function(fn){return function(code){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},err;try{return fn.call(this,code,options)}catch(error){if(err=error,"string"!=typeof code)throw err;throw helpers.updateSyntaxError(err,code,options.filename)}}},sources={},sourceMaps={},exports.registerCompiled=registerCompiled=function(filename,source,sourcemap){if(null==sources[filename]&&(sources[filename]=[]),sources[filename].push(source),null!=sourcemap)return null==sourceMaps[filename]&&(sourceMaps[filename]=[]),sourceMaps[filename].push(sourcemap)},exports.compile=compile=withPrettyErrors(function(code){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},ast,currentColumn,currentLine,encoded,filename,fragment,fragments,generateSourceMap,header,i,j,js,len,len1,map,newLines,nodes,range,ref,ref1,sourceCodeLastLine,sourceCodeNumberOfLines,sourceMapDataURI,sourceURL,token,tokens,transpiler,transpilerOptions,transpilerOutput,v3SourceMap;if(options=Object.assign({},options),generateSourceMap=options.sourceMap||options.inlineMap||null==options.filename,filename=options.filename||"<anonymous>",checkShebangLine(filename,code),generateSourceMap&&(map=new SourceMap),tokens=lexer.tokenize(code,options),options.referencedVars=function(){var i,len,results;for(results=[],i=0,len=tokens.length;i<len;i++)token=tokens[i],"IDENTIFIER"===token[0]&&results.push(token[1]);return results}(),null==options.bare||!0!==options.bare)for(i=0,len=tokens.length;i<len;i++)if(token=tokens[i],"IMPORT"===(ref=token[0])||"EXPORT"===ref){options.bare=!0;break}if(nodes=parser.parse(tokens),options.ast)return nodes.allCommentTokens=helpers.extractAllCommentTokens(tokens),sourceCodeNumberOfLines=(code.match(/\r?\n/g)||"").length+1,sourceCodeLastLine=/.*$/.exec(code)[0],ast=nodes.ast(options),range=[0,code.length],ast.start=ast.program.start=range[0],ast.end=ast.program.end=range[1],ast.range=ast.program.range=range,ast.loc.start=ast.program.loc.start={line:1,column:0},ast.loc.end.line=ast.program.loc.end.line=sourceCodeNumberOfLines,ast.loc.end.column=ast.program.loc.end.column=sourceCodeLastLine.length,ast.tokens=tokens,ast;for(fragments=nodes.compileToFragments(options),currentLine=0,options.header&&(currentLine+=1),options.shiftLine&&(currentLine+=1),currentColumn=0,js="",(j=0,len1=fragments.length);j<len1;j++)fragment=fragments[j],generateSourceMap&&(fragment.locationData&&!/^[;\s]*$/.test(fragment.code)&&map.add([fragment.locationData.first_line,fragment.locationData.first_column],[currentLine,currentColumn],{noReplace:!0}),newLines=helpers.count(fragment.code,"\n"),currentLine+=newLines,newLines?currentColumn=fragment.code.length-(fragment.code.lastIndexOf("\n")+1):currentColumn+=fragment.code.length),js+=fragment.code;if(options.header&&(header="Generated by CoffeeScript ".concat(this.VERSION),js="// ".concat(header,"\n").concat(js)),generateSourceMap&&(v3SourceMap=map.generate(options,code)),options.transpile){if("object"!==_typeof(options.transpile))throw new Error("The transpile option must be given an object with options to pass to Babel");transpiler=options.transpile.transpile,delete options.transpile.transpile,transpilerOptions=Object.assign({},options.transpile),v3SourceMap&&null==transpilerOptions.inputSourceMap&&(transpilerOptions.inputSourceMap=v3SourceMap),transpilerOutput=transpiler(js,transpilerOptions),js=transpilerOutput.code,v3SourceMap&&transpilerOutput.map&&(v3SourceMap=transpilerOutput.map)}return options.inlineMap&&(encoded=base64encode(JSON.stringify(v3SourceMap)),sourceMapDataURI="//# sourceMappingURL=data:application/json;base64,".concat(encoded),sourceURL="//# sourceURL=".concat(null==(ref1=options.filename)?"coffeescript":ref1),js="".concat(js,"\n").concat(sourceMapDataURI,"\n").concat(sourceURL)),registerCompiled(filename,code,map),options.sourceMap?{js:js,sourceMap:map,v3SourceMap:JSON.stringify(v3SourceMap,null,2)}:js}),exports.tokens=withPrettyErrors(function(code,options){return lexer.tokenize(code,options)}),exports.nodes=withPrettyErrors(function(source,options){return"string"==typeof source&&(source=lexer.tokenize(source,options)),parser.parse(source)}),exports.run=exports.eval=exports.register=function(){throw new Error("require index.coffee, not this file")},lexer=new Lexer,parser.lexer={yylloc:{range:[]},options:{ranges:!0},lex:function lex(){var tag,token;if(token=parser.tokens[this.pos++],token){var _token6=token,_token7=_slicedToArray(_token6,3);tag=_token7[0],this.yytext=_token7[1],this.yylloc=_token7[2],parser.errorToken=token.origin||token,this.yylineno=this.yylloc.first_line}else tag="";return tag},setInput:function setInput(tokens){return parser.tokens=tokens,this.pos=0},upcomingInput:function upcomingInput(){return""}},parser.yy=require("./nodes"),parser.yy.parseError=function(message,_ref80){var token=_ref80.token,_parser=parser,errorLoc,errorTag,errorText,errorToken,tokens;errorToken=_parser.errorToken,tokens=_parser.tokens;var _errorToken=errorToken,_errorToken2=_slicedToArray(_errorToken,3);return errorTag=_errorToken2[0],errorText=_errorToken2[1],errorLoc=_errorToken2[2],errorText=function(){switch(!1){case errorToken!==tokens[tokens.length-1]:return"end of input";case"INDENT"!==errorTag&&"OUTDENT"!==errorTag:return"indentation";case"IDENTIFIER"!==errorTag&&"NUMBER"!==errorTag&&"INFINITY"!==errorTag&&"STRING"!==errorTag&&"STRING_START"!==errorTag&&"REGEX"!==errorTag&&"REGEX_START"!==errorTag:return errorTag.replace(/_START$/,"").toLowerCase();default:return helpers.nameWhitespaceCharacter(errorText);}}(),helpers.throwSyntaxError("unexpected ".concat(errorText),errorLoc)},formatSourcePosition=function(frame,getSourceMapping){var as,column,fileLocation,filename,functionName,isConstructor,isMethodCall,line,methodName,source,tp,typeName;return filename=void 0,fileLocation="",frame.isNative()?fileLocation="native":(frame.isEval()?(filename=frame.getScriptNameOrSourceURL(),!filename&&(fileLocation="".concat(frame.getEvalOrigin(),", "))):filename=frame.getFileName(),filename||(filename="<anonymous>"),line=frame.getLineNumber(),column=frame.getColumnNumber(),source=getSourceMapping(filename,line,column),fileLocation=source?"".concat(filename,":").concat(source[0],":").concat(source[1]):"".concat(filename,":").concat(line,":").concat(column)),functionName=frame.getFunctionName(),isConstructor=frame.isConstructor(),isMethodCall=!(frame.isToplevel()||isConstructor),isMethodCall?(methodName=frame.getMethodName(),typeName=frame.getTypeName(),functionName?(tp=as="",typeName&&functionName.indexOf(typeName)&&(tp="".concat(typeName,".")),methodName&&functionName.indexOf(".".concat(methodName))!==functionName.length-methodName.length-1&&(as=" [as ".concat(methodName,"]")),"".concat(tp).concat(functionName).concat(as," (").concat(fileLocation,")")):"".concat(typeName,".").concat(methodName||"<anonymous>"," (").concat(fileLocation,")")):isConstructor?"new ".concat(functionName||"<anonymous>"," (").concat(fileLocation,")"):functionName?"".concat(functionName," (").concat(fileLocation,")"):fileLocation},getSourceMap=function(filename,line,column){var answer,i,map,ref,ref1,sourceLocation;if(!("<anonymous>"===filename||(ref=filename.slice(filename.lastIndexOf(".")),0<=indexOf.call(FILE_EXTENSIONS,ref))))return null;if("<anonymous>"!==filename&&null!=sourceMaps[filename])return sourceMaps[filename][sourceMaps[filename].length-1];if(null!=sourceMaps["<anonymous>"])for(ref1=sourceMaps["<anonymous>"],i=ref1.length-1;0<=i;i+=-1)if(map=ref1[i],sourceLocation=map.sourceLocation([line-1,column-1]),null!=(null==sourceLocation?void 0:sourceLocation[0])&&null!=sourceLocation[1])return map;return null==sources[filename]?null:(answer=compile(sources[filename][sources[filename].length-1],{filename:filename,sourceMap:!0,literate:helpers.isLiterate(filename)}),answer.sourceMap)},Error.prepareStackTrace=function(err,stack){var frame,frames,getSourceMapping;return getSourceMapping=function(filename,line,column){var answer,sourceMap;return sourceMap=getSourceMap(filename,line,column),null!=sourceMap&&(answer=sourceMap.sourceLocation([line-1,column-1])),null==answer?null:[answer[0]+1,answer[1]+1]},frames=function(){var i,len,results;for(results=[],i=0,len=stack.length;i<len&&(frame=stack[i],frame.getFunction()!==exports.run);i++)results.push("    at ".concat(formatSourcePosition(frame,getSourceMapping)));return results}(),"".concat(err.toString(),"\n").concat(frames.join("\n"),"\n")},checkShebangLine=function(file,input){var args,firstLine,ref,rest;if(firstLine=input.split(/$/m)[0],rest=null==firstLine?void 0:firstLine.match(/^#!\s*([^\s]+\s*)(.*)/),args=null==rest||null==(ref=rest[2])?void 0:ref.split(/\s/).filter(function(s){return""!==s}),1<(null==args?void 0:args.length))return console.error("The script to be run begins with a shebang line with more than one\nargument. This script will fail on platforms such as Linux which only\nallow a single argument."),console.error("The shebang line was: '".concat(firstLine,"' in file '").concat(file,"'")),console.error("The arguments were: ".concat(JSON.stringify(args)))}}.call(this),{exports:exports}.exports}(),require["./browser"]=function(){var module={exports:{}};return function(){var indexOf=[].indexOf,CoffeeScript,compile;CoffeeScript=require("./coffeescript");var _CoffeeScript=CoffeeScript;compile=_CoffeeScript.compile,CoffeeScript.eval=function(code){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},globalRoot;return null==options.bare&&(options.bare=!0),globalRoot="undefined"!=typeof window&&null!==window?window:__webpack_require__.g,globalRoot.eval(compile(code,options))},CoffeeScript.run=function(code){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};return options.bare=!0,options.shiftLine=!0,Function(compile(code,options))()},module.exports=CoffeeScript,"undefined"==typeof window||null===window||("undefined"!=typeof btoa&&null!==btoa&&"undefined"!=typeof JSON&&null!==JSON&&(compile=function(code){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};return options.inlineMap=!0,CoffeeScript.compile(code,options)}),CoffeeScript.load=function(url,callback){var options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},hold=!!(3<arguments.length&&void 0!==arguments[3])&&arguments[3],xhr;return options.sourceFiles=[url],xhr=window.ActiveXObject?new window.ActiveXObject("Microsoft.XMLHTTP"):new window.XMLHttpRequest,xhr.open("GET",url,!0),"overrideMimeType"in xhr&&xhr.overrideMimeType("text/plain"),xhr.onreadystatechange=function(){var param,ref;if(4===xhr.readyState){if(0!==(ref=xhr.status)&&200!==ref)throw new Error("Could not load ".concat(url));else if(param=[xhr.responseText,options],!hold){var _CoffeeScript2;(_CoffeeScript2=CoffeeScript).run.apply(_CoffeeScript2,_toConsumableArray(param))}if(callback)return callback(param)}},xhr.send(null)},CoffeeScript.runScripts=function(){var coffees,coffeetypes,_execute,i,index,j,len,s,script,scripts;for(scripts=window.document.getElementsByTagName("script"),coffeetypes=["text/coffeescript","text/literate-coffeescript"],coffees=function(){var j,len,ref,results;for(results=[],j=0,len=scripts.length;j<len;j++)s=scripts[j],(ref=s.type,0<=indexOf.call(coffeetypes,ref))&&results.push(s);return results}(),index=0,_execute=function execute(){var param;if(param=coffees[index],param instanceof Array){var _CoffeeScript3;return(_CoffeeScript3=CoffeeScript).run.apply(_CoffeeScript3,_toConsumableArray(param)),index++,_execute()}},(i=j=0,len=coffees.length);j<len;i=++j)script=coffees[i],function(script,i){var options,source;return options={literate:script.type===coffeetypes[1]},source=script.src||script.getAttribute("data-src"),source?(options.filename=source,CoffeeScript.load(source,function(param){return coffees[i]=param,_execute()},options,!0)):(options.filename=script.id&&""!==script.id?script.id:"coffeescript".concat(0===i?"":i),options.sourceFiles=["embedded"],coffees[i]=[script.innerHTML,options])}(script,i);return _execute()},this===window&&(window.addEventListener?window.addEventListener("DOMContentLoaded",CoffeeScript.runScripts,!1):window.attachEvent("onload",CoffeeScript.runScripts)))}.call(this),module.exports}(),require["./browser"]}(); true?!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return CoffeeScript}).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0})(this);

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/***/ ((module) => {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
( function( global, factory ) {

	"use strict";

	if (  true && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return typeof obj === "function" && typeof obj.nodeType !== "number" &&
			typeof obj.item !== "function";
	};


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.6.0",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
						[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( _i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem && elem.namespaceURI,
		docElem = elem && ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

	return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

}
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the primary Deferred
			primary = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						primary.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( primary.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return primary.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
		}

		return primary.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
				dataPriv.get( this, "events" ) || Object.create( null )
			)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
						return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
						return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();

						// Support: Chrome 86+
						// In Chrome, if an element having a focusout handler is blurred by
						// clicking outside of it, it invokes the handler synchronously. If
						// that handler calls `.remove()` on the element, the data is cleared,
						// leaving `result` undefined. We need to guard against this.
						return result && result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		// Suppress native focus or blur as it's already being fired
		// in leverageNative.
		_default: function() {
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		//
		// Support: Firefox 70+
		// Only Firefox includes border widths
		// in computed dimensions. (gh-4529)
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
				tr.style.cssText = "border:1px solid";

				// Support: Chrome 86+
				// Height set through cssText does not get applied.
				// Computed height then comes back as 0.
				tr.style.height = "1px";
				trChild.style.height = "9px";

				// Support: Android 8 Chrome 86+
				// In our bodyBackground.html iframe,
				// display for all div elements is set to "inline",
				// which causes a problem only in Android 8 Chrome 86.
				// Ensuring the div is display: block
				// gets around this issue.
				trChild.style.display = "block";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +
					parseInt( trStyle.borderTopWidth, 10 ) +
					parseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
					swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, dimension, extra );
					} ) :
					getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
				jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

				/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
					animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};

		doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || Object.create( null ) )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserErrorElem;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}

	parserErrorElem = xml && xml.getElementsByTagName( "parsererror" )[ 0 ];
	if ( !xml || parserErrorElem ) {
		jQuery.error( "Invalid XML: " + (
			parserErrorElem ?
				jQuery.map( parserErrorElem.childNodes, function( el ) {
					return el.textContent;
				} ).join( "\n" ) :
				data
		) );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} ).filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} ).map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );

originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script but not if jsonp
			if ( !isSuccess &&
				jQuery.inArray( "script", s.dataTypes ) > -1 &&
				jQuery.inArray( "json", s.dataTypes ) < 0 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
		padding: "inner" + name,
		content: type,
		"": "outer" + name
	}, function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each(
	( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	}
);




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),

/***/ "./node_modules/lodash/lodash.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/lodash.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.21';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/;

  /** Used to match a single whitespace character. */
  var reWhitespace = /\s/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */
  var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports =  true && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim(string) {
    return string
      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
      : string;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex(string) {
    var index = string.length;

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index;
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            }
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }

      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
          return object;
        }

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      var low = 0,
          high = array == null ? 0 : array.length;
      if (high === 0) {
        return 0;
      }

      value = iteratee(value);
      var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Check that cyclic values are equal.
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Check that cyclic values are equal.
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
      // and escape the comment, thus injecting code that gets evaled.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/\s/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Throw an error if a forbidden character was found in `variable`, to prevent
      // potential command injection attacks.
      else if (reForbiddenIdentifierChars.test(variable)) {
        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
      }

      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return baseTrim(string);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.slice(0, trimmedEndIndex(string) + 1);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else {}
}.call(this));


/***/ }),

/***/ "./resources/css/app.css":
/*!*******************************!*\
  !*** ./resources/css/app.css ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ ((module) => {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/sweetalert2/dist/sweetalert2.all.js":
/*!**********************************************************!*\
  !*** ./node_modules/sweetalert2/dist/sweetalert2.all.js ***!
  \**********************************************************/
/***/ (function(module) {

/*!
* sweetalert2 v10.16.6
* Released under the MIT License.
*/
(function (global, factory) {
   true ? module.exports = factory() :
  0;
}(this, function () { 'use strict';

  function _typeof(obj) {
    "@babel/helpers - typeof";

    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function (obj) {
        return typeof obj;
      };
    } else {
      _typeof = function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _construct(Parent, args, Class) {
    if (_isNativeReflectConstruct()) {
      _construct = Reflect.construct;
    } else {
      _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) _setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }

    return _construct.apply(null, arguments);
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    }

    return _assertThisInitialized(self);
  }

  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();

    return function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived),
          result;

      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;

        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }

      return _possibleConstructorReturn(this, result);
    };
  }

  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = _getPrototypeOf(object);
      if (object === null) break;
    }

    return object;
  }

  function _get(target, property, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      _get = Reflect.get;
    } else {
      _get = function _get(target, property, receiver) {
        var base = _superPropBase(target, property);

        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);

        if (desc.get) {
          return desc.get.call(receiver);
        }

        return desc.value;
      };
    }

    return _get(target, property, receiver || target);
  }

  var consolePrefix = 'SweetAlert2:';
  /**
   * Filter the unique values into a new array
   * @param arr
   */

  var uniqueArray = function uniqueArray(arr) {
    var result = [];

    for (var i = 0; i < arr.length; i++) {
      if (result.indexOf(arr[i]) === -1) {
        result.push(arr[i]);
      }
    }

    return result;
  };
  /**
   * Capitalize the first letter of a string
   * @param str
   */

  var capitalizeFirstLetter = function capitalizeFirstLetter(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
  };
  /**
   * Returns the array of object values (Object.values isn't supported in IE11)
   * @param obj
   */

  var objectValues = function objectValues(obj) {
    return Object.keys(obj).map(function (key) {
      return obj[key];
    });
  };
  /**
   * Convert NodeList to Array
   * @param nodeList
   */

  var toArray = function toArray(nodeList) {
    return Array.prototype.slice.call(nodeList);
  };
  /**
   * Standardise console warnings
   * @param message
   */

  var warn = function warn(message) {
    console.warn("".concat(consolePrefix, " ").concat(_typeof(message) === 'object' ? message.join(' ') : message));
  };
  /**
   * Standardise console errors
   * @param message
   */

  var error = function error(message) {
    console.error("".concat(consolePrefix, " ").concat(message));
  };
  /**
   * Private global state for `warnOnce`
   * @type {Array}
   * @private
   */

  var previousWarnOnceMessages = [];
  /**
   * Show a console warning, but only if it hasn't already been shown
   * @param message
   */

  var warnOnce = function warnOnce(message) {
    if (!(previousWarnOnceMessages.indexOf(message) !== -1)) {
      previousWarnOnceMessages.push(message);
      warn(message);
    }
  };
  /**
   * Show a one-time console warning about deprecated params/methods
   */

  var warnAboutDeprecation = function warnAboutDeprecation(deprecatedParam, useInstead) {
    warnOnce("\"".concat(deprecatedParam, "\" is deprecated and will be removed in the next major release. Please use \"").concat(useInstead, "\" instead."));
  };
  /**
   * If `arg` is a function, call it (with no arguments or context) and return the result.
   * Otherwise, just pass the value through
   * @param arg
   */

  var callIfFunction = function callIfFunction(arg) {
    return typeof arg === 'function' ? arg() : arg;
  };
  var hasToPromiseFn = function hasToPromiseFn(arg) {
    return arg && typeof arg.toPromise === 'function';
  };
  var asPromise = function asPromise(arg) {
    return hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);
  };
  var isPromise = function isPromise(arg) {
    return arg && Promise.resolve(arg) === arg;
  };

  var DismissReason = Object.freeze({
    cancel: 'cancel',
    backdrop: 'backdrop',
    close: 'close',
    esc: 'esc',
    timer: 'timer'
  });

  var isJqueryElement = function isJqueryElement(elem) {
    return _typeof(elem) === 'object' && elem.jquery;
  };

  var isElement = function isElement(elem) {
    return elem instanceof Element || isJqueryElement(elem);
  };

  var argsToParams = function argsToParams(args) {
    var params = {};

    if (_typeof(args[0]) === 'object' && !isElement(args[0])) {
      _extends(params, args[0]);
    } else {
      ['title', 'html', 'icon'].forEach(function (name, index) {
        var arg = args[index];

        if (typeof arg === 'string' || isElement(arg)) {
          params[name] = arg;
        } else if (arg !== undefined) {
          error("Unexpected type of ".concat(name, "! Expected \"string\" or \"Element\", got ").concat(_typeof(arg)));
        }
      });
    }

    return params;
  };

  var swalPrefix = 'swal2-';
  var prefix = function prefix(items) {
    var result = {};

    for (var i in items) {
      result[items[i]] = swalPrefix + items[i];
    }

    return result;
  };
  var swalClasses = prefix(['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'header', 'content', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error']);
  var iconTypes = prefix(['success', 'warning', 'info', 'question', 'error']);

  var getContainer = function getContainer() {
    return document.body.querySelector(".".concat(swalClasses.container));
  };
  var elementBySelector = function elementBySelector(selectorString) {
    var container = getContainer();
    return container ? container.querySelector(selectorString) : null;
  };

  var elementByClass = function elementByClass(className) {
    return elementBySelector(".".concat(className));
  };

  var getPopup = function getPopup() {
    return elementByClass(swalClasses.popup);
  };
  var getIcon = function getIcon() {
    return elementByClass(swalClasses.icon);
  };
  var getTitle = function getTitle() {
    return elementByClass(swalClasses.title);
  };
  var getContent = function getContent() {
    return elementByClass(swalClasses.content);
  };
  var getHtmlContainer = function getHtmlContainer() {
    return elementByClass(swalClasses['html-container']);
  };
  var getImage = function getImage() {
    return elementByClass(swalClasses.image);
  };
  var getProgressSteps = function getProgressSteps() {
    return elementByClass(swalClasses['progress-steps']);
  };
  var getValidationMessage = function getValidationMessage() {
    return elementByClass(swalClasses['validation-message']);
  };
  var getConfirmButton = function getConfirmButton() {
    return elementBySelector(".".concat(swalClasses.actions, " .").concat(swalClasses.confirm));
  };
  var getDenyButton = function getDenyButton() {
    return elementBySelector(".".concat(swalClasses.actions, " .").concat(swalClasses.deny));
  };
  var getInputLabel = function getInputLabel() {
    return elementByClass(swalClasses['input-label']);
  };
  var getLoader = function getLoader() {
    return elementBySelector(".".concat(swalClasses.loader));
  };
  var getCancelButton = function getCancelButton() {
    return elementBySelector(".".concat(swalClasses.actions, " .").concat(swalClasses.cancel));
  };
  var getActions = function getActions() {
    return elementByClass(swalClasses.actions);
  };
  var getHeader = function getHeader() {
    return elementByClass(swalClasses.header);
  };
  var getFooter = function getFooter() {
    return elementByClass(swalClasses.footer);
  };
  var getTimerProgressBar = function getTimerProgressBar() {
    return elementByClass(swalClasses['timer-progress-bar']);
  };
  var getCloseButton = function getCloseButton() {
    return elementByClass(swalClasses.close);
  }; // https://github.com/jkup/focusable/blob/master/index.js

  var focusable = "\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex=\"0\"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n";
  var getFocusableElements = function getFocusableElements() {
    var focusableElementsWithTabindex = toArray(getPopup().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')) // sort according to tabindex
    .sort(function (a, b) {
      a = parseInt(a.getAttribute('tabindex'));
      b = parseInt(b.getAttribute('tabindex'));

      if (a > b) {
        return 1;
      } else if (a < b) {
        return -1;
      }

      return 0;
    });
    var otherFocusableElements = toArray(getPopup().querySelectorAll(focusable)).filter(function (el) {
      return el.getAttribute('tabindex') !== '-1';
    });
    return uniqueArray(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(function (el) {
      return isVisible(el);
    });
  };
  var isModal = function isModal() {
    return !isToast() && !document.body.classList.contains(swalClasses['no-backdrop']);
  };
  var isToast = function isToast() {
    return document.body.classList.contains(swalClasses['toast-shown']);
  };
  var isLoading = function isLoading() {
    return getPopup().hasAttribute('data-loading');
  };

  var states = {
    previousBodyPadding: null
  };
  var setInnerHtml = function setInnerHtml(elem, html) {
    // #1926
    elem.textContent = '';

    if (html) {
      var parser = new DOMParser();
      var parsed = parser.parseFromString(html, "text/html");
      toArray(parsed.querySelector('head').childNodes).forEach(function (child) {
        elem.appendChild(child);
      });
      toArray(parsed.querySelector('body').childNodes).forEach(function (child) {
        elem.appendChild(child);
      });
    }
  };
  var hasClass = function hasClass(elem, className) {
    if (!className) {
      return false;
    }

    var classList = className.split(/\s+/);

    for (var i = 0; i < classList.length; i++) {
      if (!elem.classList.contains(classList[i])) {
        return false;
      }
    }

    return true;
  };

  var removeCustomClasses = function removeCustomClasses(elem, params) {
    toArray(elem.classList).forEach(function (className) {
      if (!(objectValues(swalClasses).indexOf(className) !== -1) && !(objectValues(iconTypes).indexOf(className) !== -1) && !(objectValues(params.showClass).indexOf(className) !== -1)) {
        elem.classList.remove(className);
      }
    });
  };

  var applyCustomClass = function applyCustomClass(elem, params, className) {
    removeCustomClasses(elem, params);

    if (params.customClass && params.customClass[className]) {
      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {
        return warn("Invalid type of customClass.".concat(className, "! Expected string or iterable object, got \"").concat(_typeof(params.customClass[className]), "\""));
      }

      addClass(elem, params.customClass[className]);
    }
  };
  function getInput(content, inputType) {
    if (!inputType) {
      return null;
    }

    switch (inputType) {
      case 'select':
      case 'textarea':
      case 'file':
        return getChildByClass(content, swalClasses[inputType]);

      case 'checkbox':
        return content.querySelector(".".concat(swalClasses.checkbox, " input"));

      case 'radio':
        return content.querySelector(".".concat(swalClasses.radio, " input:checked")) || content.querySelector(".".concat(swalClasses.radio, " input:first-child"));

      case 'range':
        return content.querySelector(".".concat(swalClasses.range, " input"));

      default:
        return getChildByClass(content, swalClasses.input);
    }
  }
  var focusInput = function focusInput(input) {
    input.focus(); // place cursor at end of text in text input

    if (input.type !== 'file') {
      // http://stackoverflow.com/a/2345915
      var val = input.value;
      input.value = '';
      input.value = val;
    }
  };
  var toggleClass = function toggleClass(target, classList, condition) {
    if (!target || !classList) {
      return;
    }

    if (typeof classList === 'string') {
      classList = classList.split(/\s+/).filter(Boolean);
    }

    classList.forEach(function (className) {
      if (target.forEach) {
        target.forEach(function (elem) {
          condition ? elem.classList.add(className) : elem.classList.remove(className);
        });
      } else {
        condition ? target.classList.add(className) : target.classList.remove(className);
      }
    });
  };
  var addClass = function addClass(target, classList) {
    toggleClass(target, classList, true);
  };
  var removeClass = function removeClass(target, classList) {
    toggleClass(target, classList, false);
  };
  var getChildByClass = function getChildByClass(elem, className) {
    for (var i = 0; i < elem.childNodes.length; i++) {
      if (hasClass(elem.childNodes[i], className)) {
        return elem.childNodes[i];
      }
    }
  };
  var applyNumericalStyle = function applyNumericalStyle(elem, property, value) {
    if (value === "".concat(parseInt(value))) {
      value = parseInt(value);
    }

    if (value || parseInt(value) === 0) {
      elem.style[property] = typeof value === 'number' ? "".concat(value, "px") : value;
    } else {
      elem.style.removeProperty(property);
    }
  };
  var show = function show(elem) {
    var display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';
    elem.style.display = display;
  };
  var hide = function hide(elem) {
    elem.style.display = 'none';
  };
  var setStyle = function setStyle(parent, selector, property, value) {
    var el = parent.querySelector(selector);

    if (el) {
      el.style[property] = value;
    }
  };
  var toggle = function toggle(elem, condition, display) {
    condition ? show(elem, display) : hide(elem);
  }; // borrowed from jquery $(elem).is(':visible') implementation

  var isVisible = function isVisible(elem) {
    return !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));
  };
  var allButtonsAreHidden = function allButtonsAreHidden() {
    return !isVisible(getConfirmButton()) && !isVisible(getDenyButton()) && !isVisible(getCancelButton());
  };
  var isScrollable = function isScrollable(elem) {
    return !!(elem.scrollHeight > elem.clientHeight);
  }; // borrowed from https://stackoverflow.com/a/46352119

  var hasCssAnimation = function hasCssAnimation(elem) {
    var style = window.getComputedStyle(elem);
    var animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');
    var transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');
    return animDuration > 0 || transDuration > 0;
  };
  var contains = function contains(haystack, needle) {
    if (typeof haystack.contains === 'function') {
      return haystack.contains(needle);
    }
  };
  var animateTimerProgressBar = function animateTimerProgressBar(timer) {
    var reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var timerProgressBar = getTimerProgressBar();

    if (isVisible(timerProgressBar)) {
      if (reset) {
        timerProgressBar.style.transition = 'none';
        timerProgressBar.style.width = '100%';
      }

      setTimeout(function () {
        timerProgressBar.style.transition = "width ".concat(timer / 1000, "s linear");
        timerProgressBar.style.width = '0%';
      }, 10);
    }
  };
  var stopTimerProgressBar = function stopTimerProgressBar() {
    var timerProgressBar = getTimerProgressBar();
    var timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);
    timerProgressBar.style.removeProperty('transition');
    timerProgressBar.style.width = '100%';
    var timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);
    var timerProgressBarPercent = parseInt(timerProgressBarWidth / timerProgressBarFullWidth * 100);
    timerProgressBar.style.removeProperty('transition');
    timerProgressBar.style.width = "".concat(timerProgressBarPercent, "%");
  };

  // Detect Node env
  var isNodeEnv = function isNodeEnv() {
    return typeof window === 'undefined' || typeof document === 'undefined';
  };

  var sweetHTML = "\n <div aria-labelledby=\"".concat(swalClasses.title, "\" aria-describedby=\"").concat(swalClasses.content, "\" class=\"").concat(swalClasses.popup, "\" tabindex=\"-1\">\n   <div class=\"").concat(swalClasses.header, "\">\n     <ul class=\"").concat(swalClasses['progress-steps'], "\"></ul>\n     <div class=\"").concat(swalClasses.icon, "\"></div>\n     <img class=\"").concat(swalClasses.image, "\" />\n     <h2 class=\"").concat(swalClasses.title, "\" id=\"").concat(swalClasses.title, "\"></h2>\n     <button type=\"button\" class=\"").concat(swalClasses.close, "\"></button>\n   </div>\n   <div class=\"").concat(swalClasses.content, "\">\n     <div id=\"").concat(swalClasses.content, "\" class=\"").concat(swalClasses['html-container'], "\"></div>\n     <input class=\"").concat(swalClasses.input, "\" />\n     <input type=\"file\" class=\"").concat(swalClasses.file, "\" />\n     <div class=\"").concat(swalClasses.range, "\">\n       <input type=\"range\" />\n       <output></output>\n     </div>\n     <select class=\"").concat(swalClasses.select, "\"></select>\n     <div class=\"").concat(swalClasses.radio, "\"></div>\n     <label for=\"").concat(swalClasses.checkbox, "\" class=\"").concat(swalClasses.checkbox, "\">\n       <input type=\"checkbox\" />\n       <span class=\"").concat(swalClasses.label, "\"></span>\n     </label>\n     <textarea class=\"").concat(swalClasses.textarea, "\"></textarea>\n     <div class=\"").concat(swalClasses['validation-message'], "\" id=\"").concat(swalClasses['validation-message'], "\"></div>\n   </div>\n   <div class=\"").concat(swalClasses.actions, "\">\n     <div class=\"").concat(swalClasses.loader, "\"></div>\n     <button type=\"button\" class=\"").concat(swalClasses.confirm, "\"></button>\n     <button type=\"button\" class=\"").concat(swalClasses.deny, "\"></button>\n     <button type=\"button\" class=\"").concat(swalClasses.cancel, "\"></button>\n   </div>\n   <div class=\"").concat(swalClasses.footer, "\"></div>\n   <div class=\"").concat(swalClasses['timer-progress-bar-container'], "\">\n     <div class=\"").concat(swalClasses['timer-progress-bar'], "\"></div>\n   </div>\n </div>\n").replace(/(^|\n)\s*/g, '');

  var resetOldContainer = function resetOldContainer() {
    var oldContainer = getContainer();

    if (!oldContainer) {
      return false;
    }

    oldContainer.parentNode.removeChild(oldContainer);
    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);
    return true;
  };

  var oldInputVal; // IE11 workaround, see #1109 for details

  var resetValidationMessage = function resetValidationMessage(e) {
    if (Swal.isVisible() && oldInputVal !== e.target.value) {
      Swal.resetValidationMessage();
    }

    oldInputVal = e.target.value;
  };

  var addInputChangeListeners = function addInputChangeListeners() {
    var content = getContent();
    var input = getChildByClass(content, swalClasses.input);
    var file = getChildByClass(content, swalClasses.file);
    var range = content.querySelector(".".concat(swalClasses.range, " input"));
    var rangeOutput = content.querySelector(".".concat(swalClasses.range, " output"));
    var select = getChildByClass(content, swalClasses.select);
    var checkbox = content.querySelector(".".concat(swalClasses.checkbox, " input"));
    var textarea = getChildByClass(content, swalClasses.textarea);
    input.oninput = resetValidationMessage;
    file.onchange = resetValidationMessage;
    select.onchange = resetValidationMessage;
    checkbox.onchange = resetValidationMessage;
    textarea.oninput = resetValidationMessage;

    range.oninput = function (e) {
      resetValidationMessage(e);
      rangeOutput.value = range.value;
    };

    range.onchange = function (e) {
      resetValidationMessage(e);
      range.nextSibling.value = range.value;
    };
  };

  var getTarget = function getTarget(target) {
    return typeof target === 'string' ? document.querySelector(target) : target;
  };

  var setupAccessibility = function setupAccessibility(params) {
    var popup = getPopup();
    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');
    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');

    if (!params.toast) {
      popup.setAttribute('aria-modal', 'true');
    }
  };

  var setupRTL = function setupRTL(targetElement) {
    if (window.getComputedStyle(targetElement).direction === 'rtl') {
      addClass(getContainer(), swalClasses.rtl);
    }
  };
  /*
   * Add modal + backdrop to DOM
   */


  var init = function init(params) {
    // Clean up the old popup container if it exists
    var oldContainerExisted = resetOldContainer();
    /* istanbul ignore if */

    if (isNodeEnv()) {
      error('SweetAlert2 requires document to initialize');
      return;
    }

    var container = document.createElement('div');
    container.className = swalClasses.container;

    if (oldContainerExisted) {
      addClass(container, swalClasses['no-transition']);
    }

    setInnerHtml(container, sweetHTML);
    var targetElement = getTarget(params.target);
    targetElement.appendChild(container);
    setupAccessibility(params);
    setupRTL(targetElement);
    addInputChangeListeners();
  };

  var parseHtmlToContainer = function parseHtmlToContainer(param, target) {
    // DOM element
    if (param instanceof HTMLElement) {
      target.appendChild(param); // Object
    } else if (_typeof(param) === 'object') {
      handleObject(param, target); // Plain string
    } else if (param) {
      setInnerHtml(target, param);
    }
  };

  var handleObject = function handleObject(param, target) {
    // JQuery element(s)
    if (param.jquery) {
      handleJqueryElem(target, param); // For other objects use their string representation
    } else {
      setInnerHtml(target, param.toString());
    }
  };

  var handleJqueryElem = function handleJqueryElem(target, elem) {
    target.textContent = '';

    if (0 in elem) {
      for (var i = 0; (i in elem); i++) {
        target.appendChild(elem[i].cloneNode(true));
      }
    } else {
      target.appendChild(elem.cloneNode(true));
    }
  };

  var animationEndEvent = function () {
    // Prevent run in Node env

    /* istanbul ignore if */
    if (isNodeEnv()) {
      return false;
    }

    var testEl = document.createElement('div');
    var transEndEventNames = {
      WebkitAnimation: 'webkitAnimationEnd',
      OAnimation: 'oAnimationEnd oanimationend',
      animation: 'animationend'
    };

    for (var i in transEndEventNames) {
      if (Object.prototype.hasOwnProperty.call(transEndEventNames, i) && typeof testEl.style[i] !== 'undefined') {
        return transEndEventNames[i];
      }
    }

    return false;
  }();

  // https://github.com/twbs/bootstrap/blob/master/js/src/modal.js

  var measureScrollbar = function measureScrollbar() {
    var scrollDiv = document.createElement('div');
    scrollDiv.className = swalClasses['scrollbar-measure'];
    document.body.appendChild(scrollDiv);
    var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
    document.body.removeChild(scrollDiv);
    return scrollbarWidth;
  };

  var renderActions = function renderActions(instance, params) {
    var actions = getActions();
    var loader = getLoader();
    var confirmButton = getConfirmButton();
    var denyButton = getDenyButton();
    var cancelButton = getCancelButton(); // Actions (buttons) wrapper

    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {
      hide(actions);
    } // Custom class


    applyCustomClass(actions, params, 'actions'); // Render buttons

    renderButton(confirmButton, 'confirm', params);
    renderButton(denyButton, 'deny', params);
    renderButton(cancelButton, 'cancel', params);
    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);

    if (params.reverseButtons) {
      actions.insertBefore(cancelButton, loader);
      actions.insertBefore(denyButton, loader);
      actions.insertBefore(confirmButton, loader);
    } // Loader


    setInnerHtml(loader, params.loaderHtml);
    applyCustomClass(loader, params, 'loader');
  };

  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {
    if (!params.buttonsStyling) {
      return removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);
    }

    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled); // Buttons background colors

    if (params.confirmButtonColor) {
      confirmButton.style.backgroundColor = params.confirmButtonColor;
    }

    if (params.denyButtonColor) {
      denyButton.style.backgroundColor = params.denyButtonColor;
    }

    if (params.cancelButtonColor) {
      cancelButton.style.backgroundColor = params.cancelButtonColor;
    }
  }

  function renderButton(button, buttonType, params) {
    toggle(button, params["show".concat(capitalizeFirstLetter(buttonType), "Button")], 'inline-block');
    setInnerHtml(button, params["".concat(buttonType, "ButtonText")]); // Set caption text

    button.setAttribute('aria-label', params["".concat(buttonType, "ButtonAriaLabel")]); // ARIA label
    // Add buttons custom classes

    button.className = swalClasses[buttonType];
    applyCustomClass(button, params, "".concat(buttonType, "Button"));
    addClass(button, params["".concat(buttonType, "ButtonClass")]);
  }

  function handleBackdropParam(container, backdrop) {
    if (typeof backdrop === 'string') {
      container.style.background = backdrop;
    } else if (!backdrop) {
      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);
    }
  }

  function handlePositionParam(container, position) {
    if (position in swalClasses) {
      addClass(container, swalClasses[position]);
    } else {
      warn('The "position" parameter is not valid, defaulting to "center"');
      addClass(container, swalClasses.center);
    }
  }

  function handleGrowParam(container, grow) {
    if (grow && typeof grow === 'string') {
      var growClass = "grow-".concat(grow);

      if (growClass in swalClasses) {
        addClass(container, swalClasses[growClass]);
      }
    }
  }

  var renderContainer = function renderContainer(instance, params) {
    var container = getContainer();

    if (!container) {
      return;
    }

    handleBackdropParam(container, params.backdrop);

    if (!params.backdrop && params.allowOutsideClick) {
      warn('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`');
    }

    handlePositionParam(container, params.position);
    handleGrowParam(container, params.grow); // Custom class

    applyCustomClass(container, params, 'container'); // Set queue step attribute for getQueueStep() method

    var queueStep = document.body.getAttribute('data-swal2-queue-step');

    if (queueStep) {
      container.setAttribute('data-queue-step', queueStep);
      document.body.removeAttribute('data-swal2-queue-step');
    }
  };

  /**
   * This module containts `WeakMap`s for each effectively-"private  property" that a `Swal` has.
   * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
   * This is the approach that Babel will probably take to implement private methods/fields
   *   https://github.com/tc39/proposal-private-methods
   *   https://github.com/babel/babel/pull/7555
   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
   *   then we can use that language feature.
   */
  var privateProps = {
    promise: new WeakMap(),
    innerParams: new WeakMap(),
    domCache: new WeakMap()
  };

  var inputTypes = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];
  var renderInput = function renderInput(instance, params) {
    var content = getContent();
    var innerParams = privateProps.innerParams.get(instance);
    var rerender = !innerParams || params.input !== innerParams.input;
    inputTypes.forEach(function (inputType) {
      var inputClass = swalClasses[inputType];
      var inputContainer = getChildByClass(content, inputClass); // set attributes

      setAttributes(inputType, params.inputAttributes); // set class

      inputContainer.className = inputClass;

      if (rerender) {
        hide(inputContainer);
      }
    });

    if (params.input) {
      if (rerender) {
        showInput(params);
      } // set custom class


      setCustomClass(params);
    }
  };

  var showInput = function showInput(params) {
    if (!renderInputType[params.input]) {
      return error("Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"".concat(params.input, "\""));
    }

    var inputContainer = getInputContainer(params.input);
    var input = renderInputType[params.input](inputContainer, params);
    show(input); // input autofocus

    setTimeout(function () {
      focusInput(input);
    });
  };

  var removeAttributes = function removeAttributes(input) {
    for (var i = 0; i < input.attributes.length; i++) {
      var attrName = input.attributes[i].name;

      if (!(['type', 'value', 'style'].indexOf(attrName) !== -1)) {
        input.removeAttribute(attrName);
      }
    }
  };

  var setAttributes = function setAttributes(inputType, inputAttributes) {
    var input = getInput(getContent(), inputType);

    if (!input) {
      return;
    }

    removeAttributes(input);

    for (var attr in inputAttributes) {
      // Do not set a placeholder for <input type="range">
      // it'll crash Edge, #1298
      if (inputType === 'range' && attr === 'placeholder') {
        continue;
      }

      input.setAttribute(attr, inputAttributes[attr]);
    }
  };

  var setCustomClass = function setCustomClass(params) {
    var inputContainer = getInputContainer(params.input);

    if (params.customClass) {
      addClass(inputContainer, params.customClass.input);
    }
  };

  var setInputPlaceholder = function setInputPlaceholder(input, params) {
    if (!input.placeholder || params.inputPlaceholder) {
      input.placeholder = params.inputPlaceholder;
    }
  };

  var setInputLabel = function setInputLabel(input, prependTo, params) {
    if (params.inputLabel) {
      input.id = swalClasses.input;
      var label = document.createElement('label');
      var labelClass = swalClasses['input-label'];
      label.setAttribute('for', input.id);
      label.className = labelClass;
      addClass(label, params.customClass.inputLabel);
      label.innerText = params.inputLabel;
      prependTo.insertAdjacentElement('beforebegin', label);
    }
  };

  var getInputContainer = function getInputContainer(inputType) {
    var inputClass = swalClasses[inputType] ? swalClasses[inputType] : swalClasses.input;
    return getChildByClass(getContent(), inputClass);
  };

  var renderInputType = {};

  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = function (input, params) {
    if (typeof params.inputValue === 'string' || typeof params.inputValue === 'number') {
      input.value = params.inputValue;
    } else if (!isPromise(params.inputValue)) {
      warn("Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"".concat(_typeof(params.inputValue), "\""));
    }

    setInputLabel(input, input, params);
    setInputPlaceholder(input, params);
    input.type = params.input;
    return input;
  };

  renderInputType.file = function (input, params) {
    setInputLabel(input, input, params);
    setInputPlaceholder(input, params);
    return input;
  };

  renderInputType.range = function (range, params) {
    var rangeInput = range.querySelector('input');
    var rangeOutput = range.querySelector('output');
    rangeInput.value = params.inputValue;
    rangeInput.type = params.input;
    rangeOutput.value = params.inputValue;
    setInputLabel(rangeInput, range, params);
    return range;
  };

  renderInputType.select = function (select, params) {
    select.textContent = '';

    if (params.inputPlaceholder) {
      var placeholder = document.createElement('option');
      setInnerHtml(placeholder, params.inputPlaceholder);
      placeholder.value = '';
      placeholder.disabled = true;
      placeholder.selected = true;
      select.appendChild(placeholder);
    }

    setInputLabel(select, select, params);
    return select;
  };

  renderInputType.radio = function (radio) {
    radio.textContent = '';
    return radio;
  };

  renderInputType.checkbox = function (checkboxContainer, params) {
    var checkbox = getInput(getContent(), 'checkbox');
    checkbox.value = 1;
    checkbox.id = swalClasses.checkbox;
    checkbox.checked = Boolean(params.inputValue);
    var label = checkboxContainer.querySelector('span');
    setInnerHtml(label, params.inputPlaceholder);
    return checkboxContainer;
  };

  renderInputType.textarea = function (textarea, params) {
    textarea.value = params.inputValue;
    setInputPlaceholder(textarea, params);
    setInputLabel(textarea, textarea, params);

    var getPadding = function getPadding(el) {
      return parseInt(window.getComputedStyle(el).paddingLeft) + parseInt(window.getComputedStyle(el).paddingRight);
    };

    if ('MutationObserver' in window) {
      // #1699
      var initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);

      var outputsize = function outputsize() {
        var contentWidth = textarea.offsetWidth + getPadding(getPopup()) + getPadding(getContent());

        if (contentWidth > initialPopupWidth) {
          getPopup().style.width = "".concat(contentWidth, "px");
        } else {
          getPopup().style.width = null;
        }
      };

      new MutationObserver(outputsize).observe(textarea, {
        attributes: true,
        attributeFilter: ['style']
      });
    }

    return textarea;
  };

  var renderContent = function renderContent(instance, params) {
    var htmlContainer = getHtmlContainer();
    applyCustomClass(htmlContainer, params, 'htmlContainer'); // Content as HTML

    if (params.html) {
      parseHtmlToContainer(params.html, htmlContainer);
      show(htmlContainer, 'block'); // Content as plain text
    } else if (params.text) {
      htmlContainer.textContent = params.text;
      show(htmlContainer, 'block'); // No content
    } else {
      hide(htmlContainer);
    }

    renderInput(instance, params); // Custom class

    applyCustomClass(getContent(), params, 'content');
  };

  var renderFooter = function renderFooter(instance, params) {
    var footer = getFooter();
    toggle(footer, params.footer);

    if (params.footer) {
      parseHtmlToContainer(params.footer, footer);
    } // Custom class


    applyCustomClass(footer, params, 'footer');
  };

  var renderCloseButton = function renderCloseButton(instance, params) {
    var closeButton = getCloseButton();
    setInnerHtml(closeButton, params.closeButtonHtml); // Custom class

    applyCustomClass(closeButton, params, 'closeButton');
    toggle(closeButton, params.showCloseButton);
    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel);
  };

  var renderIcon = function renderIcon(instance, params) {
    var innerParams = privateProps.innerParams.get(instance);
    var icon = getIcon(); // if the given icon already rendered, apply the styling without re-rendering the icon

    if (innerParams && params.icon === innerParams.icon) {
      // Custom or default content
      setContent(icon, params);
      applyStyles(icon, params);
      return;
    }

    if (!params.icon && !params.iconHtml) {
      return hide(icon);
    }

    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {
      error("Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"".concat(params.icon, "\""));
      return hide(icon);
    }

    show(icon); // Custom or default content

    setContent(icon, params);
    applyStyles(icon, params); // Animate icon

    addClass(icon, params.showClass.icon);
  };

  var applyStyles = function applyStyles(icon, params) {
    for (var iconType in iconTypes) {
      if (params.icon !== iconType) {
        removeClass(icon, iconTypes[iconType]);
      }
    }

    addClass(icon, iconTypes[params.icon]); // Icon color

    setColor(icon, params); // Success icon background color

    adjustSuccessIconBackgoundColor(); // Custom class

    applyCustomClass(icon, params, 'icon');
  }; // Adjust success icon background color to match the popup background color


  var adjustSuccessIconBackgoundColor = function adjustSuccessIconBackgoundColor() {
    var popup = getPopup();
    var popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');
    var successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');

    for (var i = 0; i < successIconParts.length; i++) {
      successIconParts[i].style.backgroundColor = popupBackgroundColor;
    }
  };

  var setContent = function setContent(icon, params) {
    icon.textContent = '';

    if (params.iconHtml) {
      setInnerHtml(icon, iconContent(params.iconHtml));
    } else if (params.icon === 'success') {
      setInnerHtml(icon, "\n      <div class=\"swal2-success-circular-line-left\"></div>\n      <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n      <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n      <div class=\"swal2-success-circular-line-right\"></div>\n    ");
    } else if (params.icon === 'error') {
      setInnerHtml(icon, "\n      <span class=\"swal2-x-mark\">\n        <span class=\"swal2-x-mark-line-left\"></span>\n        <span class=\"swal2-x-mark-line-right\"></span>\n      </span>\n    ");
    } else {
      var defaultIconHtml = {
        question: '?',
        warning: '!',
        info: 'i'
      };
      setInnerHtml(icon, iconContent(defaultIconHtml[params.icon]));
    }
  };

  var setColor = function setColor(icon, params) {
    if (!params.iconColor) {
      return;
    }

    icon.style.color = params.iconColor;
    icon.style.borderColor = params.iconColor;

    for (var _i = 0, _arr = ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']; _i < _arr.length; _i++) {
      var sel = _arr[_i];
      setStyle(icon, sel, 'backgroundColor', params.iconColor);
    }

    setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);
  };

  var iconContent = function iconContent(content) {
    return "<div class=\"".concat(swalClasses['icon-content'], "\">").concat(content, "</div>");
  };

  var renderImage = function renderImage(instance, params) {
    var image = getImage();

    if (!params.imageUrl) {
      return hide(image);
    }

    show(image, ''); // Src, alt

    image.setAttribute('src', params.imageUrl);
    image.setAttribute('alt', params.imageAlt); // Width, height

    applyNumericalStyle(image, 'width', params.imageWidth);
    applyNumericalStyle(image, 'height', params.imageHeight); // Class

    image.className = swalClasses.image;
    applyCustomClass(image, params, 'image');
  };

  var currentSteps = [];
  /*
   * Global function for chaining sweetAlert popups
   */

  var queue = function queue(steps) {
    var Swal = this;
    currentSteps = steps;

    var resetAndResolve = function resetAndResolve(resolve, value) {
      currentSteps = [];
      resolve(value);
    };

    var queueResult = [];
    return new Promise(function (resolve) {
      (function step(i, callback) {
        if (i < currentSteps.length) {
          document.body.setAttribute('data-swal2-queue-step', i);
          Swal.fire(currentSteps[i]).then(function (result) {
            if (typeof result.value !== 'undefined') {
              queueResult.push(result.value);
              step(i + 1, callback);
            } else {
              resetAndResolve(resolve, {
                dismiss: result.dismiss
              });
            }
          });
        } else {
          resetAndResolve(resolve, {
            value: queueResult
          });
        }
      })(0);
    });
  };
  /*
   * Global function for getting the index of current popup in queue
   */

  var getQueueStep = function getQueueStep() {
    return getContainer() && getContainer().getAttribute('data-queue-step');
  };
  /*
   * Global function for inserting a popup to the queue
   */

  var insertQueueStep = function insertQueueStep(step, index) {
    if (index && index < currentSteps.length) {
      return currentSteps.splice(index, 0, step);
    }

    return currentSteps.push(step);
  };
  /*
   * Global function for deleting a popup from the queue
   */

  var deleteQueueStep = function deleteQueueStep(index) {
    if (typeof currentSteps[index] !== 'undefined') {
      currentSteps.splice(index, 1);
    }
  };

  var createStepElement = function createStepElement(step) {
    var stepEl = document.createElement('li');
    addClass(stepEl, swalClasses['progress-step']);
    setInnerHtml(stepEl, step);
    return stepEl;
  };

  var createLineElement = function createLineElement(params) {
    var lineEl = document.createElement('li');
    addClass(lineEl, swalClasses['progress-step-line']);

    if (params.progressStepsDistance) {
      lineEl.style.width = params.progressStepsDistance;
    }

    return lineEl;
  };

  var renderProgressSteps = function renderProgressSteps(instance, params) {
    var progressStepsContainer = getProgressSteps();

    if (!params.progressSteps || params.progressSteps.length === 0) {
      return hide(progressStepsContainer);
    }

    show(progressStepsContainer);
    progressStepsContainer.textContent = '';
    var currentProgressStep = parseInt(params.currentProgressStep === undefined ? getQueueStep() : params.currentProgressStep);

    if (currentProgressStep >= params.progressSteps.length) {
      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');
    }

    params.progressSteps.forEach(function (step, index) {
      var stepEl = createStepElement(step);
      progressStepsContainer.appendChild(stepEl);

      if (index === currentProgressStep) {
        addClass(stepEl, swalClasses['active-progress-step']);
      }

      if (index !== params.progressSteps.length - 1) {
        var lineEl = createLineElement(params);
        progressStepsContainer.appendChild(lineEl);
      }
    });
  };

  var renderTitle = function renderTitle(instance, params) {
    var title = getTitle();
    toggle(title, params.title || params.titleText, 'block');

    if (params.title) {
      parseHtmlToContainer(params.title, title);
    }

    if (params.titleText) {
      title.innerText = params.titleText;
    } // Custom class


    applyCustomClass(title, params, 'title');
  };

  var renderHeader = function renderHeader(instance, params) {
    var header = getHeader(); // Custom class

    applyCustomClass(header, params, 'header'); // Progress steps

    renderProgressSteps(instance, params); // Icon

    renderIcon(instance, params); // Image

    renderImage(instance, params); // Title

    renderTitle(instance, params); // Close button

    renderCloseButton(instance, params);
  };

  var renderPopup = function renderPopup(instance, params) {
    var container = getContainer();
    var popup = getPopup(); // Width

    if (params.toast) {
      // #2170
      applyNumericalStyle(container, 'width', params.width);
      popup.style.width = '100%';
    } else {
      applyNumericalStyle(popup, 'width', params.width);
    } // Padding


    applyNumericalStyle(popup, 'padding', params.padding); // Background

    if (params.background) {
      popup.style.background = params.background;
    }

    hide(getValidationMessage()); // Classes

    addClasses(popup, params);
  };

  var addClasses = function addClasses(popup, params) {
    // Default Class + showClass when updating Swal.update({})
    popup.className = "".concat(swalClasses.popup, " ").concat(isVisible(popup) ? params.showClass.popup : '');

    if (params.toast) {
      addClass([document.documentElement, document.body], swalClasses['toast-shown']);
      addClass(popup, swalClasses.toast);
    } else {
      addClass(popup, swalClasses.modal);
    } // Custom class


    applyCustomClass(popup, params, 'popup');

    if (typeof params.customClass === 'string') {
      addClass(popup, params.customClass);
    } // Icon class (#1842)


    if (params.icon) {
      addClass(popup, swalClasses["icon-".concat(params.icon)]);
    }
  };

  var render = function render(instance, params) {
    renderPopup(instance, params);
    renderContainer(instance, params);
    renderHeader(instance, params);
    renderContent(instance, params);
    renderActions(instance, params);
    renderFooter(instance, params);

    if (typeof params.didRender === 'function') {
      params.didRender(getPopup());
    } else if (typeof params.onRender === 'function') {
      params.onRender(getPopup()); // @deprecated
    }
  };

  /*
   * Global function to determine if SweetAlert2 popup is shown
   */

  var isVisible$1 = function isVisible$$1() {
    return isVisible(getPopup());
  };
  /*
   * Global function to click 'Confirm' button
   */

  var clickConfirm = function clickConfirm() {
    return getConfirmButton() && getConfirmButton().click();
  };
  /*
   * Global function to click 'Deny' button
   */

  var clickDeny = function clickDeny() {
    return getDenyButton() && getDenyButton().click();
  };
  /*
   * Global function to click 'Cancel' button
   */

  var clickCancel = function clickCancel() {
    return getCancelButton() && getCancelButton().click();
  };

  function fire() {
    var Swal = this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _construct(Swal, args);
  }

  /**
   * Returns an extended version of `Swal` containing `params` as defaults.
   * Useful for reusing Swal configuration.
   *
   * For example:
   *
   * Before:
   * const textPromptOptions = { input: 'text', showCancelButton: true }
   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })
   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })
   *
   * After:
   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })
   * const {value: firstName} = await TextPrompt('What is your first name?')
   * const {value: lastName} = await TextPrompt('What is your last name?')
   *
   * @param mixinParams
   */
  function mixin(mixinParams) {
    var MixinSwal = /*#__PURE__*/function (_this) {
      _inherits(MixinSwal, _this);

      var _super = _createSuper(MixinSwal);

      function MixinSwal() {
        _classCallCheck(this, MixinSwal);

        return _super.apply(this, arguments);
      }

      _createClass(MixinSwal, [{
        key: "_main",
        value: function _main(params, priorityMixinParams) {
          return _get(_getPrototypeOf(MixinSwal.prototype), "_main", this).call(this, params, _extends({}, mixinParams, priorityMixinParams));
        }
      }]);

      return MixinSwal;
    }(this);

    return MixinSwal;
  }

  /**
   * Shows loader (spinner), this is useful with AJAX requests.
   * By default the loader be shown instead of the "Confirm" button.
   */

  var showLoading = function showLoading(buttonToReplace) {
    var popup = getPopup();

    if (!popup) {
      Swal.fire();
    }

    popup = getPopup();
    var actions = getActions();
    var loader = getLoader();

    if (!buttonToReplace && isVisible(getConfirmButton())) {
      buttonToReplace = getConfirmButton();
    }

    show(actions);

    if (buttonToReplace) {
      hide(buttonToReplace);
      loader.setAttribute('data-button-to-replace', buttonToReplace.className);
    }

    loader.parentNode.insertBefore(loader, buttonToReplace);
    addClass([popup, actions], swalClasses.loading);
    show(loader);
    popup.setAttribute('data-loading', true);
    popup.setAttribute('aria-busy', true);
    popup.focus();
  };

  var RESTORE_FOCUS_TIMEOUT = 100;

  var globalState = {};

  var focusPreviousActiveElement = function focusPreviousActiveElement() {
    if (globalState.previousActiveElement && globalState.previousActiveElement.focus) {
      globalState.previousActiveElement.focus();
      globalState.previousActiveElement = null;
    } else if (document.body) {
      document.body.focus();
    }
  }; // Restore previous active (focused) element


  var restoreActiveElement = function restoreActiveElement(returnFocus) {
    return new Promise(function (resolve) {
      if (!returnFocus) {
        return resolve();
      }

      var x = window.scrollX;
      var y = window.scrollY;
      globalState.restoreFocusTimeout = setTimeout(function () {
        focusPreviousActiveElement();
        resolve();
      }, RESTORE_FOCUS_TIMEOUT); // issues/900

      if (typeof x !== 'undefined' && typeof y !== 'undefined') {
        // IE doesn't have scrollX/scrollY support
        window.scrollTo(x, y);
      }
    });
  };

  /**
   * If `timer` parameter is set, returns number of milliseconds of timer remained.
   * Otherwise, returns undefined.
   */

  var getTimerLeft = function getTimerLeft() {
    return globalState.timeout && globalState.timeout.getTimerLeft();
  };
  /**
   * Stop timer. Returns number of milliseconds of timer remained.
   * If `timer` parameter isn't set, returns undefined.
   */

  var stopTimer = function stopTimer() {
    if (globalState.timeout) {
      stopTimerProgressBar();
      return globalState.timeout.stop();
    }
  };
  /**
   * Resume timer. Returns number of milliseconds of timer remained.
   * If `timer` parameter isn't set, returns undefined.
   */

  var resumeTimer = function resumeTimer() {
    if (globalState.timeout) {
      var remaining = globalState.timeout.start();
      animateTimerProgressBar(remaining);
      return remaining;
    }
  };
  /**
   * Resume timer. Returns number of milliseconds of timer remained.
   * If `timer` parameter isn't set, returns undefined.
   */

  var toggleTimer = function toggleTimer() {
    var timer = globalState.timeout;
    return timer && (timer.running ? stopTimer() : resumeTimer());
  };
  /**
   * Increase timer. Returns number of milliseconds of an updated timer.
   * If `timer` parameter isn't set, returns undefined.
   */

  var increaseTimer = function increaseTimer(n) {
    if (globalState.timeout) {
      var remaining = globalState.timeout.increase(n);
      animateTimerProgressBar(remaining, true);
      return remaining;
    }
  };
  /**
   * Check if timer is running. Returns true if timer is running
   * or false if timer is paused or stopped.
   * If `timer` parameter isn't set, returns undefined
   */

  var isTimerRunning = function isTimerRunning() {
    return globalState.timeout && globalState.timeout.isRunning();
  };

  var bodyClickListenerAdded = false;
  var clickHandlers = {};
  function bindClickHandler() {
    var attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';
    clickHandlers[attr] = this;

    if (!bodyClickListenerAdded) {
      document.body.addEventListener('click', bodyClickListener);
      bodyClickListenerAdded = true;
    }
  }

  var bodyClickListener = function bodyClickListener(event) {
    // 1. using .parentNode instead of event.path because of better support by old browsers https://stackoverflow.com/a/39245638
    // 2. using .parentNode instead of .parentElement because of IE11 + SVG https://stackoverflow.com/a/36270354
    for (var el = event.target; el && el !== document; el = el.parentNode) {
      for (var attr in clickHandlers) {
        var template = el.getAttribute(attr);

        if (template) {
          clickHandlers[attr].fire({
            template: template
          });
          return;
        }
      }
    }
  };

  var defaultParams = {
    title: '',
    titleText: '',
    text: '',
    html: '',
    footer: '',
    icon: undefined,
    iconColor: undefined,
    iconHtml: undefined,
    template: undefined,
    toast: false,
    animation: true,
    showClass: {
      popup: 'swal2-show',
      backdrop: 'swal2-backdrop-show',
      icon: 'swal2-icon-show'
    },
    hideClass: {
      popup: 'swal2-hide',
      backdrop: 'swal2-backdrop-hide',
      icon: 'swal2-icon-hide'
    },
    customClass: {},
    target: 'body',
    backdrop: true,
    heightAuto: true,
    allowOutsideClick: true,
    allowEscapeKey: true,
    allowEnterKey: true,
    stopKeydownPropagation: true,
    keydownListenerCapture: false,
    showConfirmButton: true,
    showDenyButton: false,
    showCancelButton: false,
    preConfirm: undefined,
    preDeny: undefined,
    confirmButtonText: 'OK',
    confirmButtonAriaLabel: '',
    confirmButtonColor: undefined,
    denyButtonText: 'No',
    denyButtonAriaLabel: '',
    denyButtonColor: undefined,
    cancelButtonText: 'Cancel',
    cancelButtonAriaLabel: '',
    cancelButtonColor: undefined,
    buttonsStyling: true,
    reverseButtons: false,
    focusConfirm: true,
    focusDeny: false,
    focusCancel: false,
    returnFocus: true,
    showCloseButton: false,
    closeButtonHtml: '&times;',
    closeButtonAriaLabel: 'Close this dialog',
    loaderHtml: '',
    showLoaderOnConfirm: false,
    showLoaderOnDeny: false,
    imageUrl: undefined,
    imageWidth: undefined,
    imageHeight: undefined,
    imageAlt: '',
    timer: undefined,
    timerProgressBar: false,
    width: undefined,
    padding: undefined,
    background: undefined,
    input: undefined,
    inputPlaceholder: '',
    inputLabel: '',
    inputValue: '',
    inputOptions: {},
    inputAutoTrim: true,
    inputAttributes: {},
    inputValidator: undefined,
    returnInputValueOnDeny: false,
    validationMessage: undefined,
    grow: false,
    position: 'center',
    progressSteps: [],
    currentProgressStep: undefined,
    progressStepsDistance: undefined,
    onBeforeOpen: undefined,
    onOpen: undefined,
    willOpen: undefined,
    didOpen: undefined,
    onRender: undefined,
    didRender: undefined,
    onClose: undefined,
    onAfterClose: undefined,
    willClose: undefined,
    didClose: undefined,
    onDestroy: undefined,
    didDestroy: undefined,
    scrollbarPadding: true
  };
  var updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'onAfterClose', 'onClose', 'onDestroy', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];
  var deprecatedParams = {
    animation: 'showClass" and "hideClass',
    onBeforeOpen: 'willOpen',
    onOpen: 'didOpen',
    onRender: 'didRender',
    onClose: 'willClose',
    onAfterClose: 'didClose',
    onDestroy: 'didDestroy'
  };
  var toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];
  /**
   * Is valid parameter
   * @param {String} paramName
   */

  var isValidParameter = function isValidParameter(paramName) {
    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);
  };
  /**
   * Is valid parameter for Swal.update() method
   * @param {String} paramName
   */

  var isUpdatableParameter = function isUpdatableParameter(paramName) {
    return updatableParams.indexOf(paramName) !== -1;
  };
  /**
   * Is deprecated parameter
   * @param {String} paramName
   */

  var isDeprecatedParameter = function isDeprecatedParameter(paramName) {
    return deprecatedParams[paramName];
  };

  var checkIfParamIsValid = function checkIfParamIsValid(param) {
    if (!isValidParameter(param)) {
      warn("Unknown parameter \"".concat(param, "\""));
    }
  };

  var checkIfToastParamIsValid = function checkIfToastParamIsValid(param) {
    if (toastIncompatibleParams.indexOf(param) !== -1) {
      warn("The parameter \"".concat(param, "\" is incompatible with toasts"));
    }
  };

  var checkIfParamIsDeprecated = function checkIfParamIsDeprecated(param) {
    if (isDeprecatedParameter(param)) {
      warnAboutDeprecation(param, isDeprecatedParameter(param));
    }
  };
  /**
   * Show relevant warnings for given params
   *
   * @param params
   */


  var showWarningsForParams = function showWarningsForParams(params) {
    for (var param in params) {
      checkIfParamIsValid(param);

      if (params.toast) {
        checkIfToastParamIsValid(param);
      }

      checkIfParamIsDeprecated(param);
    }
  };



  var staticMethods = /*#__PURE__*/Object.freeze({
    isValidParameter: isValidParameter,
    isUpdatableParameter: isUpdatableParameter,
    isDeprecatedParameter: isDeprecatedParameter,
    argsToParams: argsToParams,
    isVisible: isVisible$1,
    clickConfirm: clickConfirm,
    clickDeny: clickDeny,
    clickCancel: clickCancel,
    getContainer: getContainer,
    getPopup: getPopup,
    getTitle: getTitle,
    getContent: getContent,
    getHtmlContainer: getHtmlContainer,
    getImage: getImage,
    getIcon: getIcon,
    getInputLabel: getInputLabel,
    getCloseButton: getCloseButton,
    getActions: getActions,
    getConfirmButton: getConfirmButton,
    getDenyButton: getDenyButton,
    getCancelButton: getCancelButton,
    getLoader: getLoader,
    getHeader: getHeader,
    getFooter: getFooter,
    getTimerProgressBar: getTimerProgressBar,
    getFocusableElements: getFocusableElements,
    getValidationMessage: getValidationMessage,
    isLoading: isLoading,
    fire: fire,
    mixin: mixin,
    queue: queue,
    getQueueStep: getQueueStep,
    insertQueueStep: insertQueueStep,
    deleteQueueStep: deleteQueueStep,
    showLoading: showLoading,
    enableLoading: showLoading,
    getTimerLeft: getTimerLeft,
    stopTimer: stopTimer,
    resumeTimer: resumeTimer,
    toggleTimer: toggleTimer,
    increaseTimer: increaseTimer,
    isTimerRunning: isTimerRunning,
    bindClickHandler: bindClickHandler
  });

  /**
   * Hides loader and shows back the button which was hidden by .showLoading()
   */

  function hideLoading() {
    // do nothing if popup is closed
    var innerParams = privateProps.innerParams.get(this);

    if (!innerParams) {
      return;
    }

    var domCache = privateProps.domCache.get(this);
    hide(domCache.loader);
    var buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));

    if (buttonToReplace.length) {
      show(buttonToReplace[0], 'inline-block');
    } else if (allButtonsAreHidden()) {
      hide(domCache.actions);
    }

    removeClass([domCache.popup, domCache.actions], swalClasses.loading);
    domCache.popup.removeAttribute('aria-busy');
    domCache.popup.removeAttribute('data-loading');
    domCache.confirmButton.disabled = false;
    domCache.denyButton.disabled = false;
    domCache.cancelButton.disabled = false;
  }

  function getInput$1(instance) {
    var innerParams = privateProps.innerParams.get(instance || this);
    var domCache = privateProps.domCache.get(instance || this);

    if (!domCache) {
      return null;
    }

    return getInput(domCache.content, innerParams.input);
  }

  var fixScrollbar = function fixScrollbar() {
    // for queues, do not do this more than once
    if (states.previousBodyPadding !== null) {
      return;
    } // if the body has overflow


    if (document.body.scrollHeight > window.innerHeight) {
      // add padding so the content doesn't shift after removal of scrollbar
      states.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));
      document.body.style.paddingRight = "".concat(states.previousBodyPadding + measureScrollbar(), "px");
    }
  };
  var undoScrollbar = function undoScrollbar() {
    if (states.previousBodyPadding !== null) {
      document.body.style.paddingRight = "".concat(states.previousBodyPadding, "px");
      states.previousBodyPadding = null;
    }
  };

  /* istanbul ignore file */

  var iOSfix = function iOSfix() {
    var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;

    if (iOS && !hasClass(document.body, swalClasses.iosfix)) {
      var offset = document.body.scrollTop;
      document.body.style.top = "".concat(offset * -1, "px");
      addClass(document.body, swalClasses.iosfix);
      lockBodyScroll();
      addBottomPaddingForTallPopups(); // #1948
    }
  };

  var addBottomPaddingForTallPopups = function addBottomPaddingForTallPopups() {
    var safari = !navigator.userAgent.match(/(CriOS|FxiOS|EdgiOS|YaBrowser|UCBrowser)/i);

    if (safari) {
      var bottomPanelHeight = 44;

      if (getPopup().scrollHeight > window.innerHeight - bottomPanelHeight) {
        getContainer().style.paddingBottom = "".concat(bottomPanelHeight, "px");
      }
    }
  };

  var lockBodyScroll = function lockBodyScroll() {
    // #1246
    var container = getContainer();
    var preventTouchMove;

    container.ontouchstart = function (e) {
      preventTouchMove = shouldPreventTouchMove(e);
    };

    container.ontouchmove = function (e) {
      if (preventTouchMove) {
        e.preventDefault();
        e.stopPropagation();
      }
    };
  };

  var shouldPreventTouchMove = function shouldPreventTouchMove(event) {
    var target = event.target;
    var container = getContainer();

    if (isStylys(event) || isZoom(event)) {
      return false;
    }

    if (target === container) {
      return true;
    }

    if (!isScrollable(container) && target.tagName !== 'INPUT' && // #1603
    !(isScrollable(getContent()) && // #1944
    getContent().contains(target))) {
      return true;
    }

    return false;
  };

  var isStylys = function isStylys(event) {
    // #1786
    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';
  };

  var isZoom = function isZoom(event) {
    // #1891
    return event.touches && event.touches.length > 1;
  };

  var undoIOSfix = function undoIOSfix() {
    if (hasClass(document.body, swalClasses.iosfix)) {
      var offset = parseInt(document.body.style.top, 10);
      removeClass(document.body, swalClasses.iosfix);
      document.body.style.top = '';
      document.body.scrollTop = offset * -1;
    }
  };

  /* istanbul ignore file */

  var isIE11 = function isIE11() {
    return !!window.MSInputMethodContext && !!document.documentMode;
  }; // Fix IE11 centering sweetalert2/issues/933


  var fixVerticalPositionIE = function fixVerticalPositionIE() {
    var container = getContainer();
    var popup = getPopup();
    container.style.removeProperty('align-items');

    if (popup.offsetTop < 0) {
      container.style.alignItems = 'flex-start';
    }
  };

  var IEfix = function IEfix() {
    if (typeof window !== 'undefined' && isIE11()) {
      fixVerticalPositionIE();
      window.addEventListener('resize', fixVerticalPositionIE);
    }
  };
  var undoIEfix = function undoIEfix() {
    if (typeof window !== 'undefined' && isIE11()) {
      window.removeEventListener('resize', fixVerticalPositionIE);
    }
  };

  // Adding aria-hidden="true" to elements outside of the active modal dialog ensures that
  // elements not within the active modal dialog will not be surfaced if a user opens a screen
  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.

  var setAriaHidden = function setAriaHidden() {
    var bodyChildren = toArray(document.body.children);
    bodyChildren.forEach(function (el) {
      if (el === getContainer() || contains(el, getContainer())) {
        return;
      }

      if (el.hasAttribute('aria-hidden')) {
        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden'));
      }

      el.setAttribute('aria-hidden', 'true');
    });
  };
  var unsetAriaHidden = function unsetAriaHidden() {
    var bodyChildren = toArray(document.body.children);
    bodyChildren.forEach(function (el) {
      if (el.hasAttribute('data-previous-aria-hidden')) {
        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden'));
        el.removeAttribute('data-previous-aria-hidden');
      } else {
        el.removeAttribute('aria-hidden');
      }
    });
  };

  /**
   * This module containts `WeakMap`s for each effectively-"private  property" that a `Swal` has.
   * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
   * This is the approach that Babel will probably take to implement private methods/fields
   *   https://github.com/tc39/proposal-private-methods
   *   https://github.com/babel/babel/pull/7555
   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
   *   then we can use that language feature.
   */
  var privateMethods = {
    swalPromiseResolve: new WeakMap()
  };

  /*
   * Instance method to close sweetAlert
   */

  function removePopupAndResetState(instance, container, returnFocus, didClose) {
    if (isToast()) {
      triggerDidCloseAndDispose(instance, didClose);
    } else {
      restoreActiveElement(returnFocus).then(function () {
        return triggerDidCloseAndDispose(instance, didClose);
      });
      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {
        capture: globalState.keydownListenerCapture
      });
      globalState.keydownHandlerAdded = false;
    }

    if (container.parentNode && !document.body.getAttribute('data-swal2-queue-step')) {
      container.parentNode.removeChild(container);
    }

    if (isModal()) {
      undoScrollbar();
      undoIOSfix();
      undoIEfix();
      unsetAriaHidden();
    }

    removeBodyClasses();
  }

  function removeBodyClasses() {
    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);
  }

  function close(resolveValue) {
    var popup = getPopup();

    if (!popup) {
      return;
    }

    resolveValue = prepareResolveValue(resolveValue);
    var innerParams = privateProps.innerParams.get(this);

    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {
      return;
    }

    var swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);
    removeClass(popup, innerParams.showClass.popup);
    addClass(popup, innerParams.hideClass.popup);
    var backdrop = getContainer();
    removeClass(backdrop, innerParams.showClass.backdrop);
    addClass(backdrop, innerParams.hideClass.backdrop);
    handlePopupAnimation(this, popup, innerParams); // Resolve Swal promise

    swalPromiseResolve(resolveValue);
  }

  var prepareResolveValue = function prepareResolveValue(resolveValue) {
    // When user calls Swal.close()
    if (typeof resolveValue === 'undefined') {
      return {
        isConfirmed: false,
        isDenied: false,
        isDismissed: true
      };
    }

    return _extends({
      isConfirmed: false,
      isDenied: false,
      isDismissed: false
    }, resolveValue);
  };

  var handlePopupAnimation = function handlePopupAnimation(instance, popup, innerParams) {
    var container = getContainer(); // If animation is supported, animate

    var animationIsSupported = animationEndEvent && hasCssAnimation(popup);
    var onClose = innerParams.onClose,
        onAfterClose = innerParams.onAfterClose,
        willClose = innerParams.willClose,
        didClose = innerParams.didClose;
    runDidClose(popup, willClose, onClose);

    if (animationIsSupported) {
      animatePopup(instance, popup, container, innerParams.returnFocus, didClose || onAfterClose);
    } else {
      // Otherwise, remove immediately
      removePopupAndResetState(instance, container, innerParams.returnFocus, didClose || onAfterClose);
    }
  };

  var runDidClose = function runDidClose(popup, willClose, onClose) {
    if (willClose !== null && typeof willClose === 'function') {
      willClose(popup);
    } else if (onClose !== null && typeof onClose === 'function') {
      onClose(popup); // @deprecated
    }
  };

  var animatePopup = function animatePopup(instance, popup, container, returnFocus, didClose) {
    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);
    popup.addEventListener(animationEndEvent, function (e) {
      if (e.target === popup) {
        globalState.swalCloseEventFinishedCallback();
        delete globalState.swalCloseEventFinishedCallback;
      }
    });
  };

  var triggerDidCloseAndDispose = function triggerDidCloseAndDispose(instance, didClose) {
    setTimeout(function () {
      if (typeof didClose === 'function') {
        didClose();
      }

      instance._destroy();
    });
  };

  function setButtonsDisabled(instance, buttons, disabled) {
    var domCache = privateProps.domCache.get(instance);
    buttons.forEach(function (button) {
      domCache[button].disabled = disabled;
    });
  }

  function setInputDisabled(input, disabled) {
    if (!input) {
      return false;
    }

    if (input.type === 'radio') {
      var radiosContainer = input.parentNode.parentNode;
      var radios = radiosContainer.querySelectorAll('input');

      for (var i = 0; i < radios.length; i++) {
        radios[i].disabled = disabled;
      }
    } else {
      input.disabled = disabled;
    }
  }

  function enableButtons() {
    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);
  }
  function disableButtons() {
    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);
  }
  function enableInput() {
    return setInputDisabled(this.getInput(), false);
  }
  function disableInput() {
    return setInputDisabled(this.getInput(), true);
  }

  function showValidationMessage(error) {
    var domCache = privateProps.domCache.get(this);
    var params = privateProps.innerParams.get(this);
    setInnerHtml(domCache.validationMessage, error);
    domCache.validationMessage.className = swalClasses['validation-message'];

    if (params.customClass && params.customClass.validationMessage) {
      addClass(domCache.validationMessage, params.customClass.validationMessage);
    }

    show(domCache.validationMessage);
    var input = this.getInput();

    if (input) {
      input.setAttribute('aria-invalid', true);
      input.setAttribute('aria-describedBy', swalClasses['validation-message']);
      focusInput(input);
      addClass(input, swalClasses.inputerror);
    }
  } // Hide block with validation message

  function resetValidationMessage$1() {
    var domCache = privateProps.domCache.get(this);

    if (domCache.validationMessage) {
      hide(domCache.validationMessage);
    }

    var input = this.getInput();

    if (input) {
      input.removeAttribute('aria-invalid');
      input.removeAttribute('aria-describedBy');
      removeClass(input, swalClasses.inputerror);
    }
  }

  function getProgressSteps$1() {
    var domCache = privateProps.domCache.get(this);
    return domCache.progressSteps;
  }

  var Timer = /*#__PURE__*/function () {
    function Timer(callback, delay) {
      _classCallCheck(this, Timer);

      this.callback = callback;
      this.remaining = delay;
      this.running = false;
      this.start();
    }

    _createClass(Timer, [{
      key: "start",
      value: function start() {
        if (!this.running) {
          this.running = true;
          this.started = new Date();
          this.id = setTimeout(this.callback, this.remaining);
        }

        return this.remaining;
      }
    }, {
      key: "stop",
      value: function stop() {
        if (this.running) {
          this.running = false;
          clearTimeout(this.id);
          this.remaining -= new Date() - this.started;
        }

        return this.remaining;
      }
    }, {
      key: "increase",
      value: function increase(n) {
        var running = this.running;

        if (running) {
          this.stop();
        }

        this.remaining += n;

        if (running) {
          this.start();
        }

        return this.remaining;
      }
    }, {
      key: "getTimerLeft",
      value: function getTimerLeft() {
        if (this.running) {
          this.stop();
          this.start();
        }

        return this.remaining;
      }
    }, {
      key: "isRunning",
      value: function isRunning() {
        return this.running;
      }
    }]);

    return Timer;
  }();

  var defaultInputValidators = {
    email: function email(string, validationMessage) {
      return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');
    },
    url: function url(string, validationMessage) {
      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013
      return /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');
    }
  };

  function setDefaultInputValidators(params) {
    // Use default `inputValidator` for supported input types if not provided
    if (!params.inputValidator) {
      Object.keys(defaultInputValidators).forEach(function (key) {
        if (params.input === key) {
          params.inputValidator = defaultInputValidators[key];
        }
      });
    }
  }

  function validateCustomTargetElement(params) {
    // Determine if the custom target element is valid
    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {
      warn('Target parameter is not valid, defaulting to "body"');
      params.target = 'body';
    }
  }
  /**
   * Set type, text and actions on popup
   *
   * @param params
   * @returns {boolean}
   */


  function setParameters(params) {
    setDefaultInputValidators(params); // showLoaderOnConfirm && preConfirm

    if (params.showLoaderOnConfirm && !params.preConfirm) {
      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\n' + 'https://sweetalert2.github.io/#ajax-request');
    } // params.animation will be actually used in renderPopup.js
    // but in case when params.animation is a function, we need to call that function
    // before popup (re)initialization, so it'll be possible to check Swal.isVisible()
    // inside the params.animation function


    params.animation = callIfFunction(params.animation);
    validateCustomTargetElement(params); // Replace newlines with <br> in title

    if (typeof params.title === 'string') {
      params.title = params.title.split('\n').join('<br />');
    }

    init(params);
  }

  var swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];
  var getTemplateParams = function getTemplateParams(params) {
    var template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;

    if (!template) {
      return {};
    }

    var templateContent = template.content || template; // IE11

    showWarningsForElements(templateContent);

    var result = _extends(getSwalParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));

    return result;
  };

  var getSwalParams = function getSwalParams(templateContent) {
    var result = {};
    toArray(templateContent.querySelectorAll('swal-param')).forEach(function (param) {
      showWarningsForAttributes(param, ['name', 'value']);
      var paramName = param.getAttribute('name');
      var value = param.getAttribute('value');

      if (typeof defaultParams[paramName] === 'boolean' && value === 'false') {
        value = false;
      }

      if (_typeof(defaultParams[paramName]) === 'object') {
        value = JSON.parse(value);
      }

      result[paramName] = value;
    });
    return result;
  };

  var getSwalButtons = function getSwalButtons(templateContent) {
    var result = {};
    toArray(templateContent.querySelectorAll('swal-button')).forEach(function (button) {
      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);
      var type = button.getAttribute('type');
      result["".concat(type, "ButtonText")] = button.innerHTML;
      result["show".concat(capitalizeFirstLetter(type), "Button")] = true;

      if (button.hasAttribute('color')) {
        result["".concat(type, "ButtonColor")] = button.getAttribute('color');
      }

      if (button.hasAttribute('aria-label')) {
        result["".concat(type, "ButtonAriaLabel")] = button.getAttribute('aria-label');
      }
    });
    return result;
  };

  var getSwalImage = function getSwalImage(templateContent) {
    var result = {};
    var image = templateContent.querySelector('swal-image');

    if (image) {
      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);

      if (image.hasAttribute('src')) {
        result.imageUrl = image.getAttribute('src');
      }

      if (image.hasAttribute('width')) {
        result.imageWidth = image.getAttribute('width');
      }

      if (image.hasAttribute('height')) {
        result.imageHeight = image.getAttribute('height');
      }

      if (image.hasAttribute('alt')) {
        result.imageAlt = image.getAttribute('alt');
      }
    }

    return result;
  };

  var getSwalIcon = function getSwalIcon(templateContent) {
    var result = {};
    var icon = templateContent.querySelector('swal-icon');

    if (icon) {
      showWarningsForAttributes(icon, ['type', 'color']);

      if (icon.hasAttribute('type')) {
        result.icon = icon.getAttribute('type');
      }

      if (icon.hasAttribute('color')) {
        result.iconColor = icon.getAttribute('color');
      }

      result.iconHtml = icon.innerHTML;
    }

    return result;
  };

  var getSwalInput = function getSwalInput(templateContent) {
    var result = {};
    var input = templateContent.querySelector('swal-input');

    if (input) {
      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);
      result.input = input.getAttribute('type') || 'text';

      if (input.hasAttribute('label')) {
        result.inputLabel = input.getAttribute('label');
      }

      if (input.hasAttribute('placeholder')) {
        result.inputPlaceholder = input.getAttribute('placeholder');
      }

      if (input.hasAttribute('value')) {
        result.inputValue = input.getAttribute('value');
      }
    }

    var inputOptions = templateContent.querySelectorAll('swal-input-option');

    if (inputOptions.length) {
      result.inputOptions = {};
      toArray(inputOptions).forEach(function (option) {
        showWarningsForAttributes(option, ['value']);
        var optionValue = option.getAttribute('value');
        var optionName = option.innerHTML;
        result.inputOptions[optionValue] = optionName;
      });
    }

    return result;
  };

  var getSwalStringParams = function getSwalStringParams(templateContent, paramNames) {
    var result = {};

    for (var i in paramNames) {
      var paramName = paramNames[i];
      var tag = templateContent.querySelector(paramName);

      if (tag) {
        showWarningsForAttributes(tag, []);
        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();
      }
    }

    return result;
  };

  var showWarningsForElements = function showWarningsForElements(template) {
    var allowedElements = swalStringParams.concat(['swal-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);
    toArray(template.querySelectorAll('*')).forEach(function (el) {
      if (el.parentNode !== template) {
        // can't use template.children because of IE11
        return;
      }

      var tagName = el.tagName.toLowerCase();

      if (allowedElements.indexOf(tagName) === -1) {
        warn("Unrecognized element <".concat(tagName, ">"));
      }
    });
  };

  var showWarningsForAttributes = function showWarningsForAttributes(el, allowedAttributes) {
    toArray(el.attributes).forEach(function (attribute) {
      if (allowedAttributes.indexOf(attribute.name) === -1) {
        warn(["Unrecognized attribute \"".concat(attribute.name, "\" on <").concat(el.tagName.toLowerCase(), ">."), "".concat(allowedAttributes.length ? "Allowed attributes are: ".concat(allowedAttributes.join(', ')) : 'To set the value, use HTML within the element.')]);
      }
    });
  };

  var SHOW_CLASS_TIMEOUT = 10;
  /**
   * Open popup, add necessary classes and styles, fix scrollbar
   *
   * @param params
   */

  var openPopup = function openPopup(params) {
    var container = getContainer();
    var popup = getPopup();

    if (typeof params.willOpen === 'function') {
      params.willOpen(popup);
    } else if (typeof params.onBeforeOpen === 'function') {
      params.onBeforeOpen(popup); // @deprecated
    }

    var bodyStyles = window.getComputedStyle(document.body);
    var initialBodyOverflow = bodyStyles.overflowY;
    addClasses$1(container, popup, params); // scrolling is 'hidden' until animation is done, after that 'auto'

    setTimeout(function () {
      setScrollingVisibility(container, popup);
    }, SHOW_CLASS_TIMEOUT);

    if (isModal()) {
      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);
      setAriaHidden();
    }

    if (!isToast() && !globalState.previousActiveElement) {
      globalState.previousActiveElement = document.activeElement;
    }

    runDidOpen(popup, params);
    removeClass(container, swalClasses['no-transition']);
  };

  var runDidOpen = function runDidOpen(popup, params) {
    if (typeof params.didOpen === 'function') {
      setTimeout(function () {
        return params.didOpen(popup);
      });
    } else if (typeof params.onOpen === 'function') {
      setTimeout(function () {
        return params.onOpen(popup);
      }); // @deprecated
    }
  };

  var swalOpenAnimationFinished = function swalOpenAnimationFinished(event) {
    var popup = getPopup();

    if (event.target !== popup) {
      return;
    }

    var container = getContainer();
    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);
    container.style.overflowY = 'auto';
  };

  var setScrollingVisibility = function setScrollingVisibility(container, popup) {
    if (animationEndEvent && hasCssAnimation(popup)) {
      container.style.overflowY = 'hidden';
      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);
    } else {
      container.style.overflowY = 'auto';
    }
  };

  var fixScrollContainer = function fixScrollContainer(container, scrollbarPadding, initialBodyOverflow) {
    iOSfix();
    IEfix();

    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {
      fixScrollbar();
    } // sweetalert2/issues/1247


    setTimeout(function () {
      container.scrollTop = 0;
    });
  };

  var addClasses$1 = function addClasses(container, popup, params) {
    addClass(container, params.showClass.backdrop); // the workaround with setting/unsetting opacity is needed for #2019 and 2059

    popup.style.setProperty('opacity', '0', 'important');
    show(popup);
    setTimeout(function () {
      // Animate popup right after showing it
      addClass(popup, params.showClass.popup); // and remove the opacity workaround

      popup.style.removeProperty('opacity');
    }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062

    addClass([document.documentElement, document.body], swalClasses.shown);

    if (params.heightAuto && params.backdrop && !params.toast) {
      addClass([document.documentElement, document.body], swalClasses['height-auto']);
    }
  };

  var handleInputOptionsAndValue = function handleInputOptionsAndValue(instance, params) {
    if (params.input === 'select' || params.input === 'radio') {
      handleInputOptions(instance, params);
    } else if (['text', 'email', 'number', 'tel', 'textarea'].indexOf(params.input) !== -1 && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {
      handleInputValue(instance, params);
    }
  };
  var getInputValue = function getInputValue(instance, innerParams) {
    var input = instance.getInput();

    if (!input) {
      return null;
    }

    switch (innerParams.input) {
      case 'checkbox':
        return getCheckboxValue(input);

      case 'radio':
        return getRadioValue(input);

      case 'file':
        return getFileValue(input);

      default:
        return innerParams.inputAutoTrim ? input.value.trim() : input.value;
    }
  };

  var getCheckboxValue = function getCheckboxValue(input) {
    return input.checked ? 1 : 0;
  };

  var getRadioValue = function getRadioValue(input) {
    return input.checked ? input.value : null;
  };

  var getFileValue = function getFileValue(input) {
    return input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;
  };

  var handleInputOptions = function handleInputOptions(instance, params) {
    var content = getContent();

    var processInputOptions = function processInputOptions(inputOptions) {
      return populateInputOptions[params.input](content, formatInputOptions(inputOptions), params);
    };

    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {
      showLoading(getConfirmButton());
      asPromise(params.inputOptions).then(function (inputOptions) {
        instance.hideLoading();
        processInputOptions(inputOptions);
      });
    } else if (_typeof(params.inputOptions) === 'object') {
      processInputOptions(params.inputOptions);
    } else {
      error("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(_typeof(params.inputOptions)));
    }
  };

  var handleInputValue = function handleInputValue(instance, params) {
    var input = instance.getInput();
    hide(input);
    asPromise(params.inputValue).then(function (inputValue) {
      input.value = params.input === 'number' ? parseFloat(inputValue) || 0 : "".concat(inputValue);
      show(input);
      input.focus();
      instance.hideLoading();
    })["catch"](function (err) {
      error("Error in inputValue promise: ".concat(err));
      input.value = '';
      show(input);
      input.focus();
      instance.hideLoading();
    });
  };

  var populateInputOptions = {
    select: function select(content, inputOptions, params) {
      var select = getChildByClass(content, swalClasses.select);

      var renderOption = function renderOption(parent, optionLabel, optionValue) {
        var option = document.createElement('option');
        option.value = optionValue;
        setInnerHtml(option, optionLabel);
        option.selected = isSelected(optionValue, params.inputValue);
        parent.appendChild(option);
      };

      inputOptions.forEach(function (inputOption) {
        var optionValue = inputOption[0];
        var optionLabel = inputOption[1]; // <optgroup> spec:
        // https://www.w3.org/TR/html401/interact/forms.html#h-17.6
        // "...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)..."
        // check whether this is a <optgroup>

        if (Array.isArray(optionLabel)) {
          // if it is an array, then it is an <optgroup>
          var optgroup = document.createElement('optgroup');
          optgroup.label = optionValue;
          optgroup.disabled = false; // not configurable for now

          select.appendChild(optgroup);
          optionLabel.forEach(function (o) {
            return renderOption(optgroup, o[1], o[0]);
          });
        } else {
          // case of <option>
          renderOption(select, optionLabel, optionValue);
        }
      });
      select.focus();
    },
    radio: function radio(content, inputOptions, params) {
      var radio = getChildByClass(content, swalClasses.radio);
      inputOptions.forEach(function (inputOption) {
        var radioValue = inputOption[0];
        var radioLabel = inputOption[1];
        var radioInput = document.createElement('input');
        var radioLabelElement = document.createElement('label');
        radioInput.type = 'radio';
        radioInput.name = swalClasses.radio;
        radioInput.value = radioValue;

        if (isSelected(radioValue, params.inputValue)) {
          radioInput.checked = true;
        }

        var label = document.createElement('span');
        setInnerHtml(label, radioLabel);
        label.className = swalClasses.label;
        radioLabelElement.appendChild(radioInput);
        radioLabelElement.appendChild(label);
        radio.appendChild(radioLabelElement);
      });
      var radios = radio.querySelectorAll('input');

      if (radios.length) {
        radios[0].focus();
      }
    }
  };
  /**
   * Converts `inputOptions` into an array of `[value, label]`s
   * @param inputOptions
   */

  var formatInputOptions = function formatInputOptions(inputOptions) {
    var result = [];

    if (typeof Map !== 'undefined' && inputOptions instanceof Map) {
      inputOptions.forEach(function (value, key) {
        var valueFormatted = value;

        if (_typeof(valueFormatted) === 'object') {
          // case of <optgroup>
          valueFormatted = formatInputOptions(valueFormatted);
        }

        result.push([key, valueFormatted]);
      });
    } else {
      Object.keys(inputOptions).forEach(function (key) {
        var valueFormatted = inputOptions[key];

        if (_typeof(valueFormatted) === 'object') {
          // case of <optgroup>
          valueFormatted = formatInputOptions(valueFormatted);
        }

        result.push([key, valueFormatted]);
      });
    }

    return result;
  };

  var isSelected = function isSelected(optionValue, inputValue) {
    return inputValue && inputValue.toString() === optionValue.toString();
  };

  var handleConfirmButtonClick = function handleConfirmButtonClick(instance, innerParams) {
    instance.disableButtons();

    if (innerParams.input) {
      handleConfirmOrDenyWithInput(instance, innerParams, 'confirm');
    } else {
      confirm(instance, innerParams, true);
    }
  };
  var handleDenyButtonClick = function handleDenyButtonClick(instance, innerParams) {
    instance.disableButtons();

    if (innerParams.returnInputValueOnDeny) {
      handleConfirmOrDenyWithInput(instance, innerParams, 'deny');
    } else {
      deny(instance, innerParams, false);
    }
  };
  var handleCancelButtonClick = function handleCancelButtonClick(instance, dismissWith) {
    instance.disableButtons();
    dismissWith(DismissReason.cancel);
  };

  var handleConfirmOrDenyWithInput = function handleConfirmOrDenyWithInput(instance, innerParams, type
  /* type is either 'confirm' or 'deny' */
  ) {
    var inputValue = getInputValue(instance, innerParams);

    if (innerParams.inputValidator) {
      handleInputValidator(instance, innerParams, inputValue);
    } else if (!instance.getInput().checkValidity()) {
      instance.enableButtons();
      instance.showValidationMessage(innerParams.validationMessage);
    } else if (type === 'deny') {
      deny(instance, innerParams, inputValue);
    } else {
      confirm(instance, innerParams, inputValue);
    }
  };

  var handleInputValidator = function handleInputValidator(instance, innerParams, inputValue) {
    instance.disableInput();
    var validationPromise = Promise.resolve().then(function () {
      return asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage));
    });
    validationPromise.then(function (validationMessage) {
      instance.enableButtons();
      instance.enableInput();

      if (validationMessage) {
        instance.showValidationMessage(validationMessage);
      } else {
        confirm(instance, innerParams, inputValue);
      }
    });
  };

  var deny = function deny(instance, innerParams, value) {
    if (innerParams.showLoaderOnDeny) {
      showLoading(getDenyButton());
    }

    if (innerParams.preDeny) {
      var preDenyPromise = Promise.resolve().then(function () {
        return asPromise(innerParams.preDeny(value, innerParams.validationMessage));
      });
      preDenyPromise.then(function (preDenyValue) {
        if (preDenyValue === false) {
          instance.hideLoading();
        } else {
          instance.closePopup({
            isDenied: true,
            value: typeof preDenyValue === 'undefined' ? value : preDenyValue
          });
        }
      });
    } else {
      instance.closePopup({
        isDenied: true,
        value: value
      });
    }
  };

  var succeedWith = function succeedWith(instance, value) {
    instance.closePopup({
      isConfirmed: true,
      value: value
    });
  };

  var confirm = function confirm(instance, innerParams, value) {
    if (innerParams.showLoaderOnConfirm) {
      showLoading(); // TODO: make showLoading an *instance* method
    }

    if (innerParams.preConfirm) {
      instance.resetValidationMessage();
      var preConfirmPromise = Promise.resolve().then(function () {
        return asPromise(innerParams.preConfirm(value, innerParams.validationMessage));
      });
      preConfirmPromise.then(function (preConfirmValue) {
        if (isVisible(getValidationMessage()) || preConfirmValue === false) {
          instance.hideLoading();
        } else {
          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);
        }
      });
    } else {
      succeedWith(instance, value);
    }
  };

  var addKeydownHandler = function addKeydownHandler(instance, globalState, innerParams, dismissWith) {
    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {
      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {
        capture: globalState.keydownListenerCapture
      });
      globalState.keydownHandlerAdded = false;
    }

    if (!innerParams.toast) {
      globalState.keydownHandler = function (e) {
        return keydownHandler(instance, e, dismissWith);
      };

      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();
      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;
      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {
        capture: globalState.keydownListenerCapture
      });
      globalState.keydownHandlerAdded = true;
    }
  }; // Focus handling

  var setFocus = function setFocus(innerParams, index, increment) {
    var focusableElements = getFocusableElements(); // search for visible elements and select the next possible match

    if (focusableElements.length) {
      index = index + increment; // rollover to first item

      if (index === focusableElements.length) {
        index = 0; // go to last item
      } else if (index === -1) {
        index = focusableElements.length - 1;
      }

      return focusableElements[index].focus();
    } // no visible focusable elements, focus the popup


    getPopup().focus();
  };
  var arrowKeysNextButton = ['ArrowRight', 'ArrowDown', 'Right', 'Down' // IE11
  ];
  var arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp', 'Left', 'Up' // IE11
  ];
  var escKeys = ['Escape', 'Esc' // IE11
  ];

  var keydownHandler = function keydownHandler(instance, e, dismissWith) {
    var innerParams = privateProps.innerParams.get(instance);

    if (!innerParams) {
      return; // This instance has already been destroyed
    }

    if (innerParams.stopKeydownPropagation) {
      e.stopPropagation();
    } // ENTER


    if (e.key === 'Enter') {
      handleEnter(instance, e, innerParams); // TAB
    } else if (e.key === 'Tab') {
      handleTab(e, innerParams); // ARROWS - switch focus between buttons
    } else if ([].concat(arrowKeysNextButton, arrowKeysPreviousButton).indexOf(e.key) !== -1) {
      handleArrows(e.key); // ESC
    } else if (escKeys.indexOf(e.key) !== -1) {
      handleEsc(e, innerParams, dismissWith);
    }
  };

  var handleEnter = function handleEnter(instance, e, innerParams) {
    // #720 #721
    if (e.isComposing) {
      return;
    }

    if (e.target && instance.getInput() && e.target.outerHTML === instance.getInput().outerHTML) {
      if (['textarea', 'file'].indexOf(innerParams.input) !== -1) {
        return; // do not submit
      }

      clickConfirm();
      e.preventDefault();
    }
  };

  var handleTab = function handleTab(e, innerParams) {
    var targetElement = e.target;
    var focusableElements = getFocusableElements();
    var btnIndex = -1;

    for (var i = 0; i < focusableElements.length; i++) {
      if (targetElement === focusableElements[i]) {
        btnIndex = i;
        break;
      }
    }

    if (!e.shiftKey) {
      // Cycle to the next button
      setFocus(innerParams, btnIndex, 1);
    } else {
      // Cycle to the prev button
      setFocus(innerParams, btnIndex, -1);
    }

    e.stopPropagation();
    e.preventDefault();
  };

  var handleArrows = function handleArrows(key) {
    var confirmButton = getConfirmButton();
    var denyButton = getDenyButton();
    var cancelButton = getCancelButton();

    if (!([confirmButton, denyButton, cancelButton].indexOf(document.activeElement) !== -1)) {
      return;
    }

    var sibling = arrowKeysNextButton.indexOf(key) !== -1 ? 'nextElementSibling' : 'previousElementSibling';
    var buttonToFocus = document.activeElement[sibling];

    if (buttonToFocus) {
      buttonToFocus.focus();
    }
  };

  var handleEsc = function handleEsc(e, innerParams, dismissWith) {
    if (callIfFunction(innerParams.allowEscapeKey)) {
      e.preventDefault();
      dismissWith(DismissReason.esc);
    }
  };

  var handlePopupClick = function handlePopupClick(instance, domCache, dismissWith) {
    var innerParams = privateProps.innerParams.get(instance);

    if (innerParams.toast) {
      handleToastClick(instance, domCache, dismissWith);
    } else {
      // Ignore click events that had mousedown on the popup but mouseup on the container
      // This can happen when the user drags a slider
      handleModalMousedown(domCache); // Ignore click events that had mousedown on the container but mouseup on the popup

      handleContainerMousedown(domCache);
      handleModalClick(instance, domCache, dismissWith);
    }
  };

  var handleToastClick = function handleToastClick(instance, domCache, dismissWith) {
    // Closing toast by internal click
    domCache.popup.onclick = function () {
      var innerParams = privateProps.innerParams.get(instance);

      if (innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton || innerParams.timer || innerParams.input) {
        return;
      }

      dismissWith(DismissReason.close);
    };
  };

  var ignoreOutsideClick = false;

  var handleModalMousedown = function handleModalMousedown(domCache) {
    domCache.popup.onmousedown = function () {
      domCache.container.onmouseup = function (e) {
        domCache.container.onmouseup = undefined; // We only check if the mouseup target is the container because usually it doesn't
        // have any other direct children aside of the popup

        if (e.target === domCache.container) {
          ignoreOutsideClick = true;
        }
      };
    };
  };

  var handleContainerMousedown = function handleContainerMousedown(domCache) {
    domCache.container.onmousedown = function () {
      domCache.popup.onmouseup = function (e) {
        domCache.popup.onmouseup = undefined; // We also need to check if the mouseup target is a child of the popup

        if (e.target === domCache.popup || domCache.popup.contains(e.target)) {
          ignoreOutsideClick = true;
        }
      };
    };
  };

  var handleModalClick = function handleModalClick(instance, domCache, dismissWith) {
    domCache.container.onclick = function (e) {
      var innerParams = privateProps.innerParams.get(instance);

      if (ignoreOutsideClick) {
        ignoreOutsideClick = false;
        return;
      }

      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {
        dismissWith(DismissReason.backdrop);
      }
    };
  };

  function _main(userParams) {
    var mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    showWarningsForParams(_extends({}, mixinParams, userParams));

    if (globalState.currentInstance) {
      globalState.currentInstance._destroy();
    }

    globalState.currentInstance = this;
    var innerParams = prepareParams(userParams, mixinParams);
    setParameters(innerParams);
    Object.freeze(innerParams); // clear the previous timer

    if (globalState.timeout) {
      globalState.timeout.stop();
      delete globalState.timeout;
    } // clear the restore focus timeout


    clearTimeout(globalState.restoreFocusTimeout);
    var domCache = populateDomCache(this);
    render(this, innerParams);
    privateProps.innerParams.set(this, innerParams);
    return swalPromise(this, domCache, innerParams);
  }

  var prepareParams = function prepareParams(userParams, mixinParams) {
    var templateParams = getTemplateParams(userParams);

    var params = _extends({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131


    params.showClass = _extends({}, defaultParams.showClass, params.showClass);
    params.hideClass = _extends({}, defaultParams.hideClass, params.hideClass); // @deprecated

    if (userParams.animation === false) {
      params.showClass = {
        popup: 'swal2-noanimation',
        backdrop: 'swal2-noanimation'
      };
      params.hideClass = {};
    }

    return params;
  };

  var swalPromise = function swalPromise(instance, domCache, innerParams) {
    return new Promise(function (resolve) {
      // functions to handle all closings/dismissals
      var dismissWith = function dismissWith(dismiss) {
        instance.closePopup({
          isDismissed: true,
          dismiss: dismiss
        });
      };

      privateMethods.swalPromiseResolve.set(instance, resolve);

      domCache.confirmButton.onclick = function () {
        return handleConfirmButtonClick(instance, innerParams);
      };

      domCache.denyButton.onclick = function () {
        return handleDenyButtonClick(instance, innerParams);
      };

      domCache.cancelButton.onclick = function () {
        return handleCancelButtonClick(instance, dismissWith);
      };

      domCache.closeButton.onclick = function () {
        return dismissWith(DismissReason.close);
      };

      handlePopupClick(instance, domCache, dismissWith);
      addKeydownHandler(instance, globalState, innerParams, dismissWith);
      handleInputOptionsAndValue(instance, innerParams);
      openPopup(innerParams);
      setupTimer(globalState, innerParams, dismissWith);
      initFocus(domCache, innerParams); // Scroll container to top on open (#1247, #1946)

      setTimeout(function () {
        domCache.container.scrollTop = 0;
      });
    });
  };

  var populateDomCache = function populateDomCache(instance) {
    var domCache = {
      popup: getPopup(),
      container: getContainer(),
      content: getContent(),
      actions: getActions(),
      confirmButton: getConfirmButton(),
      denyButton: getDenyButton(),
      cancelButton: getCancelButton(),
      loader: getLoader(),
      closeButton: getCloseButton(),
      validationMessage: getValidationMessage(),
      progressSteps: getProgressSteps()
    };
    privateProps.domCache.set(instance, domCache);
    return domCache;
  };

  var setupTimer = function setupTimer(globalState$$1, innerParams, dismissWith) {
    var timerProgressBar = getTimerProgressBar();
    hide(timerProgressBar);

    if (innerParams.timer) {
      globalState$$1.timeout = new Timer(function () {
        dismissWith('timer');
        delete globalState$$1.timeout;
      }, innerParams.timer);

      if (innerParams.timerProgressBar) {
        show(timerProgressBar);
        setTimeout(function () {
          if (globalState$$1.timeout && globalState$$1.timeout.running) {
            // timer can be already stopped or unset at this point
            animateTimerProgressBar(innerParams.timer);
          }
        });
      }
    }
  };

  var initFocus = function initFocus(domCache, innerParams) {
    if (innerParams.toast) {
      return;
    }

    if (!callIfFunction(innerParams.allowEnterKey)) {
      return blurActiveElement();
    }

    if (!focusButton(domCache, innerParams)) {
      setFocus(innerParams, -1, 1);
    }
  };

  var focusButton = function focusButton(domCache, innerParams) {
    if (innerParams.focusDeny && isVisible(domCache.denyButton)) {
      domCache.denyButton.focus();
      return true;
    }

    if (innerParams.focusCancel && isVisible(domCache.cancelButton)) {
      domCache.cancelButton.focus();
      return true;
    }

    if (innerParams.focusConfirm && isVisible(domCache.confirmButton)) {
      domCache.confirmButton.focus();
      return true;
    }

    return false;
  };

  var blurActiveElement = function blurActiveElement() {
    if (document.activeElement && typeof document.activeElement.blur === 'function') {
      document.activeElement.blur();
    }
  };

  /**
   * Updates popup parameters.
   */

  function update(params) {
    var popup = getPopup();
    var innerParams = privateProps.innerParams.get(this);

    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {
      return warn("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
    }

    var validUpdatableParams = {}; // assign valid params from `params` to `defaults`

    Object.keys(params).forEach(function (param) {
      if (Swal.isUpdatableParameter(param)) {
        validUpdatableParams[param] = params[param];
      } else {
        warn("Invalid parameter to update: \"".concat(param, "\". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js\n\nIf you think this parameter should be updatable, request it here: https://github.com/sweetalert2/sweetalert2/issues/new?template=02_feature_request.md"));
      }
    });

    var updatedParams = _extends({}, innerParams, validUpdatableParams);

    render(this, updatedParams);
    privateProps.innerParams.set(this, updatedParams);
    Object.defineProperties(this, {
      params: {
        value: _extends({}, this.params, params),
        writable: false,
        enumerable: true
      }
    });
  }

  function _destroy() {
    var domCache = privateProps.domCache.get(this);
    var innerParams = privateProps.innerParams.get(this);

    if (!innerParams) {
      return; // This instance has already been destroyed
    } // Check if there is another Swal closing


    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {
      globalState.swalCloseEventFinishedCallback();
      delete globalState.swalCloseEventFinishedCallback;
    } // Check if there is a swal disposal defer timer


    if (globalState.deferDisposalTimer) {
      clearTimeout(globalState.deferDisposalTimer);
      delete globalState.deferDisposalTimer;
    }

    runDidDestroy(innerParams);
    disposeSwal(this);
  }

  var runDidDestroy = function runDidDestroy(innerParams) {
    if (typeof innerParams.didDestroy === 'function') {
      innerParams.didDestroy();
    } else if (typeof innerParams.onDestroy === 'function') {
      innerParams.onDestroy(); // @deprecated
    }
  };

  var disposeSwal = function disposeSwal(instance) {
    // Unset this.params so GC will dispose it (#1569)
    delete instance.params; // Unset globalState props so GC will dispose globalState (#1569)

    delete globalState.keydownHandler;
    delete globalState.keydownTarget; // Unset WeakMaps so GC will be able to dispose them (#1569)

    unsetWeakMaps(privateProps);
    unsetWeakMaps(privateMethods);
  };

  var unsetWeakMaps = function unsetWeakMaps(obj) {
    for (var i in obj) {
      obj[i] = new WeakMap();
    }
  };



  var instanceMethods = /*#__PURE__*/Object.freeze({
    hideLoading: hideLoading,
    disableLoading: hideLoading,
    getInput: getInput$1,
    close: close,
    closePopup: close,
    closeModal: close,
    closeToast: close,
    enableButtons: enableButtons,
    disableButtons: disableButtons,
    enableInput: enableInput,
    disableInput: disableInput,
    showValidationMessage: showValidationMessage,
    resetValidationMessage: resetValidationMessage$1,
    getProgressSteps: getProgressSteps$1,
    _main: _main,
    update: update,
    _destroy: _destroy
  });

  var currentInstance;

  var SweetAlert = /*#__PURE__*/function () {
    function SweetAlert() {
      _classCallCheck(this, SweetAlert);

      // Prevent run in Node env
      if (typeof window === 'undefined') {
        return;
      } // Check for the existence of Promise


      if (typeof Promise === 'undefined') {
        error('This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)');
      }

      currentInstance = this;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var outerParams = Object.freeze(this.constructor.argsToParams(args));
      Object.defineProperties(this, {
        params: {
          value: outerParams,
          writable: false,
          enumerable: true,
          configurable: true
        }
      });

      var promise = this._main(this.params);

      privateProps.promise.set(this, promise);
    } // `catch` cannot be the name of a module export, so we define our thenable methods here instead


    _createClass(SweetAlert, [{
      key: "then",
      value: function then(onFulfilled) {
        var promise = privateProps.promise.get(this);
        return promise.then(onFulfilled);
      }
    }, {
      key: "finally",
      value: function _finally(onFinally) {
        var promise = privateProps.promise.get(this);
        return promise["finally"](onFinally);
      }
    }]);

    return SweetAlert;
  }(); // Assign instance methods from src/instanceMethods/*.js to prototype


  _extends(SweetAlert.prototype, instanceMethods); // Assign static methods from src/staticMethods/*.js to constructor


  _extends(SweetAlert, staticMethods); // Proxy to instance methods to constructor, for now, for backwards compatibility


  Object.keys(instanceMethods).forEach(function (key) {
    SweetAlert[key] = function () {
      if (currentInstance) {
        var _currentInstance;

        return (_currentInstance = currentInstance)[key].apply(_currentInstance, arguments);
      }
    };
  });
  SweetAlert.DismissReason = DismissReason;
  SweetAlert.version = '10.16.6';

  var Swal = SweetAlert;
  Swal["default"] = Swal;

  return Swal;

}));
if (typeof this !== 'undefined' && this.Sweetalert2){  this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2}

"undefined"!=typeof document&&function(e,t){var n=e.createElement("style");if(e.getElementsByTagName("head")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,".swal2-popup.swal2-toast{flex-direction:column;align-items:stretch;width:auto;padding:1.25em;overflow-y:hidden;background:#fff;box-shadow:0 0 .625em #d9d9d9}.swal2-popup.swal2-toast .swal2-header{flex-direction:row;padding:0}.swal2-popup.swal2-toast .swal2-title{flex-grow:1;justify-content:flex-start;margin:0 .625em;font-size:1em}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.3125em auto;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{position:static;width:.8em;height:.8em;line-height:.8}.swal2-popup.swal2-toast .swal2-content{justify-content:flex-start;margin:0 .625em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container{padding:.625em 0 0}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-icon{width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{font-size:.25em}}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{flex:1;flex-basis:auto!important;align-self:stretch;width:auto;height:2.2em;height:auto;margin:0 .3125em;margin-top:.3125em;padding:0}.swal2-popup.swal2-toast .swal2-styled{margin:.125em .3125em;padding:.3125em .625em;font-size:1em}.swal2-popup.swal2-toast .swal2-styled:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(100,150,200,.5)}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:flex;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;flex-direction:row;align-items:center;justify-content:center;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-top{align-items:flex-start}.swal2-container.swal2-top-left,.swal2-container.swal2-top-start{align-items:flex-start;justify-content:flex-start}.swal2-container.swal2-top-end,.swal2-container.swal2-top-right{align-items:flex-start;justify-content:flex-end}.swal2-container.swal2-center{align-items:center}.swal2-container.swal2-center-left,.swal2-container.swal2-center-start{align-items:center;justify-content:flex-start}.swal2-container.swal2-center-end,.swal2-container.swal2-center-right{align-items:center;justify-content:flex-end}.swal2-container.swal2-bottom{align-items:flex-end}.swal2-container.swal2-bottom-left,.swal2-container.swal2-bottom-start{align-items:flex-end;justify-content:flex-start}.swal2-container.swal2-bottom-end,.swal2-container.swal2-bottom-right{align-items:flex-end;justify-content:flex-end}.swal2-container.swal2-bottom-end>:first-child,.swal2-container.swal2-bottom-left>:first-child,.swal2-container.swal2-bottom-right>:first-child,.swal2-container.swal2-bottom-start>:first-child,.swal2-container.swal2-bottom>:first-child{margin-top:auto}.swal2-container.swal2-grow-fullscreen>.swal2-modal{display:flex!important;flex:1;align-self:stretch;justify-content:center}.swal2-container.swal2-grow-row>.swal2-modal{display:flex!important;flex:1;align-content:center;justify-content:center}.swal2-container.swal2-grow-column{flex:1;flex-direction:column}.swal2-container.swal2-grow-column.swal2-bottom,.swal2-container.swal2-grow-column.swal2-center,.swal2-container.swal2-grow-column.swal2-top{align-items:center}.swal2-container.swal2-grow-column.swal2-bottom-left,.swal2-container.swal2-grow-column.swal2-bottom-start,.swal2-container.swal2-grow-column.swal2-center-left,.swal2-container.swal2-grow-column.swal2-center-start,.swal2-container.swal2-grow-column.swal2-top-left,.swal2-container.swal2-grow-column.swal2-top-start{align-items:flex-start}.swal2-container.swal2-grow-column.swal2-bottom-end,.swal2-container.swal2-grow-column.swal2-bottom-right,.swal2-container.swal2-grow-column.swal2-center-end,.swal2-container.swal2-grow-column.swal2-center-right,.swal2-container.swal2-grow-column.swal2-top-end,.swal2-container.swal2-grow-column.swal2-top-right{align-items:flex-end}.swal2-container.swal2-grow-column>.swal2-modal{display:flex!important;flex:1;align-content:center;justify-content:center}.swal2-container.swal2-no-transition{transition:none!important}.swal2-container:not(.swal2-top):not(.swal2-top-start):not(.swal2-top-end):not(.swal2-top-left):not(.swal2-top-right):not(.swal2-center-start):not(.swal2-center-end):not(.swal2-center-left):not(.swal2-center-right):not(.swal2-bottom):not(.swal2-bottom-start):not(.swal2-bottom-end):not(.swal2-bottom-left):not(.swal2-bottom-right):not(.swal2-grow-fullscreen)>.swal2-modal{margin:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-container .swal2-modal{margin:0!important}}.swal2-popup{display:none;position:relative;box-sizing:border-box;flex-direction:column;justify-content:center;width:32em;max-width:100%;padding:1.25em;border:none;border-radius:5px;background:#fff;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-header{display:flex;flex-direction:column;align-items:center;padding:0 1.8em}.swal2-title{position:relative;max-width:100%;margin:0 0 .4em;padding:0;color:#595959;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:100%;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 1.1em;box-shadow:none;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#2778c4;color:#fff;font-size:1em}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#d14529;color:#fff;font-size:1em}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#757575;color:#fff;font-size:1em}.swal2-styled:focus{outline:0;box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1.25em 0 0;padding:1em 0 0;border-top:1px solid #eee;color:#545454;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;height:.25em;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:1.25em auto}.swal2-close{position:absolute;z-index:2;top:0;right:0;align-items:center;justify-content:center;width:1.2em;height:1.2em;padding:0;overflow:hidden;transition:color .1s ease-out;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-size:2.5em;line-height:1.2;cursor:pointer}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-content{z-index:1;justify-content:center;margin:0;padding:0 1.6em;color:#545454;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em auto}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:100%;transition:border-color .3s,box-shadow .3s;border:1px solid #d9d9d9;border-radius:.1875em;background:inherit;box-shadow:inset 0 1px 1px rgba(0,0,0,.06);color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file:-ms-input-placeholder,.swal2-input:-ms-input-placeholder,.swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em auto;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-input[type=number]{max-width:10em}.swal2-file{background:inherit;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:inherit;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto}.swal2-validation-message{align-items:center;justify-content:center;margin:0 -2.7em;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:\"!\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:1.25em auto 1.875em;border:.25em solid transparent;border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:0 0 1.25em;padding:0;background:inherit;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{right:auto;left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@supports (-ms-accelerator:true){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{top:auto;right:auto;bottom:auto;left:auto;max-width:calc(100% - .625em * 2);background-color:transparent!important}body.swal2-no-backdrop .swal2-container>.swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}body.swal2-no-backdrop .swal2-container.swal2-top{top:0;left:50%;transform:translateX(-50%)}body.swal2-no-backdrop .swal2-container.swal2-top-left,body.swal2-no-backdrop .swal2-container.swal2-top-start{top:0;left:0}body.swal2-no-backdrop .swal2-container.swal2-top-end,body.swal2-no-backdrop .swal2-container.swal2-top-right{top:0;right:0}body.swal2-no-backdrop .swal2-container.swal2-center{top:50%;left:50%;transform:translate(-50%,-50%)}body.swal2-no-backdrop .swal2-container.swal2-center-left,body.swal2-no-backdrop .swal2-container.swal2-center-start{top:50%;left:0;transform:translateY(-50%)}body.swal2-no-backdrop .swal2-container.swal2-center-end,body.swal2-no-backdrop .swal2-container.swal2-center-right{top:50%;right:0;transform:translateY(-50%)}body.swal2-no-backdrop .swal2-container.swal2-bottom{bottom:0;left:50%;transform:translateX(-50%)}body.swal2-no-backdrop .swal2-container.swal2-bottom-left,body.swal2-no-backdrop .swal2-container.swal2-bottom-start{bottom:0;left:0}body.swal2-no-backdrop .swal2-container.swal2-bottom-end,body.swal2-no-backdrop .swal2-container.swal2-bottom-right{right:0;bottom:0}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{background-color:transparent}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					result = fn();
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app": 0,
/******/ 			"css/app": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) var result = runtime(__webpack_require__);
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./resources/js/app.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./resources/css/app.css")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;